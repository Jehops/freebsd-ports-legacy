--- platform10/lib/nbexec.orig	2009-07-02 21:02:40.000000000 +0200
+++ platform10/lib/nbexec	2009-07-02 21:06:25.000000000 +0200
@@ -150,15 +150,15 @@
         Darwin*)
         jdkhome="/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Home"
         java_bin=`which java 2>&1`
-        if [ $? -ne 0 ] || [ -n "`echo \"$java_bin\" | grep \"no java in\"`" ] ; then
+        if [ $? -ne 0 ] || [ -n "`echo \"$java_bin\" | %%GREP%% \"no java in\"`" ] ; then
             # no java in path... strange
             java_bin=/usr/bin/java
         fi
         if [ -f "$java_bin" ] ; then
             java_version=`"$java_bin" -fullversion 2>&1`
-            if [ $? -eq 0 ] && [ -n "`echo \"$java_version\" | grep 1.6.0`" ] ; then
+            if [ $? -eq 0 ] && [ -n "`echo \"$java_version\" | %%GREP%% 1.6.0`" ] ; then
                 # don`t use Developer Preview versions
-                if [ -z "`echo \"$java_version\" | grep \"1.6.0_b\|1.6.0-b\|1.6.0_01\|1.6.0_04\|-dp\"`" ] ; then
+                if [ -z "`echo \"$java_version\" | %%GREP%% \"1.6.0_b\|1.6.0-b\|1.6.0_01\|1.6.0_04\|-dp\"`" ] ; then
                     if [ -f "/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home/bin/java" ] ; then
                         jdkhome="/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home"
                     elif [ -f "/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home/bin/java" ] ; then
@@ -191,7 +191,7 @@
 # if heap dump on OOME is supported enable it
 if "${jdkhome}/bin/java" -XX:+HeapDumpOnOutOfMemoryError > /dev/null ; then
    jargs="$jargs -XX:+HeapDumpOnOutOfMemoryError"
-   if ! echo $jargs | grep -- "-XX:HeapDumpPath=" > /dev/null ; then
+   if ! echo $jargs | %%GREP%% -- "-XX:HeapDumpPath=" > /dev/null ; then
       jargs="$jargs -XX:HeapDumpPath=\"${userdir}/var/log/heapdump.hprof\""
    fi
 fi
@@ -210,7 +210,7 @@
         if [ "`echo "${dir}"/*.$ex`" != "${dir}/*.$ex" ] ; then
             for x in "${dir}"/*.$ex ; do
                 subx=`basename "$x"`
-                if echo "$paths" | fgrep -v "$subpath$subx" > /dev/null ; then
+                if echo "$paths" | %%FGREP%% -v "$subpath$subx" > /dev/null ; then
                     if [ ! -z "$cp" ] ; then cp="$cp:" ; fi
                     cp="$cp$x"
                     if [ ! -z "$paths" ] ; then paths="$paths:" ; fi
@@ -352,7 +352,7 @@
 }
 
 detect_gnome_proxy () {
-    gconftool=/usr/bin/gconftool-2
+    gconftool=%%GCONFTOOL2%%
     if [ -x  $gconftool ] ; then
         proxy_mode=`$gconftool --get /system/proxy/mode 2>/dev/null`
         if [ "$proxy_mode" = "manual" ] ; then
@@ -384,18 +384,18 @@
 detect_kde_proxy () {
     kioslaverc="${HOME}/.kde/share/config/kioslaverc"
     if [ -f $kioslaverc ] ; then
-        if /bin/grep -q 'ProxyType=1' "$kioslaverc" ; then
-            http_proxy_tmp=`/bin/grep 'httpProxy=http://' "$kioslaverc"`
+        if %%GREP%% -q 'ProxyType=1' "$kioslaverc" ; then
+            http_proxy_tmp=`%%GREP%% 'httpProxy=http://' "$kioslaverc"`
             if [ $? ] ; then
                 http_proxy_tmp=`echo $http_proxy_tmp | /bin/sed 's/httpProxy=http:\/\///'`
                 return 0
             fi
-            http_non_proxy_hosts=`/bin/grep 'NoProxyFor=' "$kioslaverc"`
+            http_non_proxy_hosts=`%%GREP%% 'NoProxyFor=' "$kioslaverc"`
             if [ $? ] ; then
                 http_non_proxy_hosts=`echo $http_non_proxy_hosts | /bin/sed 's/NoProxyFor=//'`
             fi
         else
-            if /bin/grep -q 'ProxyType=0' "$kioslaverc" ; then
+            if %%GREP%% -q 'ProxyType=0' "$kioslaverc" ; then
                 detect_system_proxy
                 if [ -z "$http_proxy_tmp" ]; then
                     http_proxy_tmp="DIRECT"
@@ -419,14 +419,14 @@
 close
 EOF
 
-    if /usr/bin/grep -q "ProxyAuto.*: *1" ${scutil_out} >/dev/null ; then
+    if %%GREP%% -q "ProxyAuto.*: *1" ${scutil_out} >/dev/null ; then
         rm ${scutil_out}
         return 1
     fi
 
-    if /usr/bin/grep -q "HTTPEnable *: *1" ${scutil_out} ; then
-	http_proxy_host=`/usr/bin/grep HTTPProxy ${scutil_out} | /usr/bin/awk '{print $3}'`
-	http_proxy_port=`/usr/bin/grep HTTPPort ${scutil_out} | /usr/bin/awk '{print $3} '`
+    if %%GREP%% -q "HTTPEnable *: *1" ${scutil_out} ; then
+	http_proxy_host=`%%GREP%% HTTPProxy ${scutil_out} | %%AWK%% '{print $3}'`
+	http_proxy_port=`%%GREP%% HTTPPort ${scutil_out} | %%AWK%% '{print $4} '`
         http_proxy_tmp=$http_proxy_host:$http_proxy_port
         rm ${scutil_out}
         return 0
