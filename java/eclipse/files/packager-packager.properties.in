###############################################################################
# Copyright (c) 2005, 2006 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################

repo = ${packagingInfo}/repo
p2.repo.name = FreeBSD Eclipse Repository
product = ${packagingInfo}/sdk.product
generate.p2.metadata=true
p2.metadata.repo = file:${repo}
p2.artifact.repo = file:${repo}
p2.flavor = tooling
p2.publish.artifacts=true
p2.metadata.repo.name=${p2.repo.name}
p2.artifact.repo.name=${p2.repo.name}

generateVersionsList=true

################## CONTENT ##########################
# A comma separated list of feature ids that will be part of the archive.
# This list must completely cover the features you want and all their dependencies.
featureList = org.eclipse.sdk

# A comma seperated list of the components from which the features listed 
# in featureList can be found.  This is used to optimize the set of zips downloaded.
# The values given here should match those found at the end of the lines in the map file
# Specify * if you don't know
#componentFilter=full,root,root-launcher,root-sdk
componentFilter=*

# The zip content types to fetch.  Like the componentFilter, this filters the set of 
# available zips and allows the packager to optimize the set of zips downloaded.
#contentFilter=runtime
contentFilter=sdk

# The platform configuration (e.g., os, ws, arch) being packaged. *,*,* can be
# specified when the config is completely platform independent. Only one configuration
# can be specified at a time.
config = freebsd,gtk,%%ECLIPSE_ARCH%%

archivesFormat = freebsd, gtk, %%ECLIPSE_ARCH%%-tar

################ FOLDERS ############################
#The directory used as a base for the all process
baseDirectory = ${packagingInfo}

# The place in which all the scripts will be contained
workingDirectory = ${baseDirectory}/workingPlace
buildDirectory = ${workingDirectory}

# The folder in which all the zips will be downloaded
downloadDirectory = ${baseDirectory}/toPackage

# The folder where all the operations are being done
tempDirectory = ${baseDirectory}/temp

# The place in which the zips are located
sourceFolder = ${downloadDirectory}

################# SOURCES ###########################
# A comma separated list of the path where features and plugins are located.
# Locations can either be relative or absolute.
# An entry must point to one level above the "features" and "plugins" directory
#featurePaths = eclipse
#baseLocation=${tempDirectory}/${featurePaths}
target = ${tempDirectory}/eclipse

################## MISC ##########################
# This controls the build id in the default name of the archive
timestamp=%%ECLIPSE_BUILDTIMESTAMP%%
buildType=%%ECLIPSE_BUILDTYPE%%
buildId=%%ECLIPSE_BUILDID%%
buildLabel=%%ECLIPSE_BUILDID%%

archiveNamePrefix=eclipse

# extra arguments to be passed to zip / unzip (-y is usually used on unix for zip) / tar
zipargs=-y -q
unzipArgs=-qq

# the prefix in the archive
archivePrefix=eclipse

# the folder in which the files that will be added to the archive will be placed
collectingFolder=eclipse


############### PACKAGING.PROPERTIES #############################
# a relative path to the file containing the properties for element to package
packagingProperties = packaging.properties
