--- drivers/lirc.h.orig	Sat Jan  4 19:45:07 2003
+++ drivers/lirc.h	Sat Jan  4 19:44:24 2003
@@ -3,9 +3,6 @@
 #ifndef _LINUX_LIRC_H
 #define _LINUX_LIRC_H
 
-#include <asm/types.h>
-#include <linux/ioctl.h>
-
 #define PULSE_BIT  0x01000000
 #define PULSE_MASK 0x00FFFFFF
 
@@ -64,32 +61,32 @@
  * IOCTL commands for lirc driver
  */
 
-#define LIRC_GET_FEATURES              _IOR('i', 0x00000000, __u32)
+#define LIRC_GET_FEATURES              _IOR('i', 0x00000000, u_int32_t)
 
-#define LIRC_GET_SEND_MODE             _IOR('i', 0x00000001, __u32)
-#define LIRC_GET_REC_MODE              _IOR('i', 0x00000002, __u32)
-#define LIRC_GET_SEND_CARRIER          _IOR('i', 0x00000003, __u32)
-#define LIRC_GET_REC_CARRIER           _IOR('i', 0x00000004, __u32)
-#define LIRC_GET_SEND_DUTY_CYCLE       _IOR('i', 0x00000005, __u32)
-#define LIRC_GET_REC_DUTY_CYCLE        _IOR('i', 0x00000006, __u32)
+#define LIRC_GET_SEND_MODE             _IOR('i', 0x00000001, u_int32_t)
+#define LIRC_GET_REC_MODE              _IOR('i', 0x00000002, u_int32_t)
+#define LIRC_GET_SEND_CARRIER          _IOR('i', 0x00000003, u_int32_t)
+#define LIRC_GET_REC_CARRIER           _IOR('i', 0x00000004, u_int32_t)
+#define LIRC_GET_SEND_DUTY_CYCLE       _IOR('i', 0x00000005, u_int32_t)
+#define LIRC_GET_REC_DUTY_CYCLE        _IOR('i', 0x00000006, u_int32_t)
 
 /* code length in bits, currently only for LIRC_MODE_LIRCCODE */
-#define LIRC_GET_LENGTH                _IOR('i', 0x0000000f, __u32)
+#define LIRC_GET_LENGTH                _IOR('i', 0x0000000f, u_int32_t)
 
-#define LIRC_SET_SEND_MODE             _IOW('i', 0x00000011, __u32)
-#define LIRC_SET_REC_MODE              _IOW('i', 0x00000012, __u32)
+#define LIRC_SET_SEND_MODE             _IOW('i', 0x00000011, u_int32_t)
+#define LIRC_SET_REC_MODE              _IOW('i', 0x00000012, u_int32_t)
 /* Note: these can reset the according pulse_width */
-#define LIRC_SET_SEND_CARRIER          _IOW('i', 0x00000013, __u32)
-#define LIRC_SET_REC_CARRIER           _IOW('i', 0x00000014, __u32)
-#define LIRC_SET_SEND_DUTY_CYCLE       _IOW('i', 0x00000015, __u32)
-#define LIRC_SET_REC_DUTY_CYCLE        _IOW('i', 0x00000016, __u32)
+#define LIRC_SET_SEND_CARRIER          _IOW('i', 0x00000013, u_int32_t)
+#define LIRC_SET_REC_CARRIER           _IOW('i', 0x00000014, u_int32_t)
+#define LIRC_SET_SEND_DUTY_CYCLE       _IOW('i', 0x00000015, u_int32_t)
+#define LIRC_SET_REC_DUTY_CYCLE        _IOW('i', 0x00000016, u_int32_t)
 
 /* to set a range use
    LIRC_SET_REC_DUTY_CYCLE_RANGE/LIRC_SET_REC_CARRIER_RANGE with the
    lower bound first and later
    LIRC_SET_REC_DUTY_CYCLE/LIRC_SET_REC_CARRIER with the upper bound */
 
-#define LIRC_SET_REC_DUTY_CYCLE_RANGE  _IOW('i', 0x0000001e, __u32)
-#define LIRC_SET_REC_CARRIER_RANGE     _IOW('i', 0x0000001f, __u32)
+#define LIRC_SET_REC_DUTY_CYCLE_RANGE  _IOW('i', 0x0000001e, u_int32_t)
+#define LIRC_SET_REC_CARRIER_RANGE     _IOW('i', 0x0000001f, u_int32_t)
 
 #endif
