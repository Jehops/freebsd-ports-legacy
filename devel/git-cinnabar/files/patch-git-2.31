https://github.com/glandium/git-cinnabar/commit/ce38b14f5efc

--- cinnabar/helper.py.orig	2020-11-12 02:19:34 UTC
+++ cinnabar/helper.py
@@ -326,7 +326,7 @@ class GitHgHelper(BaseHelper):
 
     @classmethod
     def diff_tree(self, rev1, rev2, detect_copy=False):
-        extra = () if not detect_copy else (b'-C100%',)
+        extra = () if not detect_copy else (b'-C', b'-C')
         extra = extra + (b'--ignore-submodules=dirty', b'--')
         with self.query(b'diff-tree', rev1, rev2, *extra) as stdout:
             data = self._read_data(stdout)
--- helper/GIT-VERSION.mk.orig	2020-11-12 02:19:34 UTC
+++ helper/GIT-VERSION.mk
@@ -1,2 +1,2 @@
-GIT_VERSION ?= v2.30.0
+GIT_VERSION ?= v2.31.0
 WINDOWS_GIT_VERSION ?= $(GIT_VERSION).windows.1
--- helper/cinnabar-fast-import.c.orig	2020-11-12 02:19:34 UTC
+++ helper/cinnabar-fast-import.c
@@ -1152,7 +1152,7 @@ static void for_each_changegroup_chunk(FILE *in, int v
 	struct rev_chunk chunk = { STRBUF_INIT, };
 	struct hg_object_id delta_node = {{ 0, }};
 
-	while (read_chunk(in, &buf), buf.len) {
+	while (read_rev_chunk(in, &buf), buf.len) {
 		rev_chunk_from_memory(&chunk, &buf, cg2 ? NULL : &delta_node);
 		if (!cg2 && is_null_hg_oid(&delta_node))
 			hg_oidcpy(&delta_node, chunk.parent1);
@@ -1239,7 +1239,7 @@ static void do_store(struct string_list *args)
 		/* manifests */
 		for_each_changegroup_chunk(stdin, version, store_manifest);
 		/* files */
-		while (read_chunk(stdin, &buf), buf.len) {
+		while (read_rev_chunk(stdin, &buf), buf.len) {
 			strbuf_release(&buf);
 			for_each_changegroup_chunk(stdin, version, store_file);
 		}
--- helper/hg-bundle.c.orig	2020-11-12 02:19:34 UTC
+++ helper/hg-bundle.c
@@ -86,7 +86,7 @@ void copy_bundle_to_strbuf(FILE *in, struct strbuf *ou
 	writer_close(&writer);
 }
 
-void read_chunk(FILE *in, struct strbuf *out)
+void read_rev_chunk(FILE *in, struct strbuf *out)
 {
 	// See copy_bundle2_chunk and copy_changegroup_chunk.
 	char buf[4];
--- helper/hg-bundle.h.orig	2020-11-12 02:19:34 UTC
+++ helper/hg-bundle.h
@@ -11,7 +11,7 @@ void copy_bundle(FILE *in, struct writer *out);
 void copy_bundle_to_file(FILE *in, FILE *out);
 void copy_bundle_to_strbuf(FILE *in, struct strbuf *out);
 
-void read_chunk(FILE *in, struct strbuf *out);
+void read_rev_chunk(FILE *in, struct strbuf *out);
 
 struct rev_chunk {
 	struct strbuf raw;
--- /dev/null
+++ helper/object-file.c.patch
@@ -0,0 +1,13 @@
+diff --git a/object-file.c b/object-file.c
+index 188de57634..7b06e56727 100644
+--- a/object-file.c
++++ b/object-file.c
+@@ -1868,7 +1868,7 @@ static int freshen_packed_object(const struct object_id *oid)
+ 	return 1;
+ }
+ 
+-int write_object_file(const void *buf, unsigned long len, const char *type,
++int real_write_object_file(const void *buf, unsigned long len, const char *type,
+ 		      struct object_id *oid)
+ {
+ 	char hdr[MAX_HEADER_LEN];
--- helper/sha1-file.c.patch.orig	2020-11-12 02:19:34 UTC
+++ helper/sha1-file.c.patch
@@ -1,13 +0,0 @@
-diff --git a/sha1-file.c b/sha1-file.c
-index 188de57634..7b06e56727 100644
---- a/sha1-file.c
-+++ b/sha1-file.c
-@@ -1868,7 +1868,7 @@ static int freshen_packed_object(const struct object_id *oid)
- 	return 1;
- }
- 
--int write_object_file(const void *buf, unsigned long len, const char *type,
-+int real_write_object_file(const void *buf, unsigned long len, const char *type,
- 		      struct object_id *oid)
- {
- 	char hdr[MAX_HEADER_LEN];
