Script started on Mon Aug  2 14:08:10 2010
===> Validating port with portlint
looks fine.
===> flags: PREFIX=/tmp/libtpl-1.5 NO_DEPENDS=yes PKG_DBDIR=/tmp/pkg_db.xpBdgjHR --
===> Cleaning workspace before port test
===>  Cleaning for libtpl-1.5
===>  Removing existing /tmp/libtpl-1.5 dir
===>  Vulnerability check disabled, database not found
===>  License accepted by the user
===>  Extracting for libtpl-1.5
=> MD5 Checksum OK for libtpl-1.5.tar.bz2.
=> SHA256 Checksum OK for libtpl-1.5.tar.bz2.
===>  Patching for libtpl-1.5
===>  Configuring for libtpl-1.5
checking for a BSD-compatible install... /usr/bin/install -c -o root -g wheel
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/local/bin/gmkdir -p
checking for gawk... no
checking for mawk... no
checking for nawk... nawk
checking whether make sets $(MAKE)... yes
checking for gcc... cc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether cc accepts -g... yes
checking for cc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of cc... gcc3
checking build system type... amd64-portbld-freebsd8.1
checking host system type... amd64-portbld-freebsd8.1
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by cc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... (cached) 262144
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... no
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for ar... ar
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from cc object... ok
checking how to run the C preprocessor... cc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if cc supports -fno-rtti -fno-exceptions... no
checking for cc option to produce PIC... -fPIC -DPIC
checking if cc PIC flag -fPIC -DPIC works... yes
checking if cc static flag -static works... yes
checking if cc supports -c -o file.o... yes
checking if cc supports -c -o file.o... (cached) yes
checking whether the cc linker (/usr/bin/ld) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... freebsd8.1 ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
configure: creating ./config.status
config.status: creating src/win/Makefile
config.status: creating src/Makefile
config.status: creating Makefile
config.status: creating config/config.h
config.status: executing depfiles commands
config.status: executing libtool commands
===>  Building for libtpl-1.5
Making all in src
Making all in win
/bin/sh ../../libtool --tag=CC    --mode=compile cc -DHAVE_CONFIG_H -I. -I../../config      -O2 -pipe -fno-strict-aliasing -MT nonempty.lo -MD -MP -MF .deps/nonempty.Tpo -c -o nonempty.lo nonempty.c
libtool: compile:  cc -DHAVE_CONFIG_H -I. -I../../config -O2 -pipe -fno-strict-aliasing -MT nonempty.lo -MD -MP -MF .deps/nonempty.Tpo -c nonempty.c  -fPIC -DPIC -o .libs/nonempty.o
libtool: compile:  cc -DHAVE_CONFIG_H -I. -I../../config -O2 -pipe -fno-strict-aliasing -MT nonempty.lo -MD -MP -MF .deps/nonempty.Tpo -c nonempty.c -o nonempty.o >/dev/null 2>&1
mv -f .deps/nonempty.Tpo .deps/nonempty.Plo
/bin/sh ../../libtool --tag=CC    --mode=link cc  -O2 -pipe -fno-strict-aliasing    -o libwinmmap.la  nonempty.lo  
libtool: link: ar cru .libs/libwinmmap.a .libs/nonempty.o 
libtool: link: ranlib .libs/libwinmmap.a
libtool: link: ( cd ".libs" && rm -f "libwinmmap.la" && ln -s "../libwinmmap.la" "libwinmmap.la" )
/bin/sh ../libtool --tag=CC    --mode=compile cc -DHAVE_CONFIG_H -I. -I../config      -O2 -pipe -fno-strict-aliasing -MT tpl.lo -MD -MP -MF .deps/tpl.Tpo -c -o tpl.lo tpl.c
libtool: compile:  cc -DHAVE_CONFIG_H -I. -I../config -O2 -pipe -fno-strict-aliasing -MT tpl.lo -MD -MP -MF .deps/tpl.Tpo -c tpl.c  -fPIC -DPIC -o .libs/tpl.o
libtool: compile:  cc -DHAVE_CONFIG_H -I. -I../config -O2 -pipe -fno-strict-aliasing -MT tpl.lo -MD -MP -MF .deps/tpl.Tpo -c tpl.c -o tpl.o >/dev/null 2>&1
mv -f .deps/tpl.Tpo .deps/tpl.Plo
/bin/sh ../libtool --tag=CC    --mode=link cc  -O2 -pipe -fno-strict-aliasing  -no-undefined -version-info 0:0:0  -o libtpl.la -rpath /tmp/libtpl-1.5/lib tpl.lo win/libwinmmap.la 
libtool: link: cc -shared  .libs/tpl.o  -Wl,--whole-archive win/.libs/libwinmmap.a -Wl,--no-whole-archive     -Wl,-soname -Wl,libtpl.so.0 -o .libs/libtpl.so.0
libtool: link: (cd ".libs" && rm -f "libtpl.so" && ln -s "libtpl.so.0" "libtpl.so")
libtool: link: (cd ".libs" && rm -f "libtpl.so" && ln -s "libtpl.so.0" "libtpl.so")
libtool: link: (cd .libs/libtpl.lax/libwinmmap.a && ar x "/usr/ports-cvs/libtpl/work/libtpl-1.5/src/win/.libs/libwinmmap.a")
libtool: link: ar cru .libs/libtpl.a  tpl.o  .libs/libtpl.lax/libwinmmap.a/nonempty.o 
libtool: link: ranlib .libs/libtpl.a
libtool: link: rm -fr .libs/libtpl.lax
libtool: link: ( cd ".libs" && rm -f "libtpl.la" && ln -s "../libtpl.la" "libtpl.la" )
===>  Installing for libtpl-1.5
===>   Generating temporary packing list
===>  Checking if devel/libtpl already installed
Making install in src
Making install in win
test -z "/tmp/libtpl-1.5/lib" || /usr/local/bin/gmkdir -p "/tmp/libtpl-1.5/lib"
 /bin/sh ../libtool   --mode=install /usr/bin/install -c -o root -g wheel  'libtpl.la' '/tmp/libtpl-1.5/lib/libtpl.la'
libtool: install: /usr/bin/install -c -o root -g wheel .libs/libtpl.so.0 /tmp/libtpl-1.5/lib/libtpl.so.0
libtool: install: (cd /tmp/libtpl-1.5/lib && { ln -s -f libtpl.so.0 libtpl.so || { rm -f libtpl.so && ln -s libtpl.so.0 libtpl.so; }; })
libtool: install: (cd /tmp/libtpl-1.5/lib && { ln -s -f libtpl.so.0 libtpl.so || { rm -f libtpl.so && ln -s libtpl.so.0 libtpl.so; }; })
libtool: install: /usr/bin/install -c -o root -g wheel .libs/libtpl.lai /tmp/libtpl-1.5/lib/libtpl.la
libtool: install: /usr/bin/install -c -o root -g wheel .libs/libtpl.a /tmp/libtpl-1.5/lib/libtpl.a
libtool: install: chmod 644 /tmp/libtpl-1.5/lib/libtpl.a
libtool: install: ranlib /tmp/libtpl-1.5/lib/libtpl.a
----------------------------------------------------------------------
Libraries have been installed in:
   /tmp/libtpl-1.5/lib

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable
     during execution
   - add LIBDIR to the `LD_RUN_PATH' environment variable
     during linking
   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------
test -z "/tmp/libtpl-1.5/include" || /usr/local/bin/gmkdir -p "/tmp/libtpl-1.5/include"
 install  -o root -g wheel -m 444 'tpl.h' '/tmp/libtpl-1.5/include/tpl.h'
install  -o root -g wheel -m 444 /usr/ports-cvs/libtpl/work/libtpl-1.5/doc/txt/userguide.txt /tmp/libtpl-1.5/share/doc/libtpl
===>   Running ldconfig
/sbin/ldconfig -m /tmp/libtpl-1.5/lib
===>   Registering installation for libtpl-1.5
===>  Building package for libtpl-1.5
Creating package /usr/ports/packages/All/libtpl-1.5.tbz
Registering depends:.
Creating bzip'd tar ball in '/usr/ports/packages/All/libtpl-1.5.tbz'
===> Checking pkg_info
libtpl-1.5          Tpl is a library for serializing C data
===> Checking shared library dependencies
/lib/libc.so.7
===>  Deinstalling for devel/libtpl
===>   Deinstalling libtpl-1.5
===> Extra files and directories check
===> Cleaning up after port test
===>  Cleaning for libtpl-1.5
===>  Removing existing /tmp/libtpl-1.5 dir
===> Done.

Script done on Mon Aug  2 14:08:49 2010
