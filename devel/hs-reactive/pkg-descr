Reactive is a simple foundation for programming reactive systems
functionally. Like Fran/FRP, it has a notions of (reactive)
behaviors and events.

Unlike most previous FRP implementations, Reactive has a hybrid
demand/data-driven implementation, as described in the paper:

 "Push-pull functional reactive programming",
 <http://conal.net/papers/push-pull-frp/>.

This version of Reactive has some serious bugs.

Import "FRP.Reactive" for FRP client apps.
To make a Reactive adapter for an imperative library,
import "FRP.Reactive.LegacyAdapters".

WWW: http://haskell.org/haskellwiki/reactive
