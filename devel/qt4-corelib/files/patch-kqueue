--- src/corelib/io/qfilesystemwatcher_kqueue.cpp.orig	2010-11-06 04:55:18.000000000 +0300
+++ src/corelib/io/qfilesystemwatcher_kqueue.cpp	2010-11-11 00:05:11.550910992 +0300
@@ -133,6 +133,14 @@
             perror("QKqueueFileSystemWatcherEngine::addPaths: open");
             continue;
         }
+        if (fd >= FD_SETSIZE / 2 && fd < FD_SETSIZE) {
+            int fddup = fcntl(fd, F_DUPFD, FD_SETSIZE);
+            if (fddup != -1) {
+                ::close(fd);
+                fd = fddup;
+            }
+        }
+        fcntl(fd, F_SETFD, FD_CLOEXEC);
 
         QT_STATBUF st;
         if (QT_FSTAT(fd, &st) == -1) {
@@ -157,7 +165,7 @@
         EV_SET(&kev,
                fd,
                EVFILT_VNODE,
-               EV_ADD | EV_ENABLE | EV_ONESHOT,
+               EV_ADD | EV_ENABLE | EV_CLEAR,
                NOTE_DELETE | NOTE_WRITE | NOTE_EXTEND | NOTE_ATTRIB | NOTE_RENAME | NOTE_REVOKE,
                0,
                0);
@@ -180,6 +188,8 @@
         idToPath.insert(id, path);
     }
 
+    locker.unlock();
+
     if (!isRunning())
         start();
     else
@@ -203,19 +213,7 @@
         if (x.isEmpty() || x != path)
             continue;
 
-        int fd = id < 0 ? -id : id;
-        struct kevent kev;
-        EV_SET(&kev,
-               fd,
-               EVFILT_VNODE,
-               EV_DELETE,
-               NOTE_DELETE | NOTE_WRITE | NOTE_EXTEND | NOTE_ATTRIB | NOTE_RENAME | NOTE_REVOKE,
-               0,
-               0);
-        if (kevent(kqfd, &kev, 1, 0, 0, 0) == -1) {
-            perror("QKqueueFileSystemWatcherEngine::removeWatch: kevent");
-        }
-        ::close(fd);
+        ::close(id < 0 ? -id : id);
 
         it.remove();
         if (id < 0)
@@ -225,11 +223,11 @@
     }
 
     if (pathToID.isEmpty()) {
-        stop();
         locker.unlock();
+        stop();
         wait();
-        locker.relock();
     } else {
+        locker.unlock();
         write(kqpipe[1], "@", 1);
     }
 
@@ -243,19 +241,18 @@
 
 void QKqueueFileSystemWatcherEngine::run()
 {
-    static const struct timespec ZeroTimeout = { 0, 0 };
-
     forever {
         struct kevent kev;
         DEBUG() << "QKqueueFileSystemWatcherEngine: waiting for kevents...";
         int r = kevent(kqfd, 0, 0, &kev, 1, 0);
         if (r < 0) {
+            if(errno == EINTR) {
+                DEBUG() << "QKqueueFileSystemWatcherEngine: kevent call was interrupted, restarting...";
+                continue;
+            }
             perror("QKqueueFileSystemWatcherEngine: error during kevent wait");
             return;
-        }
-
-        QMutexLocker locker(&mutex);
-        do {
+        } else {
             int fd = kev.ident;
 
             DEBUG() << "QKqueueFileSystemWatcherEngine: processing kevent" << kev.ident << kev.filter;
@@ -287,6 +284,8 @@
                     break;
                 }
             } else {
+                QMutexLocker locker(&mutex);
+
                 int id = fd;
                 QString path = idToPath.value(id);
                 if (path.isEmpty()) {
@@ -295,12 +294,12 @@
                     path = idToPath.value(id);
                     if (path.isEmpty()) {
                         DEBUG() << "QKqueueFileSystemWatcherEngine: received a kevent for a file we're not watching";
-                        goto process_next_event;
+                        continue;
                     }
                 }
                 if (kev.filter != EVFILT_VNODE) {
                     DEBUG() << "QKqueueFileSystemWatcherEngine: received a kevent with the wrong filter";
-                    goto process_next_event;
+                    continue;
                 }
 
                 if ((kev.fflags & (NOTE_DELETE | NOTE_REVOKE | NOTE_RENAME)) != 0) {
@@ -315,31 +314,15 @@
                     else
                         emit fileChanged(path, true);
                 } else {
-                    DEBUG() << path << "changed, re-enabling watch";
+                    DEBUG() << path << "changed";
 
                     if (id < 0)
                         emit directoryChanged(path, false);
                     else
                         emit fileChanged(path, false);
-
-                    // renable the watch
-                    EV_SET(&kev,
-                           fd,
-                           EVFILT_VNODE,
-                           EV_ADD | EV_ENABLE | EV_ONESHOT,
-                           NOTE_DELETE | NOTE_WRITE | NOTE_EXTEND | NOTE_ATTRIB | NOTE_RENAME | NOTE_REVOKE,
-                           0,
-                           0);
-                    if (kevent(kqfd, &kev, 1, 0, 0, 0) == -1) {
-                        perror("QKqueueFileSystemWatcherEngine::processKqueueEvents: kevent EV_ADD");
-                    }
                 }
             }
-
-            // are there any more?
-process_next_event:
-            r = kevent(kqfd, 0, 0, &kev, 1, &ZeroTimeout);
-        } while (r > 0);
+        }
     }
 }
 
