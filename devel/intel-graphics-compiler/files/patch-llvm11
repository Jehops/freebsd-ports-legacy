IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp:2216:41: error: no viable conversion from 'llvm::ElementCount' to 'unsigned int'
    return ConstantDataVector::getSplat(IGCLLVM::getElementCount(OperandWidth),
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/llvm11/include/llvm/IR/Constants.h:803:38: note: passing argument to parameter 'NumElts' here
  static Constant *getSplat(unsigned NumElts, Constant *Elt);
                                     ^

IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp:462:37: error: no member named 'getMask' in 'llvm::ShuffleVectorInst'
      NewVec1, NewVec2, ShuffleVec->getMask(), ShuffleVec->getName() + ".tpm");
                        ~~~~~~~~~~  ^

--- IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp.orig	2020-12-06 10:35:55 UTC
+++ IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp
@@ -2213,7 +2213,7 @@ static void decomposeSdivPow2(Instruction &Sdiv,
 
   auto createConstantVector = [](unsigned int OperandWidth, Type *Ty,
                                  int Value) {
-    return ConstantDataVector::getSplat(IGCLLVM::getElementCount(OperandWidth),
+    return ConstantVector::getSplat(IGCLLVM::getElementCount(OperandWidth),
                                         ConstantInt::get(Ty, Value));
   };
 
--- IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp.orig	2020-11-21 02:52:12 UTC
+++ IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp
@@ -459,7 +459,11 @@ bool GenXThreadPrivateMemory::replaceShuffleVector(
   Value *NewVec1 = lookForPtrReplacement(Vec1);
   Value *NewVec2 = lookForPtrReplacement(Vec2);
   auto NewShuffleVec = new ShuffleVectorInst(
+#if LLVM_VERSION_MAJOR < 11
       NewVec1, NewVec2, ShuffleVec->getMask(), ShuffleVec->getName() + ".tpm");
+#else
+      NewVec1, NewVec2, ShuffleVec->getShuffleMaskForBitcode(), ShuffleVec->getName() + ".tpm");
+#endif
   NewShuffleVec->insertAfter(ShuffleVec);
 
   auto CastToOldTy =
