IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp:2148:16: error: call to 'invertCondition' is ambiguous
        Mask = invertCondition(Mask);
               ^~~~~~~~~~~~~~~
IGC/VectorCompiler/lib/GenXCodeGen/GenXUtil.h:206:8: note: candidate function
Value *invertCondition(Value *Condition);
       ^
/usr/local/llvm11/include/llvm/Transforms/Utils/Local.h:557:8: note: candidate function
Value *invertCondition(Value *Condition);
       ^
IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp:2284:36: error: no viable conversion from 'llvm::ElementCount' to 'unsigned int'
                                   IGCLLVM::getElementCount(OperandWidth),
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/local/llvm11/include/llvm/IR/Constants.h:803:38: note: passing argument to parameter 'NumElts' here
  static Constant *getSplat(unsigned NumElts, Constant *Elt);
                                     ^
IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp:462:37: error: no member named 'getMask' in 'llvm::ShuffleVectorInst'
      NewVec1, NewVec2, ShuffleVec->getMask(), ShuffleVec->getName() + ".tpm");
                        ~~~~~~~~~~  ^

--- IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp.orig	2020-12-24 13:04:21 UTC
+++ IGC/VectorCompiler/lib/GenXCodeGen/GenXPatternMatch.cpp
@@ -2145,7 +2145,7 @@ static bool mergeToWrRegion(SelectInst *SI) {
       Value *Mask = SI->getCondition();
       // Invert mask if needed.
       if (Inverted)
-        Mask = invertCondition(Mask);
+        Mask = genx::invertCondition(Mask);
       // Create new wrregion.
       Region WrReg(Wr, BaleInfo());
       WrReg.Mask = Mask;
@@ -2280,7 +2280,7 @@ static void decomposeSdivPow2(Instruction &Sdiv,
   Builder.SetCurrentDebugLocation(Sdiv.getDebugLoc());
 
   auto createConstant = [](unsigned int OperandWidth, Type *Ty, int Value) {
-    return OperandWidth != 0 ? ConstantDataVector::getSplat(
+    return OperandWidth != 0 ? ConstantVector::getSplat(
                                    IGCLLVM::getElementCount(OperandWidth),
                                    ConstantInt::get(Ty, Value))
                              : ConstantInt::get(Ty, Value);
--- IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp.orig	2020-11-21 02:52:12 UTC
+++ IGC/VectorCompiler/lib/GenXCodeGen/GenXThreadPrivateMemory.cpp
@@ -459,7 +459,11 @@ bool GenXThreadPrivateMemory::replaceShuffleVector(
   Value *NewVec1 = lookForPtrReplacement(Vec1);
   Value *NewVec2 = lookForPtrReplacement(Vec2);
   auto NewShuffleVec = new ShuffleVectorInst(
+#if LLVM_VERSION_MAJOR < 11
       NewVec1, NewVec2, ShuffleVec->getMask(), ShuffleVec->getName() + ".tpm");
+#else
+      NewVec1, NewVec2, ShuffleVec->getShuffleMaskForBitcode(), ShuffleVec->getName() + ".tpm");
+#endif
   NewShuffleVec->insertAfter(ShuffleVec);
 
   auto CastToOldTy =
