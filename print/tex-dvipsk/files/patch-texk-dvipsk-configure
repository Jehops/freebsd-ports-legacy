--- configure.orig	2014-04-18 03:29:57.000000000 +0900
+++ configure	2014-08-22 14:50:25.000000000 +0900
@@ -777,6 +777,7 @@
 with_system_kpathsea
 with_kpathsea_includes
 with_kpathsea_libdir
+with_paper
 '
       ac_precious_vars='build_alias
 host_alias
@@ -786,7 +787,8 @@
 LDFLAGS
 LIBS
 CPPFLAGS
-CPP'
+CPP
+CPPFLAGS'
 ac_subdirs_all='squeeze'
 
 # Initialize some variables set by options.
@@ -1438,6 +1440,7 @@
                           kpathsea headers installed in DIR
   --with-kpathsea-libdir=DIR
                           kpathsea library installed in DIR
+  --with-paper=DIR        use paper include/library files from DIR
 
 Some influential environment variables:
   CC          C compiler command
@@ -7832,6 +7835,12 @@
 # <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
 mkdir_p='$(MKDIR_P)'
 
+# For better backward compatibility.  To be removed once Automake 1.9.x
+# dies out for good.  For more background, see:
+# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
+# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
+mkdir_p='$(MKDIR_P)'
+
 # We need awk for the "check" target.  The system "awk" is bad on
 # some platforms.
 # Always define AMTAR for backward compatibility.  Yes, it's still used
@@ -14657,6 +14666,102 @@
 fi
 
 
+eval CPPFLAGS=\"$LIBPAPER_INCLUDES \$CPPFLAGS\"
+eval LIBS=\"$LIBPAPER_LIBS \$LIBS\"
+
+_cppflags=$CPPFLAGS _ldflags=$LDFLAGS
+
+# Check whether --with-paper was given.
+if test "${with_paper+set}" = set; then :
+  withval=$with_paper; if test -d "$withval"; then
+     CPPFLAGS="$CPPFLAGS -I$withval/include"
+     LDFLAGS="$LDFLAGS -L$withval/lib"
+   fi
+fi
+
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking for paper header files" >&5
+$as_echo_n "checking for paper header files... " >&6; }
+ cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <paper.h>
+int
+main ()
+{
+struct paper *p;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing paperpswidth" >&5
+$as_echo_n "checking for library containing paperpswidth... " >&6; }
+if ${ac_cv_search_paperpswidth+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_func_search_save_LIBS=$LIBS
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char paperpswidth ();
+int
+main ()
+{
+return paperpswidth ();
+  ;
+  return 0;
+}
+_ACEOF
+for ac_lib in '' paper; do
+  if test -z "$ac_lib"; then
+    ac_res="none required"
+  else
+    ac_res=-l$ac_lib
+    LIBS="-l$ac_lib LIBS="-lpaper $LIBS" $ac_func_search_save_LIBS"
+  fi
+  if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_search_paperpswidth=$ac_res
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext
+  if ${ac_cv_search_paperpswidth+:} false; then :
+  break
+fi
+done
+if ${ac_cv_search_paperpswidth+:} false; then :
+
+else
+  ac_cv_search_paperpswidth=no
+fi
+rm conftest.$ac_ext
+LIBS=$ac_func_search_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search_paperpswidth" >&5
+$as_echo "$ac_cv_search_paperpswidth" >&6; }
+ac_res=$ac_cv_search_paperpswidth
+if test "$ac_res" != no; then :
+  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
+
+$as_echo "#define HAVE_LIBPAPER 1" >>confdefs.h
+
+fi
+
+else
+  CPPFLAGS=$_cppflags
+   LDDFLAGS=$_ldflags
+   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+
 
 
 subdirs="$subdirs squeeze"
