*** gcc-head.mak.orig	Thu Dec 17 19:56:19 1998
--- gcc-head.mak	Fri Dec 25 19:23:30 1998
***************
*** 41,50 ****
  
  # If your system has installbsd, change install to installbsd in the next line.
  INSTALL = install -c
! INSTALL_PROGRAM = $(INSTALL) -m 755
! INSTALL_DATA = $(INSTALL) -m 644
  
! prefix = /usr/local
  exec_prefix = $(prefix)
  bindir = $(exec_prefix)/bin
  scriptdir = $(bindir)
--- 41,50 ----
  
  # If your system has installbsd, change install to installbsd in the next line.
  INSTALL = install -c
! INSTALL_PROGRAM = $(BSD_INSTALL_SCRIPT)
! INSTALL_DATA = $(BSD_INSTALL_DATA)
  
! prefix ?= /usr/local
  exec_prefix = $(prefix)
  bindir = $(exec_prefix)/bin
  scriptdir = $(bindir)
***************
*** 101,107 ****
  # You may need to change this if the IJG library version changes.
  # See jpeg.mak for more information.
  
! JSRCDIR=jpeg-6a
  JVERSION=6
  
  # Define the directory where the PNG library sources are stored,
--- 101,107 ----
  # You may need to change this if the IJG library version changes.
  # See jpeg.mak for more information.
  
! JSRCDIR=jpeg
  JVERSION=6
  
  # Define the directory where the PNG library sources are stored,
***************
*** 116,122 ****
  # what its name is.
  # See gs.mak and make.txt for more information.
  
! SHARE_LIBPNG=0
  LIBPNG_NAME=png
  
  # Define the directory where the zlib sources are stored.
--- 116,122 ----
  # what its name is.
  # See gs.mak and make.txt for more information.
  
! SHARE_LIBPNG=1
  LIBPNG_NAME=png
  
  # Define the directory where the zlib sources are stored.
***************
*** 128,134 ****
  # what its name is (usually libz, but sometimes libgz).
  # See gs.mak and make.txt for more information.
  
! SHARE_ZLIB=0
  #ZLIB_NAME=gz
  ZLIB_NAME=z
  
--- 128,134 ----
  # what its name is (usually libz, but sometimes libgz).
  # See gs.mak and make.txt for more information.
  
! SHARE_ZLIB=1
  #ZLIB_NAME=gz
  ZLIB_NAME=z
  
***************
*** 172,185 ****
  # We don't include -ansi, because this gets in the way of the platform-
  #   specific stuff that <math.h> typically needs; nevertheless, we expect
  #   gcc to accept ANSI-style function prototypes and function definitions.
! XCFLAGS=
  
! CFLAGS=-O $(GCFLAGS) $(XCFLAGS)
  
  # Define platform flags for ld.
  # SunOS 4.n may need -Bstatic.
  # XLDFLAGS can be set from the command line.
! XLDFLAGS=
  
  LDFLAGS=$(XLDFLAGS)
  
--- 172,185 ----
  # We don't include -ansi, because this gets in the way of the platform-
  #   specific stuff that <math.h> typically needs; nevertheless, we expect
  #   gcc to accept ANSI-style function prototypes and function definitions.
! XCFLAGS=-I$(PREFIX)/include
  
! CFLAGS+=-O $(GCFLAGS) $(XCFLAGS)
  
  # Define platform flags for ld.
  # SunOS 4.n may need -Bstatic.
  # XLDFLAGS can be set from the command line.
! XLDFLAGS=-L$(prefix)/lib
  
  LDFLAGS=$(XLDFLAGS)
  
***************
*** 199,205 ****
  # Note that x_.h expects to find the header files in $(XINCLUDE)/X11,
  # not in $(XINCLUDE).
  
! XINCLUDE=-I/usr/local/X/include
  
  # Define the directory/ies and library names for the X11 library files.
  # XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH
--- 199,205 ----
  # Note that x_.h expects to find the header files in $(XINCLUDE)/X11,
  # not in $(XINCLUDE).
  
! XINCLUDE=-I${X11BASE}/include
  
  # Define the directory/ies and library names for the X11 library files.
  # XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH
***************
*** 211,222 ****
  #XLIBDIRS=-L/usr/openwin/lib
  #XLIBDIR=/usr/openwin/lib
  # X11R6 (on any platform) may need
! #XLIBS=Xt SM ICE Xext X11
  
  #XLIBDIRS=-L/usr/local/X/lib
! XLIBDIRS=-L/usr/X11/lib
  XLIBDIR=
! XLIBS=Xt Xext X11
  
  # Define whether this platform has floating point hardware:
  #	FPU_TYPE=2 means floating point is faster than fixed point.
--- 211,222 ----
  #XLIBDIRS=-L/usr/openwin/lib
  #XLIBDIR=/usr/openwin/lib
  # X11R6 (on any platform) may need
! XLIBS=Xt SM ICE Xext X11
  
  #XLIBDIRS=-L/usr/local/X/lib
! XLIBDIRS=-L${X11BASE}/lib
  XLIBDIR=
! #XLIBS=Xt Xext X11
  
  # Define whether this platform has floating point hardware:
  #	FPU_TYPE=2 means floating point is faster than fixed point.
***************
*** 260,268 ****
  
  DEVICE_DEVS=x11.dev x11alpha.dev x11cmyk.dev x11gray2.dev x11mono.dev
! DEVICE_DEVS1=
! DEVICE_DEVS2=
  DEVICE_DEVS3=deskjet.dev djet500.dev laserjet.dev ljetplus.dev ljet2p.dev ljet3.dev ljet4.dev
! DEVICE_DEVS4=cdeskjet.dev cdjcolor.dev cdjmono.dev cdj550.dev pj.dev pjxl.dev pjxl300.dev
  DEVICE_DEVS5=uniprint.dev
  DEVICE_DEVS6=bj10e.dev bj200.dev bjc600.dev bjc800.dev
  DEVICE_DEVS7=faxg3.dev faxg32d.dev faxg4.dev
--- 260,268 ----
  
  DEVICE_DEVS=x11.dev x11alpha.dev x11cmyk.dev x11gray2.dev x11mono.dev
! DEVICE_DEVS1=bmp16m.dev
! DEVICE_DEVS2=epson.dev eps9high.dev epsonc.dev ibmpro.dev
  DEVICE_DEVS3=deskjet.dev djet500.dev laserjet.dev ljetplus.dev ljet2p.dev ljet3.dev ljet4.dev
! DEVICE_DEVS4=cdeskjet.dev cdjcolor.dev cdjmono.dev cdj550.dev pj.dev pjxl.dev hpdj.dev
  DEVICE_DEVS5=uniprint.dev
  DEVICE_DEVS6=bj10e.dev bj200.dev bjc600.dev bjc800.dev
  DEVICE_DEVS7=faxg3.dev faxg32d.dev faxg4.dev
