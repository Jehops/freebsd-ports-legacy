*** Makefile.orig	Mon Nov 14 19:05:36 1994
--- Makefile	Sun Jan 29 22:00:58 1995
***************
*** 13,20 ****
  RANLIB        = ranlib#   may need to set this to `true' for SGI's
  
  ARFLAGS       = ru#       this is supposed to replace only those .o files
!                   #       than are newer than the .a file.  Should work
!                   #       under most platforms. 
  
  #
  # Step 2:
--- 13,20 ----
  RANLIB        = ranlib#   may need to set this to `true' for SGI's
  
  ARFLAGS       = ru#       this is supposed to replace only those .o files
! #			  than are newer than the .a file.  Should work
! #			  under most platforms. 
  
  #
  # Step 2:
***************
*** 33,42 ****
  #       
  
  # SGI C Flags
! CFLAGS        = -O2 -D__STDC__ -DFULL_COLOR_ONLY
  
  # GCC flags
! #CFLAGS       = -O2 -DFULL_COLOR_ONLY
  
  # Note that the rest of these flags are inherited from the original
  # Berkeley player's Makefile; I have no idea if they'll work on these
--- 33,42 ----
  #       
  
  # SGI C Flags
! # CFLAGS        = -O2 -D__STDC__ -DFULL_COLOR_ONLY
  
  # GCC flags
! CFLAGS       = -O2 -fpic -D_HAVE_PARAM_H # -DFULL_COLOR_ONLY
  
  # Note that the rest of these flags are inherited from the original
  # Berkeley player's Makefile; I have no idea if they'll work on these
***************
*** 72,78 ****
  # Step 3:
  #	Set DEST to pathname of final destination of library...
  #
! DEST	      = .
  
  #
  # Step 4: 
--- 72,78 ----
  # Step 3:
  #	Set DEST to pathname of final destination of library...
  #
! DEST	      = ${PREFIX}/lib
  
  #
  # Step 4: 
***************
*** 89,95 ****
  DITHER_SRC    = fs2.c fs2fast.c fs4.c hybrid.c hybriderr.c 2x2.c gray.c \
  		mono.c ordered.c ordered2.c mb_ordered.c
  
! SRC           = $(DECODER_SRC) # $(DITHER_SRC)
  
  
  #
--- 89,95 ----
  DITHER_SRC    = fs2.c fs2fast.c fs4.c hybrid.c hybriderr.c 2x2.c gray.c \
  		mono.c ordered.c ordered2.c mb_ordered.c
  
! SRC           = $(DECODER_SRC) $(DITHER_SRC)
  
  
  #
***************
*** 98,125 ****
  HDRS	      = util.h video.h decoders.h dither.h fs2.h fs4.h \
                  proto.h globals.h mpeg.h
  
! INSTALL	      = /etc/install
  SHELL	      = /bin/sh
  MAKEFILE      = Makefile
  
  OBJ	      = $(SRC:.c=.o)
  
! LIBRARY       = libmpeg.a
  
  # Targets...
  
! all:		$(LIBRARY)
  
! $(LIBRARY):     $(OBJ)
! 		$(AR) $(ARFLAGS) $(LIBRARY) $(OBJ)
! 		$(RANLIB) $(LIBRARY)
! 
! clean:;		rm -f *.o $(LIBRARY) core
!  
! install:	$(LIBRARY)
! 		@echo Installing $(LIBRARY) in $(DEST)
! 		@if [ $(DEST) != . ]; then \
! 		(rm -f $(DEST)/$(LIBRARY); $(INSTALL) -f $(DEST) $(LIBRARY)); fi
  
  # easympeg is a short 'n simple MPEG player that requires the SGI Graphics
  # LIbrary; this won't work on non-SGI platforms
--- 98,128 ----
  HDRS	      = util.h video.h decoders.h dither.h fs2.h fs4.h \
                  proto.h globals.h mpeg.h
  
! INSTALL	      = install
  SHELL	      = /bin/sh
  MAKEFILE      = Makefile
  
  OBJ	      = $(SRC:.c=.o)
  
! LIBRARY       = libmpeg.a libmpeg.so.1.1
  
  # Targets...
  
! all:	$(LIBRARY)
  
! libmpeg.a:     $(OBJ)
! 		$(AR) $(ARFLAGS) libmpeg.a $(OBJ)
! 		$(RANLIB) libmpeg.a
! 
! libmpeg.so.1.1: $(OBJ)
! 	ld -Bshareable -o libmpeg.so.1.1 $(OBJ)
! 
! clean:	rm -f *.o $(LIBRARY) core
! 
! install: $(LIBRARY)
! 	@echo Installing $(LIBRARY) in $(DEST)
! 	$(INSTALL) $(LIBRARY) $(DEST)
! 	$(INSTALL) mpeg.h ${PREFIX}/include
  
  # easympeg is a short 'n simple MPEG player that requires the SGI Graphics
  # LIbrary; this won't work on non-SGI platforms
