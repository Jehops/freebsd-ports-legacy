--- imgBMP.c.orig	Sun Aug 13 06:08:30 2000
+++ imgBMP.c	Mon Dec  1 12:49:07 2003
@@ -256,7 +256,7 @@
 	    for( y = height-1; y>=0; y--) {
 		ImgRead(handle, line, bytesPerLine);
 		Tk_PhotoPutBlock(imageHandle, &block, destX, destY+y,
-			width,1);
+			width,1,TK_PHOTO_COMPOSITE_SET);
 	    }
 	    break;
 	case 8:
@@ -268,7 +268,7 @@
 		    expline += 3;
 		}
 		Tk_PhotoPutBlock(imageHandle, &block, destX, destY+y,
-			width,1);
+			width,1,TK_PHOTO_COMPOSITE_SET);
 		expline = block.pixelPtr;
 	    }
 	    break;
@@ -287,7 +287,7 @@
 		    expline += 3;
 		}
 		Tk_PhotoPutBlock(imageHandle, &block, destX, destY+y,
-			width,1);
+			width,1,TK_PHOTO_COMPOSITE_SET);
 		expline = block.pixelPtr;
 	    }
 	    break;
@@ -302,7 +302,7 @@
 		    expline += 3;
 		}
 		Tk_PhotoPutBlock(imageHandle, &block, destX, destY+y,
-			width,1);
+			width,1,TK_PHOTO_COMPOSITE_SET);
 		expline = block.pixelPtr;
 	    }
 	    break;
--- imgGIF.c.orig	Sun Aug 13 06:09:39 2000
+++ imgGIF.c	Mon Dec  1 12:50:19 2003
@@ -482,7 +482,7 @@
     }
 
     if (transparent == -1) {
-	Tk_PhotoPutBlock(imageHandle, &block, destX, destY, width, height);
+	Tk_PhotoPutBlock(imageHandle, &block, destX, destY, width, height, TK_PHOTO_COMPOSITE_SET);
     } else {
 	ImgPhotoPutBlock(imageHandle, &block, destX, destY, width, height);
     }
--- imgJPEG.c.orig	Sun Aug 13 06:10:22 2000
+++ imgJPEG.c	Mon Dec  1 12:50:53 2003
@@ -1030,7 +1030,7 @@
     for (curY = 0; curY < stopY; curY++) {
       jpeg.read_scanlines(cinfo, buffer, 1);
       if (curY >= srcY) {
-	Tk_PhotoPutBlock(imageHandle, &block, destX, outY, outWidth, 1);
+	Tk_PhotoPutBlock(imageHandle, &block, destX, outY, outWidth, 1, TK_PHOTO_COMPOSITE_SET);
 	outY++;
       }
     }
--- imgPS.c.orig	Sun Aug 13 06:06:53 2000
+++ imgPS.c	Mon Dec  1 12:51:42 2003
@@ -395,7 +395,7 @@
 	        for (j = 0; j < width; j++) {
 		    line3[j] = ((line[(j+srcX)/8]>>(7-(j+srcX)%8) & 1)) ? 0 : 255;
 	        }
-		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1);
+		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1, TK_PHOTO_COMPOSITE_SET);
 	    }
 	    break;
 	case '5':
@@ -413,7 +413,7 @@
 			c++;
 		    }
 		}
-		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1);
+		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1, TK_PHOTO_COMPOSITE_SET);
 	    }
 	    break;
 	case '6':
@@ -435,7 +435,7 @@
 			c++;
 		    }
 		}
-		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1);
+		Tk_PhotoPutBlock(imageHandle, &block, destX, destY++, width, 1, TK_PHOTO_COMPOSITE_SET);
 	    }
 	    break;
     }
--- imgUtil.c	Tue Jan 15 15:59:59 2002
+++ imgUtil.c	Thu Jun  9 20:51:49 2005
@@ -95,7 +95,7 @@
 		}
 		if (end > X) {
  		    blockPtr->pixelPtr =  rowPtr + blockPtr->pixelSize * X;
-		    Tk_PhotoPutBlock(handle, blockPtr, x+X, y+Y, end-X, 1);
+		    Tk_PhotoPutBlock(handle, blockPtr, x+X, y+Y, end-X, 1, TK_PHOTO_COMPOSITE_SET);
 		}
 		X = end;
 	    }
@@ -103,12 +103,12 @@
 	}
 	blockPtr->pixelPtr = imagePtr;
     } else {
-	Tk_PhotoPutBlock(handle,blockPtr,x,y,width,height);
+	Tk_PhotoPutBlock(handle,blockPtr,x,y,width,height,TK_PHOTO_COMPOSITE_SET);
     }
     return TCL_OK;
 }
 
-
+#if 0 /* OS run-time linker is better suited for this job { */
 /*
  *----------------------------------------------------------------------
  *
@@ -248,4 +248,5 @@
 	dlclose(*handlePtr);
     }
     *handlePtr = IMG_FAILED;
-}
\ No newline at end of file
+}
+#endif /* } */
--- imgWindow.c.orig	Sat Jan 15 13:25:37 2000
+++ imgWindow.c	Mon Dec  1 12:52:11 2003
@@ -378,7 +378,7 @@
 	}
     }
 
-    Tk_PhotoPutBlock(imageHandle, &block, destX, destY, width, height);
+    Tk_PhotoPutBlock(imageHandle, &block, destX, destY, width, height, TK_PHOTO_COMPOSITE_SET);
 
 #ifndef	__WIN32__
     XDestroyImage(ximage);
--- imgXPM.c.orig	Sun Aug 13 06:41:31 2000
+++ imgXPM.c	Mon Dec  1 12:52:34 2003
@@ -504,7 +504,7 @@
 			    col = (int)0;
 		    }
 		} while ((i < width) && col);
-		Tk_PhotoPutBlock(imageHandle, &block.pub, destX+j, destY, len, 1);
+		Tk_PhotoPutBlock(imageHandle, &block.pub, destX+j, destY, len, 1, TK_PHOTO_COMPOSITE_SET);
 	    } else {
 	        p += byteSize;
 	        i++;
