#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_gcc-4.0.dpatch by  <gaudenz@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: build with gcc-4.0

@DPATCH@
diff -urNad passepartout-0.6-3~/configure.ac passepartout-0.6-3/configure.ac
--- passepartout-0.6-3~/configure.ac	2005-12-21 02:27:34.000000000 +0100
+++ configure.ac	2005-12-21 02:27:43.000000000 +0100
@@ -10,7 +10,7 @@
 # AC_CONFIG_HEADER(src/defines.h)
 
 # Define global compiler flags:
-MY_CXXFLAGS="-Wall -Wold-style-casts"
+MY_CXXFLAGS="-Wall"
 CXXFLAGS="$CXXFLAGS $MY_CXXFLAGS"
 
 # Checks for programs.
diff -urNad passepartout-0.6-3~/src/pptout/widget/dialogwrap.cc passepartout-0.6-3/src/pptout/widget/dialogwrap.cc
--- passepartout-0.6-3~/src/pptout/widget/dialogwrap.cc	2005-12-21 02:27:34.000000000 +0100
+++ src/pptout/widget/dialogwrap.cc	2005-12-21 02:27:43.000000000 +0100
@@ -24,9 +24,9 @@
   // Note: It seems that activate means "in any way except a simple click".
   // So we have to add callbacks for both activate and clicked.
   b->signal_clicked().connect
-    (bind(sigc::mem_fun(*this, &Gtk::Dialog::on_response), action_id));
+    (bind(sigc::mem_fun(*this, &DialogWrap::on_response), action_id));
   b->signal_activate().connect
-    (bind(sigc::mem_fun(*this, &Gtk::Dialog::on_response), action_id));
+    (bind(sigc::mem_fun(*this, &DialogWrap::on_response), action_id));
   return b;
 }
 
diff -urNad passepartout-0.6-3~/src/ps/pfb2pfa.cc passepartout-0.6-3/src/ps/pfb2pfa.cc
--- passepartout-0.6-3~/src/ps/pfb2pfa.cc	2004-10-07 23:35:36.000000000 +0200
+++ src/ps/pfb2pfa.cc	2005-12-21 02:27:43.000000000 +0100
@@ -48,7 +48,7 @@
 	}
 	filter.end();
       }
-      if(lengths) lengths->push_back(out.tellp() - blockstart);
+      if(lengths) lengths->push_back(long(out.tellp()) - blockstart);
       debug << "Blockstart: " << blockstart << ", end: " << out.tellp()
 	    << "\n";
     }
diff -urNad passepartout-0.6-3~/src/util/valueunit.h passepartout-0.6-3/src/util/valueunit.h
--- passepartout-0.6-3~/src/util/valueunit.h	2004-01-12 20:01:34.000000000 +0100
+++ src/util/valueunit.h	2005-12-21 02:27:43.000000000 +0100
@@ -7,6 +7,11 @@
 #include <string>
 
 template<class Value>
+class ValueUnit;
+template<class Value>
+std::istream& operator >> (std::istream& in, ValueUnit<Value>& vu);
+
+template<class Value>
 class ValueUnit {
 public:
   ValueUnit() : value_(0) {}
