--- configure.in.orig	Sun May  7 23:30:33 2006
+++ configure.in	Mon May  8 16:38:54 2006
@@ -47,7 +47,7 @@
 AC_PROG_INSTALL
 # We don't need dlopen right now and it's not supported on Darwin
 # AC_LIBTOOL_DLOPEN
-AC_PROG_LIBTOOL
+AC_PROG_RANLIB
 
 AC_C_BIGENDIAN
 AC_CHECK_SIZEOF(void*)
@@ -141,7 +141,6 @@
 	if echo $WX_CPPFLAGS | grep -q '__WXGTK__' ; then 
 		WX_GTK="yes"
 		AC_MSG_RESULT([found])
-		PKG_CHECK_MODULES(GTK, [gtk+-2.0])
 	else
 		AC_MSG_RESULT([not found])
 	fi
@@ -151,11 +150,40 @@
 fi
 
 # Test for libxml2
-# This is the simple version. Note that xml2-config script is also available
-# for more detailed configuration.
-LIBXML2_CFLAGS=""
-LIBXML2_LIBS=""
-PKG_CHECK_MODULES([LIBXML2], [libxml-2.0 >= 2.6])
+XML2CONFIG=xml2-config
+AC_ARG_WITH(xml2-config,
+[[  --with-xml2-config=FILE Use the given path to xml2-config when determining
+                            libxml2 configuration; defaults to "xml2-config"]],
+[
+    if test "$withval" != "yes" -a "$withval" != ""; then
+        XML2CONFIG=$withval
+    fi
+])
+
+xml2version=0
+
+AC_DEFUN([XML2TEST],
+[
+	AC_REQUIRE([AC_PROG_AWK])
+	AC_MSG_CHECKING([libxml2 version])
+	if xml2version=`$XML2CONFIG --version`; then
+		AC_MSG_RESULT([$xml2version])
+	else
+		AC_MSG_RESULT([not found])
+		AC_MSG_ERROR([libxml2 is required. Try --with-xml2-config.])
+	fi])
+
+# Call XML2TEST func
+XML2TEST
+
+# check libxml2 version
+xml2version=`echo $xml2version | $AWK 'BEGIN { FS = "."; } { printf "% d", ($1 * 1000 + $2) * 1000 + $3;}'`
+if test -z "$xml2version" || test "$xml2version" -lt 2006000; then
+	AC_MSG_ERROR([libxml2 2.6 or newer is required])
+fi
+
+LIBXML2_CFLAGS="`$XML2CONFIG --cflags`"
+LIBXML2_LIBS="`$XML2CONFIG --libs`"
 
 # Define FTCONFIG
 FTCONFIG=freetype-config
@@ -185,20 +213,7 @@
 	# GTK build, so call FTTEST function to test for FreeType
 	FTTEST
 	FT_CFLAGS="`$FTCONFIG --cflags`"
-
-	# check for the Pango package
-	PkgError="no"
-	PKG_CHECK_MODULES(PANGOX, pangox,
-			  [
-				PANGO_CFLAGS="$PANGOX_CFLAGS"
-			  ],
-			  [
-				PkgError="yes"
-			  ]
-			  )
-	if test PkgError = "yes"; then
-		AC_MSG_ERROR([pangox library not found])
-	fi
+	PANGO_CFLAGS=""
 else
 	# non-GTK build, i.e., MacOS, so Pango and FreeType are not required
 	FT_CFLAGS=""
@@ -216,8 +231,8 @@
 fi
 
 # pass the Pango, FreeType and GTK flags (required for wxGTK font rendering)
-CPPFLAGS="$CPPFLAGS $WX_CPPFLAGS $PANGO_CFLAGS $FT_CFLAGS $GTK_CFLAGS $LIBXML2_CFLAGS"
-CXXFLAGS="$CXXFLAGS $WX_CPPFLAGS $PANGO_CFLAGS $FT_CFLAGS $GTK_CFLAGS $LIBXML2_CFLAGS"
+CPPFLAGS="$CPPFLAGS $WX_CPPFLAGS $PANGO_CFLAGS $FT_CFLAGS $GTK_CFLAGS $LIBXML2_CFLAGS $CPPFLAGS_APPEND"
+CXXFLAGS="$CXXFLAGS $WX_CPPFLAGS $PANGO_CFLAGS $FT_CFLAGS $GTK_CFLAGS $LIBXML2_CFLAGS $CPPFLAGS_APPEND"
 
 AC_MSG_CHECKING([Linker])
 case $host in
@@ -256,6 +271,7 @@
 AM_CONDITIONAL(DARWIN_LINK, [test "$DarwinLink" = "yes"])
 
 AC_SUBST(TOPDIR)
+AC_SUBST(WX_CPPFLAGS)
 AC_SUBST(WX_LIBS)
 AC_SUBST(XRCINCLUDE)
 AC_SUBST(XARALANGUAGE)
