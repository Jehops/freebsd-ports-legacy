--- CMakeLists.txt.orig	2012-12-12 23:55:46.000000000 +0100
+++ CMakeLists.txt	2013-02-24 15:50:09.000000000 +0100
@@ -16,6 +16,11 @@
 SET(PODOFO_SOVERSION "${PODOFO_VERSION_MAJOR}.${PODOFO_VERSION_MINOR}.${PODOFO_VERSION_PATCH}")
 SET(PODOFO_LIBVERSION "${PODOFO_SOVERSION}")
 
+INCLUDE_DIRECTORIES(
+    ${PoDoFo_BINARY_DIR}
+    ${PoDoFo_SOURCE_DIR}
+    ${PoDoFo_SOURCE_DIR}/src
+)
 
 #
 # Main includes
@@ -326,6 +331,7 @@
 	MESSAGE("Libidn not found. AES-256 Encryption support will be disabled")
 ENDIF(LIBIDN_FOUND)
 
+IF(WANT_LIBJPEG)
 FIND_PACKAGE(LIBJPEG)
 
 IF(LIBJPEG_FOUND)
@@ -335,7 +341,9 @@
 ELSE(LIBJPEG_FOUND)
   MESSAGE("Libjpeg not found. JPEG support will be disabled")
 ENDIF(LIBJPEG_FOUND)
+ENDIF(WANT_LIBJPEG)
 
+IF(WANT_TIFF)
 FIND_PACKAGE(TIFF)
 
 IF(TIFF_FOUND)
@@ -345,7 +353,9 @@
 ELSE(TIFF_FOUND)
   MESSAGE("Libtiff not found. TIFF support will be disabled")
 ENDIF(TIFF_FOUND)
+ENDIF(WANT_TIFF)
 
+IF(WANT_PNG)
 FIND_PACKAGE(PNG)
 
 IF(PNG_FOUND)
@@ -355,8 +365,10 @@
 ELSE(PNG_FOUND)
   MESSAGE("LibPng not found. PNG support will be disabled")
 ENDIF(PNG_FOUND)
+ENDIF(WANT_PNG)
 
 
+IF(WANT_CppUnit)
 FIND_PACKAGE(CppUnit)
 
 IF(CppUnit_FOUND)
@@ -366,6 +378,7 @@
 ELSE(CppUnit_FOUND)
   MESSAGE("Cppunit not found. No unit tests will be built.")
 ENDIF(CppUnit_FOUND)
+ENDIF(WANT_CppUnit)
 
 FIND_PACKAGE(OpenSSL)
 
@@ -425,6 +438,7 @@
 	ENDIF(NOT WIN32)
 ENDIF(DEFINED JPEG_RUNTIME_COMPATIBLE)
 
+IF(WANT_LUA)
 FIND_PACKAGE(LUA)
 IF(LUA_FOUND)
 	# If we have lua, we can build podofoimpose.
@@ -436,6 +450,7 @@
 ELSE(LUA_FOUND)
 	MESSAGE("Lua not found - PoDoFoImpose and PoDoFoColor will be built without Lua support")
 ENDIF(LUA_FOUND)
+ENDIF(WANT_LUA)
 
 
 # Check if we should build a multithreaded version of PoDoFo
@@ -463,9 +478,6 @@
 ENDIF(WANT_BOOST)
 
 INCLUDE_DIRECTORIES(
-    ${PoDoFo_BINARY_DIR}
-    ${PoDoFo_SOURCE_DIR}
-    ${PoDoFo_SOURCE_DIR}/src
     ${FREETYPE_INCLUDE_DIR}
     ${ZLIB_INCLUDE_DIR}
     ${EXTRA_INCLUDES}
@@ -505,7 +517,7 @@
 #
 # Setup directories we will need
 #
-SET(MANDIR "share/man/")
+SET(MANDIR "man/")
 
 # Create the config file. It'll be appended to as the subdirs run though
 # then dependency information will be written to it at the end of the
