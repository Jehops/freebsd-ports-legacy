--- src/dialogs/desktop-properties.cpp.orig	Mon Apr 12 11:12:20 2004
+++ src/dialogs/desktop-properties.cpp	Mon Apr 12 11:11:10 2004
@@ -11,7 +11,6 @@
  * Released under GNU GPL, read the file 'COPYING' for more information
  */
 
-#include <locale>
 #include <sstream>
 
 #include <config.h>
@@ -266,7 +265,6 @@
         gdouble vbWidth  = (gdouble)atof(sp_repr_attr (repr, "width"))  * 1.25;
         gdouble vbHeight = (gdouble)atof(sp_repr_attr (repr, "height")) * 1.25;
         std::ostringstream os;
-        os.imbue(std::locale::classic());
         os.setf(std::ios::showpoint);
         os.precision(8);
         os << "0 0 " << vbWidth << " " << vbHeight;
--- src/document.cpp.orig	Mon Apr 12 10:42:05 2004
+++ src/document.cpp	Mon Apr 12 10:42:12 2004
@@ -42,7 +42,6 @@
 
 #define SP_DOCUMENT_UPDATE_PRIORITY (G_PRIORITY_HIGH_IDLE - 1)
 
-#include <locale>
 #include <sstream>
 
 enum {
--- src/libnr/nr-rect.h.orig	Mon Apr 12 09:28:10 2004
+++ src/libnr/nr-rect.h	Mon Apr 12 09:29:19 2004
@@ -107,6 +107,33 @@
 	/** returns the midpoint of this rect. */
 	Point midpoint() const;
 	
+private:
+    template <NR::Dim2 axis>
+    double extent() const {
+        return _max[axis] - _min[axis];
+    }
+
+	template <Dim2 axis>
+	bool isEmpty() const {
+		return !( _min[axis] < _max[axis] );
+	}
+
+	template <Dim2 axis>
+	bool intersects(const Rect &r) const {
+		return _max[axis] >= r._min[axis] && _min[axis] <= r._max[axis];
+	}
+
+	template <Dim2 axis>
+	bool contains(const Rect &r) const {
+		return contains(r._min) && contains(r._max);
+	}
+
+	template <Dim2 axis>
+	bool contains(const Point &p) const {
+		return p[axis] >= _min[axis] && p[axis] <= _max[axis];
+	}
+
+public:
 	/** does this rectangle have zero area? */
 	bool isEmpty() const {
 		return isEmpty<X>() && isEmpty<Y>();
@@ -162,31 +189,6 @@
 
 private:
 	Rect() {}
-
-    template <NR::Dim2 axis>
-    double extent() const {
-        return _max[axis] - _min[axis];
-    }
-
-	template <Dim2 axis>
-	bool isEmpty() const {
-		return !( _min[axis] < _max[axis] );
-	}
-
-	template <Dim2 axis>
-	bool intersects(const Rect &r) const {
-		return _max[axis] >= r._min[axis] && _min[axis] <= r._max[axis];
-	}
-
-	template <Dim2 axis>
-	bool contains(const Rect &r) const {
-		return contains(r._min) && contains(r._max);
-	}
-
-	template <Dim2 axis>
-	bool contains(const Point &p) const {
-		return p[axis] >= _min[axis] && p[axis] <= _max[axis];
-	}
 
 	Point _min, _max;
 
--- src/svg/stringstream.h.orig	Sat Apr 10 04:39:51 2004
+++ src/svg/stringstream.h	Sat Apr 10 04:44:36 2004
@@ -9,7 +9,6 @@
 
 	public:
 		SVGOStringStream() {
-			this->imbue(std::locale::classic());
 			this->setf(std::ios::showpoint);
 			this->precision(8);
 		}
--- src/svg/svg-path.cpp.orig	Mon Apr 12 11:16:05 2004
+++ src/svg/svg-path.cpp	Mon Apr 12 11:15:56 2004
@@ -33,7 +33,6 @@
 #include "svg.h"
 #include "stringstream.h"
 
-#include <locale>
 #include <sstream>
 
 /* This module parses an SVG path element into an RsvgBpathDef.
