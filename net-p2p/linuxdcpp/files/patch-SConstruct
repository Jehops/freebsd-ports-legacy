--- SConstruct.orig	Wed Nov 22 22:20:48 2006
+++ SConstruct	Wed Nov 22 22:22:59 2006
@@ -23,21 +23,6 @@
      context.Result(ret)
      return ret
 
-def CheckCXXVersion(context, name, major, minor):
-	context.Message('Checking for %s >= %d.%d...' % (name, major, minor))
-	ret = commands.getoutput('%s -dumpversion' % name)
-
-	retval = 0
-	try:
-		if ((string.atoi(ret[0]) == major and string.atoi(ret[2]) >= minor)
-		or (string.atoi(ret[0]) > major)):
-			retval = 1
-	except ValueError:
-		print "No C++ compiler found!"
-
-	context.Result(retval)
-	return retval
-
 
 # ----------------------------------------------------------------------
 # Command-line options
@@ -62,24 +47,17 @@
 # Initialization
 # ----------------------------------------------------------------------
 
-env = Environment(ENV = os.environ, options = opts)
+env = Environment(ENV = os.environ, options = opts, CC = '%%CC%%', CXX = '%%CXX%%')
 
 conf = Configure(env,
 	custom_tests =
 	{
 		'CheckPKGConfig' : CheckPKGConfig,
-		'CheckPKG' : CheckPKG,
-		'CheckCXXVersion' : CheckCXXVersion
+		'CheckPKG' : CheckPKG
 	},
 	conf_dir = 'build/sconf',
 	log_file = 'build/sconf/config.log')
 
-if os.environ.has_key('CXX'):
-	env['CXX'] = os.environ['CXX']
-
-if os.environ.has_key('CXXFLAGS'):
-	env['CXXFLAGS'] = os.environ['CXXFLAGS'].split()
-
 env.SConsignFile('build/sconf/.sconsign')
 opts.Save('build/sconf/scache.conf', env)
 Help(opts.GenerateHelpText(env))
@@ -89,23 +67,6 @@
 # Dependencies
 # ----------------------------------------------------------------------
 
-if not (env.has_key('CXX') and env['CXX']):
-	print 'CXX env variable is not set, attempting to use g++'
-	env['CXX'] = 'g++'
-
-if not conf.CheckCXXVersion(env['CXX'], 3, 4):
-	print 'Compiler version check failed. g++ 3.4 or later is needed'
-	Exit(1)
-
-# Add support for compiler caches to speed-up compilation.
-if conf.TryAction(Action('distcc'))[0]:
-	env.Prepend(CXX = 'distcc ')
-	print 'Enabling distcc...'
-
-if conf.TryAction(Action('ccache'))[0]:
-	env.Prepend(CXX = 'ccache ')
-	print 'Enabling ccache...'
-
 if not conf.CheckPKGConfig():
      print 'pkg-config not found.'
      Exit(1)
@@ -137,11 +98,6 @@
 	print 'Can\'t live without it, sorry'
 	Exit(1)
 
-if not conf.CheckLibWithHeader('pthread', 'pthread.h', 'c'):
-	print 'Did not find the pthread library, exiting!'
-	print 'Note: You might have the lib but not the headers'
-	Exit(1)
-
 if not conf.CheckLibWithHeader('z', 'zlib.h', 'c'):
 	print 'Did not find the z library (gzip/z compression)'
 	print 'Can\'t live without it, exiting'
@@ -165,11 +121,11 @@
 env.Append(LINKFLAGS = ['-Wl,--as-needed'])
 
 if env.has_key('debug') and env['debug']:
-	env.Append(CXXFLAGS = Split('-g -ggdb -D_DEBUG -Wall'))
+	env.Append(CXXFLAGS = Split('%%CXXFLAGS%% -g -ggdb -D_DEBUG -Wall'))
 	env.Append(LINKFLAGS = Split('-g -ggdb -Wall'))
 
 if env.has_key('release') and env['release']:
-	env.Append(CXXFLAGS = '-O3')
+	env.Append(CXXFLAGS = '%%CXXFLAGS%%')
 
 if env.has_key('profile') and env['profile']:
 	env.Append(CXXFLAGS = '-pg')
