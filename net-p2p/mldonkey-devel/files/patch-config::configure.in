--- config/configure.in.orig	Sat Sep  3 20:27:22 2005
+++ config/configure.in	Sun Sep  4 11:48:13 2005
@@ -17,20 +17,15 @@
 
 OS_FILES=unix
 OS_FILES2=unix
+
 case $host in
   *mingw*)
     OS_FILES=mingw
     OS_FILES2=mingw
-    PTHREAD_LIBS="-lpthreadGC2 -lwsock32"
-    PTHREAD_CFLAGS="-DPTW32_STATIC_LIB"
     ;;
   *cygwin*)
     OS_FILES2=cygwin
     ;;
-  *freebsd*)
-    CPPFLAGS="${CPPFLAGS} -I/usr/local/include"
-    LDFLAGS="${LDFLAGS} -L/usr/local/lib"
-    ;;
 esac
 
 case "`uname -s`" in
@@ -59,13 +54,8 @@
 
 if test -d .svn; then
   AC_MSG_NOTICE(checking SVN revision)
-  AC_CHECK_PROG(SVNVERSION,svnversion,svnversion)
-  if test "$ac_cv_prog_SVNVERSION" = "svnversion"; then
-    SUB_VERSION3="SVN"
-    SCM_VERSION=`svnversion -n .`
-  else AC_MSG_NOTICE(cannot checking SVN revision... no SVNVERSION)
-       SCM_VERSION="cannot find out SVN revision (no SVNVERSION)"  
-  fi     
+  SUB_VERSION3="SVN"
+  SCM_VERSION=`svnversion -n .`
 fi
 if test -f ./CVS/Entries ; then
   AC_MSG_NOTICE(checking CVS checkout date)
@@ -95,16 +85,10 @@
 	  fi
 	fi
       fi
-      else AC_MSG_NOTICE(cannot checking CVS checkout date... no CUT)
-      SCM_VERSION="cannot find out SCM Version (no CUT)"
     fi
-    else AC_MSG_NOTICE(cannot checking CVS checkout date... no SED)
-    SCM_VERSION="cannot find out SCM Version (no SED)"
-  fi
-  else AC_MSG_NOTICE(cannot checking CVS checkout date... no STAT)
-  SCM_VERSION="cannot find out SCM Version (no STAT)"
   fi
 fi
+fi
 MLDONKEY_VERSION=$MAJOR_VERSION.$MINOR_VERSION.$SUB_VERSION
 if test -f ./subrelease; then
   MLDONKEY_VERSION=$MLDONKEY_VERSION`cat ./subrelease`
@@ -201,11 +185,15 @@
   fi
 fi
 
-USE_PTHREAD=yes
-AC_ARG_ENABLE(pthread, [  --disable-pthread       allows you to disable pthread support in mldonkey], [USE_PTHREAD="$enableval"])
-AC_ARG_ENABLE(pthread-lib, [  --enable-pthread-lib    legacy option], [USE_PTHREAD="$enableval"])
+PTHREAD_LIBS=yes
+AC_ARG_ENABLE(pthread, [  --disable-pthread       allows you to disable pthread support in mldonkey], [PTHREAD_LIBS="$enableval"])
+AC_ARG_ENABLE(pthread-lib, [  --enable-pthread-lib    legacy option], [PTHREAD_LIBS="$enableval"])
 
-ICONV=yes
+if [ test "$SYSTEM" = "windows"]; then
+  ICONV=no
+else
+  ICONV=yes
+fi
 AC_ARG_ENABLE(iconv,       [  --disable-iconv         disable the use of iconv for compiling on broken windows environments], [ICONV="$enableval"])
 
 GD=yes
@@ -583,7 +571,7 @@
 BZIP2=no
 HAS_BZIP2=false
 if test "$USE_BZIP2" != "no"; then
-  AC_CHECK_HEADERS(bzlib.h,[AC_CHECK_LIB(bz2,BZ2_bzReadOpen,[BZIP2=yes],)])
+  AC_CHECK_LIB(bz2,BZ2_bzReadOpen,[AC_CHECK_HEADERS(bzlib.h,[BZIP2=yes],)])
 fi
 
 if test "$BZIP2" = "yes"; then
@@ -624,21 +612,19 @@
 if test "$ICONV" = "yes"; then
   AM_ICONV
   if test "$am_cv_func_iconv" != "yes"; then
-    AC_MSG_FAILURE([iconv() is missing, did you install the libraries and the developer packages for libiconv?])
+    echo "iconv() is missing, did you install the libraries and the developer packages for libiconv?"
+    exit 1
   fi
   LIBS="$LIBS $LIBICONV"
-  AC_CHECK_FUNCS([locale_charset],,
-  AC_TRY_LINK([#include <langinfo.h>],
-  [char* cs = nl_langinfo(CODESET);],
-  AC_MSG_NOTICE(found nl_langinfo(CODESET)),
-  [AC_MSG_FAILURE(Your iconv implementation is incomplete)]))
-  AC_CHECK_LIB(charset,locale_charset)
+  AC_CHECK_FUNCS([locale_charset])
   AC_CHECK_HEADERS([libcharset.h])
   AC_CHECK_HEADERS([locale.h])
+  AC_CHECK_LIB(charset,locale_charset)
 else
   AC_DEFINE(DISABLE_ICONV, 1, [Define to 1 if you want to replace iconv and related with stubs.])
 fi
 
+
 # On linux plaforms, we will have to check that includes from kernel are
 # available. glibc version test was shamelessly taken from
 # http://public.activestate.com/gsar/APC/perl-5.8.x/Configure
@@ -652,7 +638,7 @@
              CPPFLAGS=$OLD_CPPFLAGS]
            )
 	   AC_CHECK_HEADERS(gnu/libc-version.h,,)
-           AC_MSG_CHECKING(for GNU C Library version)
+           AC_MSG_CHECKING(Checking for GNU C Library version) 
 
 cat >try.c <<'EOCP'
 /* Find out version of GNU C library.  __GLIBC__ and __GLIBC_MINOR__
@@ -1014,7 +1000,7 @@
 
 if test "$IM" = "yes"; then
   CRYPTOKIT=no
-  AC_MSG_CHECKING(for CryptoKit)
+  AC_MSG_CHECKING(Checking for CryptoKit)
   if test -f $OCAMLLIB/cryptokit.$OCAMLLIB_EXT; then
     CRYPTOKIT=yes
     AC_MSG_RESULT(yes)
@@ -1045,7 +1031,7 @@
   fi
 fi
 
-if test "$USE_PTHREAD" = "no"; then
+if test "$PTHREAD_LIBS" = "no"; then
  PTHREAD_LIBS=""
  echo "Dont use threads"
 else
@@ -1112,49 +1098,15 @@
 if test "$GD" != "no"; then
   GD=no
   LIBGD=no
-  SAVE_LIBS=$LIBS
-
-  AC_CHECK_PROG(GDLIBCONFIG, gdlib-config, gdlib-config)
-  if test "$ac_cv_prog_GDLIBCONFIG" = "gdlib-config"; then
-    GDLIBCONFIG=`$GDLIBCONFIG --libs`
-    GDLIBS="$LIBS -lgd $GDLIBCONFIG"
-    LIBS=$GDLIBS
-  fi
-
-  AC_MSG_CHECKING(for gdImageCreate in -lgd)
-  AC_TRY_LINK([#include <gd.h>],
-  [gdImageCreate (0,0);],
-  [LIBGD=yes], [LIBGD=no])
-  AC_MSG_RESULT($LIBGD)
-  LIBS=$SAVE_LIBS
-
-  if test "$LIBGD" = "no"; then
-    AC_MSG_NOTICE(not found, trying another method)
-    AC_CHECK_LIB(gd, gdImageCreate, [LIBGD=yes], [LIBGD=no])
-  fi
-
+  AC_CHECK_LIB(gd, gdImageCreate , [LIBGD=yes])
   if test "$LIBGD" = "yes"; then
-
     LIBPNG=no
     AC_CHECK_LIB(png, png_create_read_struct , [LIBPNG=yes])
-
+    LIBGD_PNG=no
+    AC_CHECK_LIB(gd, gdImagePng, [LIBGD_PNG=yes])
     if test "$LIBPNG" = "no"; then
       AC_MSG_NOTICE(png support not available)
     else
-      LIBGD_PNG=no
-      LIBS=$GDLIBS
-      AC_MSG_CHECKING(for gdImagePng in -lgd)
-      AC_TRY_LINK([#include <gd.h>],
-      [gdImagePng (0,0);],
-      [LIBGD_PNG=yes], [LIBGD_PNG=no])
-      AC_MSG_RESULT($LIBGD_PNG)
-      LIBS=$SAVE_LIBS
-
-      if test "$LIBGD_PNG" = "no"; then
-        AC_MSG_NOTICE(not found, trying another method)
-        AC_CHECK_LIB(gd, gdImagePng, [LIBGD_PNG=yes], [LIBGD_PNG=no])
-      fi
-
       if test "$LIBGD_PNG" = "yes"; then
         GD=yes
         HAS_GD_PNG=true
@@ -1167,27 +1119,13 @@
         AC_MSG_NOTICE(png support not available in libgd)
       fi
     fi
-
     LIBJPEG=no
     AC_CHECK_LIB(jpeg, jpeg_CreateCompress, [LIBJPEG=yes])
-
+    LIBGD_JPG=no
+    AC_CHECK_LIB(gd, gdImageJpeg, [LIBGD_JPG=yes])
     if test "$LIBJPEG" = "no"; then
       AC_MSG_NOTICE(jpeg support not available)
     else
-      LIBGD_JPG=no
-      LIBS=$GDLIBS
-      AC_MSG_CHECKING(for gdImageJpeg in -lgd)
-      AC_TRY_LINK([#include <gd.h>],
-      [gdImageJpeg (0,0,0);],
-      [LIBGD_JPG=yes], [LIBGD_JPG=no])
-      AC_MSG_RESULT($LIBGD_JPG)
-      LIBS=$SAVE_LIBS
-
-      if test "$LIBGD_JPG" = "no"; then
-        AC_MSG_NOTICE(not found, trying another method)
-        AC_CHECK_LIB(gd, gdImageJpeg, [LIBGD_JPG=yes], [LIBGD_JPG=no])
-      fi
-
       if test "$LIBGD_JPG" = "yes"; then
         GD=yes
   	HAS_GD_JPG=true
@@ -1202,7 +1140,6 @@
   else
     AC_MSG_NOTICE(libgd not available)
   fi
-  LIBS=$SAVE_LIBS
 fi
 AC_MSG_CHECKING(support for graphical statistics)
 if test "$GD" != "no"; then
