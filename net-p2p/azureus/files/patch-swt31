This set of patches allows Azureus to build against the 3.1.x version
of SWT. When the 3.2.x is _released_ by Eclipse, and our x11-toolkits/swt31
port is updated, this file can be removed from the Azureus port.

--- org/gudy/azureus2/ui/swt/Messages.java.orig	Sun Sep 24 15:18:49 2006
+++ org/gudy/azureus2/ui/swt/Messages.java	Sun Sep 24 15:55:09 2006
@@ -100,6 +100,7 @@
         
         // XXX We could (should?) send this event for all widget types
         // XXX Would it better to have a custom event type?
+/*
         if (SWT.getVersion() > 3200) {
 	        Event event = new Event();
 	    		// SWT 3.2 only.  Code Ok -- Only called in SWT 3.2 mode
@@ -107,6 +108,7 @@
 	        event.widget = widget;
 	        widget.notifyListeners(SWT.Settings, event);
         }
+*/
       }
       else if (widget instanceof Tree) {
         Tree tree = (Tree) widget;
@@ -191,7 +193,7 @@
 							Constants.isOSX ? "Cmd+" : "Ctrl+"));
         }
       }
-    } else if (widget instanceof TableColumn) {
+    } /* else if (widget instanceof TableColumn) {
       String key = (String) widget.getData();
 			if (key != null) {
 				if (!key.endsWith(".info"))
@@ -209,6 +211,7 @@
 				}
 			}
     }
+*/
   }
   

--- org/gudy/azureus2/ui/swt/views/TableView.java.orig	Sun Sep 24 15:23:49 2006
+++ org/gudy/azureus2/ui/swt/views/TableView.java	Sun Sep 24 16:04:17 2006
@@ -631,6 +631,7 @@
 			});
 		}
 
+/*
     if (Utils.SWT32_TABLEPAINT) {
   		// SWT 3.2 only.  Code Ok -- Only called in SWT 3.2 mode
 			table.addListener(SWT.PaintItem, new Listener() {
@@ -643,6 +644,7 @@
 				}
 			});
 		}
+*/
 
     // Deselect rows if user clicks on a black spot (a spot with no row)
     table.addMouseListener(new MouseAdapter() {
@@ -816,6 +818,7 @@
     
     // we are sent a SWT.Settings event when the language changes and
     // when System fonts/colors change.  In both cases, invalidate
+/*
     if (SWT.getVersion() > 3200) {
 	    table.addListener(SWT.Settings, new Listener() {
 	      public void handleEvent(Event e) {
@@ -823,6 +826,7 @@
 	      }
 	    });
     }
+*/
 
     // XXX Disabled.  We handle unset rows ourselves via table paints which
     //     are more reliable.
@@ -970,6 +974,7 @@
 		}
 
 		// SWT 3.2 only.  Code Ok -- Only called in SWT 3.2 mode
+/*
 		Rectangle cellBounds = item.getBounds(event.index);
 		
 		cellBounds.x += 3;
@@ -1018,6 +1023,7 @@
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
+*/
 	}
 
 	public void runDefaultAction() {
@@ -3148,7 +3154,7 @@
 	private void changeColumnIndicator() {
 		if (table == null || table.isDisposed())
 			return;
-
+/*
 		try {
 			// can't use TableColumnCore.getPosition, because user may have moved
 			// columns around, messing up the SWT column indexes.  
@@ -3167,6 +3173,7 @@
 		} catch (NoSuchMethodError e) {
 			// sWT < 3.2 doesn't have column indicaters
 		}
+*/
 	}
 
 	private void visibleRowsChanged() {
--- org/gudy/azureus2/ui/swt/views/configsections/ConfigSectionPlugins.java.orig	Sun Sep 24 15:28:27 2006
+++ org/gudy/azureus2/ui/swt/views/configsections/ConfigSectionPlugins.java	Sun Sep 24 15:29:27 2006
@@ -406,12 +406,14 @@
 			tc.addSelectionListener(new SelectionAdapter() {
 				public void widgetSelected(SelectionEvent e) {
 					boolean ascending = comparator.setField(table.indexOf(tc));
+/*
 					try {
 						table.setSortColumn(tc);
 						table.setSortDirection(ascending ? SWT.UP : SWT.DOWN);
 					} catch (NoSuchMethodError ignore) {
 						// Ignore Pre 3.0
 					}
+*/
 					Collections.sort(pluginIFs, comparator);
 					table.clearAll();
 				}
--- org/gudy/azureus2/ui/swt/shells/MessageSlideShell.java.orig	Sun Sep 24 15:32:29 2006
+++ org/gudy/azureus2/ui/swt/shells/MessageSlideShell.java	Sun Sep 24 15:59:32 2006
@@ -64,7 +64,7 @@
  *
  */
 public class MessageSlideShell {
-	private static boolean USE_SWT32_BG_SET = true;
+	private static boolean USE_SWT32_BG_SET = false;
 
 	private static final boolean DEBUG = false;
 
@@ -289,6 +289,7 @@
 		if (shell == null) {
 			shell = new Shell(display, style);
 		}
+/*
 		if (USE_SWT32_BG_SET) {
 			try {
 				shell.setBackgroundMode(SWT.INHERIT_DEFAULT);
@@ -298,6 +299,7 @@
 				// ignore
 			}
 		}
+*/
 		Utils.setShellIcon(shell);
 		shell.setText(popupParams.title);
 
@@ -537,6 +539,7 @@
 			gc.dispose();
 
 			boolean bAlternateDrawing = true;
+/*
 			if (USE_SWT32_BG_SET) {
 				try {
 					shell.setBackgroundImage(imgBackground);
@@ -544,7 +547,7 @@
 				} catch (NoSuchMethodError e) {
 				}
 			}
-
+*/
 			if (bAlternateDrawing) {
 				// Drawing of BG Image for pre SWT 3.2
 

--- org/gudy/azureus2/ui/swt/Utils.java.orig	Sun Sep 24 16:24:39 2006
+++ org/gudy/azureus2/ui/swt/Utils.java	Sun Sep 24 16:25:05 2006
@@ -680,6 +680,7 @@
 		if (!table.isVisible() || iTopIndex >= itemCount)
 			return -1;
 		
+/*
 		if (Constants.isOSX) {
 			try {
 				TableItem item = table.getItem(iTopIndex);
@@ -702,6 +703,7 @@
 								table.getItemHeight()) + 1, table.getItemCount() - 1);
 			}
 		}
+*/
 
 		// getItem will return null if clientArea's height is smaller than
 		// header height.
