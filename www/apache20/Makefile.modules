# Makefile.modules
# Author:			Clement Laforet <clement@FreeBSD.org>
#
# This file is used to build modules list, DBM dependencies and MPM selection.
# I hope it can easily handle external modules (such as mod_perl) or MPMs, like
# muxmpm.
#
# Note to myself: (to generate PLIST_SUB entries for modules)
#	gsed 's/^\(.*\)mod\(.*\)\.so/%%\MOD\U\2%%\L\1mod\2\.so/' pkg-plist > tmp
#	mv tmp pkg-plist
#
# $FreeBSD$
#

# MPM section:
# WITH_MPM: prefork worker perchild threadpool itk

.if ${WITH_MPM:L} == "prefork"
PLIST_SUB+=		WORKER="@comment " THREADPOOL="@comment "

.elif ${WITH_MPM:L} == "worker"
PLIST_SUB+=		WORKER="" THREADPOOL="@comment "

.elif ${WITH_MPM:L} == "threadpool"
PLIST_SUB+=		WORKER="@comment " THREADPOOL=""

.elif ${WITH_MPM:L} == "perchild"
PLIST_SUB+=		WORKER="@comment " THREADPOOL="@comment "

.elif ${WITH_MPM:L} == "itk"
PLIST_SUB+=		WORKER="@comment " THREADPOOL="@comment "
EXTRA_PATCHES+=		${PATCHDIR}/mpm-itk-${MPM_ITK_VERSION}

.else
IGNORE=			"Unknown MPM: ${WITH_MPM}"
.endif	# MPM prefork

.if ${WITH_MPM:L} != "prefork"
PKGNAMESUFFIX=		-${WITH_MPM:L}
.endif

.if ${WITH_MPM:L} == "worker" || ${WITH_MPM:L} == "perchild" || ${WITH_MPM:L} == "threadpool"
WITH_THREADS=		yes
WITH_THREADS_MODULES=	yes
WITHOUT_MODULES+=	CGI
.endif

# xDBM section
#
.if !defined(WITH_DBM)
.   if defined(WITH_BDB) || defined(WITH_BDB_BASE) || defined(WITH_BERKELEYDB)
WITH_DBM=	bdb
.   endif
.endif

.if defined(WITH_BERKELEYDB) && !defined(WITH_BDB_VER)
.   if ${WITH_BERKELEYDB} == "FreeBSD"
WITH_BDB_BASE=	yes
.   else
WITH_BDB_VER=	${WITH_BERKELEYDB:S/db//}
.   endif
.endif

.if defined(WITH_DBM)
.   if ${WITH_DBM:L} == "sdbm"
CONFIGURE_ARGS+=	--with-dbm=sdbm
.   elif ${WITH_DBM:L} == "ndbm"
CONFIGURE_ARGS+=	--with-ndbm
.   elif ${WITH_DBM:L} == "gdbm"
LIB_DEPENDS+=		gdbm:${PORTSDIR}/databases/gdbm
CONFIGURE_ARGS+=	--with-gdbm=${LOCALBASE}
.   elif ${WITH_DBM:L} == "db" || ${WITH_DBM:L} == "bdb"
.	if defined(WITH_BDB_BASE)
CONFIGURE_ARGS+=	--with-dbm=db185 \
			--with-berkeley-db=/usr
.	else
USE_BDB=		yes
INVALID_BDB_VER=	46 47
CONFIGURE_ARGS+=	--with-dbm=db${BDB_VER:S/40/4/} \
			--with-berkeley-db=${LOCALBASE}
.	endif
.   else
.   else
IGNORE=		"Unknown DBM"
.   endif
.else
CONFIGURE_ARGS+=	--with-dbm=sdbm
.endif

.if !defined(WITHOUT_SSL)
WITH_SSL_MODULES=	yes
CONFIGURE_ARGS+=	--with-ssl=${OPENSSLBASE}
.endif

AUTH_MODULES=		ACCESS AUTH AUTH_ANON AUTH_DBM AUTH_DIGEST
DAV_MODULES=		DAV DAV_FS
EXPERIMENTAL_MODULES=	BUCKETEER CASE_FILTER CASE_FILTER_IN EXT_FILTER CHARSET_LITE \
			OPTIONAL_HOOK_EXPORT OPTIONAL_HOOK_IMPORT \
			OPTIONAL_FN_IMPORT OPTIONAL_FN_EXPORT \
			CACHE FILE_CACHE DISK_CACHE MEM_CACHE \
			DUMPIO
LDAP_MODULES=		LDAP AUTH_LDAP
MISC_MODULES=		ACTIONS ALIAS ASIS AUTOINDEX CACHE CERN_META \
			CGI CHARSET_LITE DEFLATE DIR DISK_CACHE ENV EXPIRES \
			FILE_CACHE HEADERS IMAP INCLUDE INFO LOG_CONFIG LOGIO MIME \
			MIME_MAGIC NEGOTIATION REWRITE SETENVIF SPELING STATUS \
			UNIQUE_ID USERDIR USERTRACK VHOST_ALIAS
PROXY_MODULES=		PROXY PROXY_CONNECT PROXY_FTP PROXY_HTTP
SSL_MODULES=		SSL
SUEXEC_MODULES=		SUEXEC
THREADS_MODULES=	CGID

DEFAULT_MODULES_CATEGORIES= \
			AUTH DAV MISC

ALL_MODULES_CATEGORIES=	AUTH DAV EXPERIMENTAL LDAP MISC PROXY SSL \
			SUEXEC THREADS
