--- player/app/plugin/common/npp_gate.cpp	2007-07-06 16:49:21.000000000 -0400
+++ player/app/plugin/common/npp_gate.cpp	2011-06-12 02:55:18.000000000 -0400
@@ -46,5 +46,5 @@
 // will be associated with this newly created NPP instance and 
 // will do all the neccessary job
-NPError NPP_New(NPMIMEType pluginType, NPP instance, uint16 mode, int16 argc, char* argn[], char* argv[], NPSavedData* saved)
+NPError NPP_New(NPMIMEType pluginType, NPP instance, uint16_t mode, int16_t argc, char* argn[], char* argv[], NPSavedData* saved)
 {   
   if(instance == NULL)
@@ -131,5 +131,5 @@
 }
 
-NPError NPP_NewStream(NPP instance, NPMIMEType type, NPStream* stream, NPBool seekable, uint16* stype)
+NPError NPP_NewStream(NPP instance, NPMIMEType type, NPStream* stream, NPBool seekable, uint16_t* stype)
 {
   if(instance == NULL)
@@ -144,5 +144,5 @@
 }
 
-int32 NPP_WriteReady (NPP instance, NPStream *stream)
+int32_t NPP_WriteReady (NPP instance, NPStream *stream)
 {
   if(instance == NULL)
@@ -153,9 +153,9 @@
     return 0x0fffffff;
 
-  int32 rv = plugin->WriteReady(stream);
+  int32_t rv = plugin->WriteReady(stream);
   return rv;
 }
 
-int32 NPP_Write (NPP instance, NPStream *stream, int32 offset, int32 len, void *buffer)
+int32_t NPP_Write (NPP instance, NPStream *stream, int32_t offset, int32_t len, void *buffer)
 {   
   if(instance == NULL)
@@ -166,5 +166,5 @@
     return len;
 
-  int32 rv = plugin->Write(stream, offset, len, buffer);
+  int32_t rv = plugin->Write(stream, offset, len, buffer);
   return rv;
 }
@@ -245,5 +245,5 @@
 }
 
-int16	NPP_HandleEvent(NPP instance, void* event)
+int16_t	NPP_HandleEvent(NPP instance, void* event)
 {
   if(instance == NULL)
@@ -254,5 +254,5 @@
     return 0;
 
-  uint16 rv = plugin->HandleEvent(event);
+  uint16_t rv = plugin->HandleEvent(event);
   return rv;
 }
@@ -299,13 +299,13 @@
 }
 
-int32 Private_WriteReady(NPP instance, NPStream* stream)
+int32_t Private_WriteReady(NPP instance, NPStream* stream)
 {
-  int32 rv = NPP_WriteReady(instance, stream);
+  int32_t rv = NPP_WriteReady(instance, stream);
   return rv;
 }
 
-int32 Private_Write(NPP instance, NPStream* stream, int32 offset, int32 len, void* buffer)
+int32_t Private_Write(NPP instance, NPStream* stream, int32_t offset, int32_t len, void* buffer)
 {
-  int32 rv = NPP_Write(instance, stream, offset, len, buffer);
+  int32_t rv = NPP_Write(instance, stream, offset, len, buffer);
   return rv;
 }
