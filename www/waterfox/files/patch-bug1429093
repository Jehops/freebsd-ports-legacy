commit 0476b46775d8
Author: Tom Tung <shes050117@gmail.com>
Date:   Wed Jan 10 18:05:07 2018 +0800

    Bug 1429093 - Part 1: Only allow notification click to call allowWindowInteraction. r=bkelly, a=lizzard
    
    --HG--
    extra : source : 20b048f7a32fc9d76827c2f06be1d50afb8bbd00
---
 dom/workers/ServiceWorkerPrivate.cpp | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git dom/workers/ServiceWorkerPrivate.cpp dom/workers/ServiceWorkerPrivate.cpp
index 8b7cabf2a345..53b8cf30fa5c 100644
--- dom/workers/ServiceWorkerPrivate.cpp
+++ dom/workers/ServiceWorkerPrivate.cpp
@@ -1253,18 +1253,22 @@ public:
     }
 
     event->SetTrusted(true);
-    aWorkerPrivate->GlobalScope()->AllowWindowInteraction();
-    RefPtr<AllowWindowInteractionHandler> allowWindowInteraction =
-      new AllowWindowInteractionHandler(aWorkerPrivate);
+
+    RefPtr<AllowWindowInteractionHandler> allowWindowInteraction;
+    if (mEventName.EqualsLiteral(NOTIFICATION_CLICK_EVENT_NAME)) {
+      allowWindowInteraction =
+        new AllowWindowInteractionHandler(aWorkerPrivate);
+    }
+
     nsresult rv = DispatchExtendableEventOnWorkerScope(aCx,
                                                        aWorkerPrivate->GlobalScope(),
                                                        event,
                                                        allowWindowInteraction);
     // Don't reject when catching an exception
-    if (NS_FAILED(rv) && rv != NS_ERROR_XPC_JS_THREW_EXCEPTION) {
+    if (NS_FAILED(rv) && rv != NS_ERROR_XPC_JS_THREW_EXCEPTION &&
+        allowWindowInteraction) {
       allowWindowInteraction->FinishedWithResult(Rejected);
     }
-    aWorkerPrivate->GlobalScope()->ConsumeWindowInteraction();
 
     return true;
   }
commit 13c168bfd520
Author: Tom Tung <shes050117@gmail.com>
Date:   Wed Jan 17 11:31:31 2018 +0800

    Bug 1429093 - Part 2: A test to verify the close event is not allowed to window interaction. r=bkelly, a=lizzard
    
    --HG--
    extra : source : abd11ceb68ca7f0b04a4e4b3dc49090c523ad067
---
 .../test/serviceworkers/notificationclose.html     |  2 +-
 .../test/serviceworkers/notificationclose.js       | 31 ++++++++++++++--------
 .../serviceworkers/test_notificationclose.html     |  6 +++--
 3 files changed, 25 insertions(+), 14 deletions(-)

diff --git dom/workers/test/serviceworkers/notificationclose.html dom/workers/test/serviceworkers/notificationclose.html
index 10c8da453976..f18801122efb 100644
--- dom/workers/test/serviceworkers/notificationclose.html
+++ dom/workers/test/serviceworkers/notificationclose.html
@@ -27,7 +27,7 @@
   });
 
   navigator.serviceWorker.onmessage = function(msg) {
-    testWindow.callback(msg.data.result);
+    testWindow.callback(msg.data);
   };
 </script>
 
diff --git dom/workers/test/serviceworkers/notificationclose.js dom/workers/test/serviceworkers/notificationclose.js
index d482180752e5..f04a0ad24430 100644
--- dom/workers/test/serviceworkers/notificationclose.js
+++ dom/workers/test/serviceworkers/notificationclose.js
@@ -2,18 +2,27 @@
 // http://creativecommons.org/publicdomain/zero/1.0/
 //
 onnotificationclose = function(e) {
-  self.clients.matchAll().then(function(clients) {
-    if (clients.length === 0) {
-      dump("********************* CLIENTS LIST EMPTY! Test will timeout! ***********************\n");
-      return;
-    }
+  e.waitUntil(async function() {
+    let windowOpened = true;
+    await clients.openWindow("hello.html")
+      .catch(err => {
+        windowOpened = false;
+      });
 
-    clients.forEach(function(client) {
-      client.postMessage({ result: e.notification.data &&
-                                   e.notification.data['complex'] &&
-                                   e.notification.data['complex'][0] == "jsval" &&
-                                   e.notification.data['complex'][1] == 5 });
+    self.clients.matchAll().then(function(clients) {
+      if (clients.length === 0) {
+        dump("*** CLIENTS LIST EMPTY! Test will timeout! ***\n");
+        return;
+      }
 
+      clients.forEach(function(client) {
+        client.postMessage({ result: e.notification.data &&
+                                     e.notification.data['complex'] &&
+                                     e.notification.data['complex'][0] == "jsval" &&
+                                     e.notification.data['complex'][1] == 5,
+                             windowOpened: windowOpened});
+
+      });
     });
-  });
+  }());
 }
diff --git dom/workers/test/serviceworkers/test_notificationclose.html dom/workers/test/serviceworkers/test_notificationclose.html
index 032dd740bbff..f60482789ab5 100644
--- dom/workers/test/serviceworkers/test_notificationclose.html
+++ dom/workers/test/serviceworkers/test_notificationclose.html
@@ -24,11 +24,13 @@ https://bugzilla.mozilla.org/show_bug.cgi?id=1265841
   function testFrame(src) {
     var iframe = document.createElement("iframe");
     iframe.src = src;
-    window.callback = function(result) {
+    window.callback = function(data) {
       window.callback = null;
       document.body.removeChild(iframe);
       iframe = null;
-      ok(result, "Got notificationclose event with correct data.");
+      ok(data.result, "Got notificationclose event with correct data.");
+      ok(!data.windowOpened,
+         "Shouldn't allow to openWindow in notificationclose");
       MockServices.unregister();
       registration.unregister().then(function() {
         SimpleTest.finish();

