--- Build.PL.orig	Thu Nov  9 07:59:16 2006
+++ Build.PL	Thu Nov  9 08:01:28 2006
@@ -91,135 +91,6 @@
 
     }
 
-    sub ACTION_install {
-        my $self = shift;
-        
-        my $p = $self->{properties};        
-        
-        my $initf = "$p->{install_sets}{site}{lib}/$p->{dist_name}/Init.pm";
-        if ( -e $initf ) {
-            require "$initf";
-            $p->{install_web_directories}{default} = Gantry::Init::base_root();
-        }
-                
-        $self->SUPER::ACTION_install();
-        
-        my $DEF_TMPL_DIR = $p->{install_web_directory};
-        my $prompt;
-        my $count = 0;
-        my ( %dir_hash, @choices );
-
-        print "\n\nGantry comes with a set of default templates that\n"
-            . "need to be written to disk. A typical location for these\n"
-            . "templates is your web server document root.\n\n"
-            . "Enter a directory [$p->{install_web_directories}{default}]\n";
-
-        my $choice = $self->prompt(
-            " ",
-            $p->{install_web_directories}{default},
-        );
-        
-        my $tmpl_dir;
-        if ( $choice =~ /\// ) {
-            $tmpl_dir = $choice;
-        }
-        elsif ( ! defined $p->{install_web_directories}{$choice} ) {
-            $tmpl_dir = '__skip__';
-        }
-        else {
-            $tmpl_dir = $p->{install_web_directories}{$choice}
-        }
-        
-        $tmpl_dir =~ s/\/$//g;
-            
-        if( $tmpl_dir && $tmpl_dir ne '__skip__' ) {
-
-            print "\n\nDirectory doesn't exist. Create $tmpl_dir? [y]\n";
-            
-            if ( ! -d $tmpl_dir ) {
-                my $create = $self->y_n(  " ", 'y' );
-                exit unless $create;
-            }
-
-            # write Init.pm file with install options
-
-            my $init_pkg = << "EO_INIT";
-package Gantry::Init;
-use strict;
-
-sub base_root {
-    return "$tmpl_dir";
-}
-1;
-
-=head1 NAME
-
-Gantry::Init - stores things the user provided to Build.PL during install
-
-=head1 SYNOPSIS
-
-    use Gantry::Init;
-    my \$base_root = Gantry::Init->base_root();
-
-=head1 Methods
-
-=head2 base_root
-
-Returns the local system path to Gantry's default templates.  This usually
-becomes the last item in the Template Toolkit template path.
-
-=head1 AUTHOR
-
-Auto-generated by Build.PL
-
-=cut
-
-EO_INIT
-
-            open( INIT_FILE, "> blib/lib/Gantry/Init.pm" ) or die "$!";
-            print INIT_FILE $init_pkg;
-            close INIT_FILE;
-
-            open( INIT_FILE, "> $initf" ) or die "$!";
-            print INIT_FILE $init_pkg;
-            close INIT_FILE;
-            
-            eval {  
-                File::Path::mkpath( $tmpl_dir );
-            };
-            if ( $@ ) {
-                print "Error: unable to create directory $tmpl_dir\n";
-                $@ =~ s/ at .+?$//;
-                die( "$@\n" );
-            }
-            
-            my $blib_tmpl_dir = File::Spec->catdir(
-                $self->blib, 'web', $p->{build_web_directory} 
-            );  
-            
-            my $num;
-            eval {
-                require File::Copy::Recursive;
-                import File::Copy::Recursive 'dircopy';
-
-                $num = dircopy($blib_tmpl_dir, $tmpl_dir);
-            };
-            if ( $@ ) {
-                print "\nError coping templates:\n";
-                print $@ . "\n";
-            }
-            else {
-                print "\n$num Gantry templates copied to $tmpl_dir\n";
-            }
-        }
-        else {
-            print "SKIPPING WEB CONTENT INSTALL\n";
-        }
-        
-        print "\n";
-
-    } # end ACTION_install
-
     sub process_web_files {
         my $self = shift;
         my $files = $self->find_web_files;
