*** conf/defaults.orig	Thu Jul 29 16:33:56 1993
--- conf/defaults	Sat Jun  6 23:40:14 1998
***************
*** 65,71 ****
  #	the following definition:
  #		SYS_DIR		= $(DIST_DIR)
  
! SYS_DIR		= $(TOP1)/$(SYSTEM)
  
  #	OBJ_TOP is the directory in which intermidiate files reside
  #	These are ".o" files, synthesized ".c" files, ".a" files,
--- 65,71 ----
  #	the following definition:
  #		SYS_DIR		= $(DIST_DIR)
  
! SYS_DIR		= $(TOP0)/$(SYSTEM)
  
  #	OBJ_TOP is the directory in which intermidiate files reside
  #	These are ".o" files, synthesized ".c" files, ".a" files,
***************
*** 105,116 ****
  #	identified as and SYSTEM is the name of the per-system definitions
  #	file listed on the "build" command line.
  
! SPICE_DIR	= $(TOP1)/$(SYSTEM)
! SPICE_LIB_DIR	= $(SPICE_DIR)/lib
  SPICE_EXEC_DIR	= $(SPICE_DIR)/bin
  
  S_SPICE_DIR	= $(SPICE_DIR)
! S_SPICE_LIB_DIR	= $(S_SPICE_DIR)/lib
  S_SPICE_EXEC_DIR= $(S_SPICE_DIR)/bin
  
  #	INSTALL_DIRS lists the directories that need to be created before
--- 105,116 ----
  #	identified as and SYSTEM is the name of the per-system definitions
  #	file listed on the "build" command line.
  
! SPICE_DIR	= ${PREFIX}
! SPICE_LIB_DIR	= $(SPICE_DIR)/share/spice3
  SPICE_EXEC_DIR	= $(SPICE_DIR)/bin
  
  S_SPICE_DIR	= $(SPICE_DIR)
! S_SPICE_LIB_DIR	= $(S_SPICE_DIR)/share/spice3
  S_SPICE_EXEC_DIR= $(S_SPICE_DIR)/bin
  
  #	INSTALL_DIRS lists the directories that need to be created before
***************
*** 129,139 ****
  #	an extra definition to work around the same strange bug.  See either
  #	file "conf/vax" or "conf/gcc".
  
! CC		= cc
  
  #	CC_OPT: Default compile options (optimization/debug level, other)
  
! CC_OPT		= -O
  
  #	CC_OPT_SAFE: Special compile options to override CC_OPT for code
  #	which typically causes problems for most compilers (bsim1 and bsim2).
--- 129,139 ----
  #	an extra definition to work around the same strange bug.  See either
  #	file "conf/vax" or "conf/gcc".
  
! CC		= gcc
  
  #	CC_OPT: Default compile options (optimization/debug level, other)
  
! CC_OPT		= -O2 -pipe
  
  #	CC_OPT_SAFE: Special compile options to override CC_OPT for code
  #	which typically causes problems for most compilers (bsim1 and bsim2).
***************
*** 203,209 ****
  #	X_DIR indicates the top of the X11 lib/include hierarchy; it is only
  #	a convenience that is used in the following definitions.
  
! X_DIR		= /usr
  
  #	INCX lists the X include directories.  This may be different between
  #	MIT X11r5, X11r4, and your vendor's version of X11, though listing
--- 203,209 ----
  #	X_DIR indicates the top of the X11 lib/include hierarchy; it is only
  #	a convenience that is used in the following definitions.
  
! X_DIR		= ${X11BASE}
  
  #	INCX lists the X include directories.  This may be different between
  #	MIT X11r5, X11r4, and your vendor's version of X11, though listing
*** util/build.orig	Sun Mar 31 10:56:09 1996
--- util/build	Sun Mar 31 10:57:21 1996
***************
*** 96,102 ****
  
  TMP_LEADER="${TMP_DIR}/buildl$$"
  TMP_TRAILER="${TMP_DIR}/buildt$$"
! trap 'rm -f ${TMP_LEADER} ${TMP_TRAILER}; exit 1' 1 2 3 4 6 7 8 9 10 12 13 14 15
  echo > "${TMP_TRAILER}"
  BAD=false
  DEBUG=
--- 96,102 ----
  
  TMP_LEADER="${TMP_DIR}/buildl$$"
  TMP_TRAILER="${TMP_DIR}/buildt$$"
! trap 'rm -f ${TMP_LEADER} ${TMP_TRAILER}; exit 1' 1 2 3 4 6 7 8 10 12 13 14 15
  echo > "${TMP_TRAILER}"
  BAD=false
  DEBUG=
*** src/lib/fte/resource.c.orig	Sun Mar 31 10:59:57 1996
--- src/lib/fte/resource.c	Sun Mar 31 11:00:57 1996
***************
*** 369,375 ****
--- 369,377 ----
  	long x;
  	SIGNAL_TYPE	(*orig_signal)( );
  
+ #ifndef __FreeBSD__
  	if (getenv("SPICE_NO_DATASEG_CHECK"))
+ #endif
  		return 0;
  
  	low = 0;
*** src/include/misc.h.orig	Thu Dec  1 09:17:02 1994
--- src/include/misc.h	Sun Mar 31 12:32:58 1996
***************
*** 86,92 ****
--- 86,94 ----
  extern char *realloc();
  extern char *getenv();
  extern int errno;
+ #ifndef __FreeBSD__
  extern char *sys_errlist[];
+ #endif
  extern char *getenv();
  extern char *getwd();
  extern int rand();
***************
*** 111,122 ****
--- 111,124 ----
  #    endif /* clearerr */
  #  endif /* HAS_CLEARERR */
  
+ #ifndef __FreeBSD__
  #  ifndef bzero
  extern int bzero();
  #  endif
  #  ifndef bcopy
  extern void bcopy();
  #  endif
+ #endif /* __FreeBSD__ */
  
  #  ifndef index
  #    ifdef HAS_INDEX
*** src/include/os_bsd.h.orig	Sat Apr 24 18:09:46 1993
--- src/include/os_bsd.h	Tue Jun  2 22:28:04 1998
***************
*** 8,19 ****
  
  #include "os_unix.h"
  
  #define HAS_NO_ATRIGH_DECL	/* if asinh( ) is not in math.h		*/
- #define HAS_ATRIGH		/* acosh( ), asinh( ), atanh( )         */
  #define HAS_FTIME		/* ftime( ), <times.h>			*/
  #define HAS_TERMCAP		/* tgetxxx( )				*/
  #define HAS_VFORK		/* BSD-ism, should not be necessary	*/
- #define HAS_INDEX		/* index( ) instead of strchr( )	*/
  #define HAS_BCOPY		/* bcopy( ), bzero( )			*/
  #define HAS_BSDRANDOM		/* srandom( ) and random( )		*/
  #define HAS_BSDTTY		/* <sgtty.h>				*/
--- 8,23 ----
  
  #include "os_unix.h"
  
+ #ifndef __FreeBSD__
  #define HAS_NO_ATRIGH_DECL	/* if asinh( ) is not in math.h		*/
  #define HAS_FTIME		/* ftime( ), <times.h>			*/
+ #define HAS_INDEX		/* index( ) instead of strchr( )	*/
+ #define HAS_STRINGS		/* use <strings.h> instead of <string.h> */
+ #endif
+ 
+ #define HAS_ATRIGH		/* acosh( ), asinh( ), atanh( )         */
  #define HAS_TERMCAP		/* tgetxxx( )				*/
  #define HAS_VFORK		/* BSD-ism, should not be necessary	*/
  #define HAS_BCOPY		/* bcopy( ), bzero( )			*/
  #define HAS_BSDRANDOM		/* srandom( ) and random( )		*/
  #define HAS_BSDTTY		/* <sgtty.h>				*/
***************
*** 22,25 ****
  #define HAS_BSDRLIMIT		/* getrlimit( )				*/
  #define HAS_DUP2
  #define HAS_GETWD		/* getwd(buf)				*/
! #define HAS_STRINGS		/* use <strings.h> instead of <string.h> */
--- 26,35 ----
  #define HAS_BSDRLIMIT		/* getrlimit( )				*/
  #define HAS_DUP2
  #define HAS_GETWD		/* getwd(buf)				*/
! 
! #ifdef __FreeBSD__
! #define HAS_BSDSOCKETS		/* <net/inet.h>, socket( ), etc.	*/
! #define HAS_BSDTIME		/* gettimeofday( ) return time		*/
! #define HAS_FLOAT_H		/* float.h				*/
! #define HAS_STRCHR		/* strchr( ) instead of index( )	*/
! #endif
