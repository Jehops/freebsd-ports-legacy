Explicitly look for X11 when using it.

This fixes the build with CMake 3.2, whose FindOpenGL.cmake stopped
calling find_package(X11).

Instead, do that ourselves when Q_WS_X11 is true, since that is when we
already try to link against libX11.

Sent upstream: https://github.com/cryos/avogadro/pull/13
--- CMakeLists.txt.orig	2016-06-08 14:19:45 UTC
+++ CMakeLists.txt
@@ -114,7 +114,7 @@ if (CMAKE_COMPILER_IS_GNUCXX)
   endif()
   # Set up additional build flags for particular build types. These will be added to CMAKE_CXX_FLAGS,
   # they will not replace them.
-  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
+#  set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO
     "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} ${CMAKE_CXX_FLAGS_WARN}")
   set(CMAKE_CXX_FLAGS_DEBUG   "-g3 -fno-inline ${CMAKE_CXX_FLAGS_WARN}")
@@ -196,8 +196,8 @@ if(${CMAKE_CXX_COMPILER_ID} MATCHES Inte
     endif()
   endif()
 
-  set(CMAKE_C_FLAGS_RELEASE "-O3 -ipo1 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
-  set(CMAKE_CXX_FLAGS_RELEASE "-O3 -ipo1 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
+#  set(CMAKE_C_FLAGS_RELEASE "-O3 -ipo1 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
+#  set(CMAKE_CXX_FLAGS_RELEASE "-O3 -ipo1 -DNDEBUG -DQT_NO_DEBUG_OUTPUT -Wl,-s")
 
   set(CMAKE_CXX_FLAGS_RELWITHDEBINFO
     "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} ${CMAKE_CXX_FLAGS_WARN}")
@@ -231,7 +231,11 @@ if(NOT Linguist_FOUND)
   message(WARNING " Qt4 Linguist not found, please install it if you want Avogadro translations")
 endif()
 
-find_package(Eigen3) # find and setup Eigen3 if available
+if(Q_WS_X11)
+  find_package(X11 REQUIRED) # avogadro/src/main.cpp calls XInitThread().
+endif()
+
+#find_package(Eigen3) # find and setup Eigen3 if available # not ready for Eigen3, see https://github.com/cryos/avogadro/issues/915
 if(NOT EIGEN3_FOUND)
    message(STATUS "Cannot find Eigen3, trying Eigen2")
    find_package(Eigen2 REQUIRED) # Some version is required
@@ -521,7 +525,7 @@ if(UNIX)
     "${CMAKE_CURRENT_SOURCE_DIR}/avogadro.pc.in"
     "${CMAKE_CURRENT_BINARY_DIR}/avogadro.pc" @ONLY)
   set(PC_FILES "${CMAKE_CURRENT_BINARY_DIR}/avogadro.pc")
-  install(FILES ${PC_FILES} DESTINATION ${LIB_INSTALL_DIR}/pkgconfig)
+  install(FILES ${PC_FILES} DESTINATION libdata/pkgconfig)
 endif()
 
 # avopkg
