*** tac_plus.1.orig	Sat Jul 29 02:49:20 1995
--- tac_plus.1	Mon Mar  3 17:34:30 1997
***************
*** 30,36 ****
  authorisation and accounting.
  .LP
  On startup, tac_plus creates the file
! .B /etc/tac_plus.pid ,
  if possible, containing its process id.
  .LP
  .SH ARGUMENTS and OPTIONS
--- 30,36 ----
  authorisation and accounting.
  .LP
  On startup, tac_plus creates the file
! .B /var/run/tac_plus.pid ,
  if possible, containing its process id.
  .LP
  .SH ARGUMENTS and OPTIONS
***************
*** 79,91 ****
  .B \-d <level>
  Switch on debugging and write debug output into
  .B
! /tmp/var/tac_plus.log. 
  
  See the definitions of debugging flags at the bottom of tac_plus.h for
  available flags and their meanings.  Most flags cause extra messages
  to be sent to 
  .B
! /tmp/var/tac_plus.log 
  and also to 
  .B
  syslog.
--- 79,91 ----
  .B \-d <level>
  Switch on debugging and write debug output into
  .B
! /var/tmp/tac_plus.log. 
  
  See the definitions of debugging flags at the bottom of tac_plus.h for
  available flags and their meanings.  Most flags cause extra messages
  to be sent to 
  .B
! /var/tmp/tac_plus.log 
  and also to 
  .B
  syslog.
***************
*** 177,183 ****
  facility.
  .nf
  
! local6.info					/var/adm/messages
  
  .fi
  .LP
--- 177,183 ----
  facility.
  .nf
  
! local6.info					/var/log/tac_plus.log
  
  .fi
  .LP
***************
*** 194,200 ****
  .B /var/tmp/tac_plus.log
  Contains debugging output when -d is in effect.
  .TP
! .B /etc/tac_plus.pid 
  contains the process id of currently running daemon.
  .SH BUGS
  The configuration file syntax is too complex.
--- 194,200 ----
  .B /var/tmp/tac_plus.log
  Contains debugging output when -d is in effect.
  .TP
! .B /var/run/tac_plus.pid 
  contains the process id of currently running daemon.
  .SH BUGS
  The configuration file syntax is too complex.
*** users_guide.orig	Sat Jul 29 02:49:20 1995
--- users_guide	Mon Mar  3 19:51:56 1997
***************
*** 996,1005 ****
  and then send the daemon a SIGUSR1. This will cause it to reinitialize
  itself and re-read the configuration file.
  
! On startup, tac_plus creates the file /etc/tac_plus.pid , if possible,
  containing its process id, so something like the following should work:
  
! # kill -USR1 `cat /etc/tac_plus.pid`
  
  It's a good idea to check that the daemon is still running after
  sending it a SIGUSR1, since a syntactically incorrect configuration
--- 996,1005 ----
  and then send the daemon a SIGUSR1. This will cause it to reinitialize
  itself and re-read the configuration file.
  
! On startup, tac_plus creates the file /var/run/tac_plus.pid, if possible,
  containing its process id, so something like the following should work:
  
! # kill -USR1 `cat /var/run/tac_plus.pid`
  
  It's a good idea to check that the daemon is still running after
  sending it a SIGUSR1, since a syntactically incorrect configuration
