#!/usr/bin/perl -w
#
# $FreeBSD$

#
# BEWARE:  If you are "borrowing" this code for use on another cvs
# repository, please make sure you change all references to '@FreeBSD.org'
# in the log_accum script.  Otherwise your commit messages will be sent
# to 'cvs-committers@freebsd.org' etc.  This could be highly embarrassing. :-)
#

use strict;
use lib $ENV{CVSROOT};
use CVSROOT::cfg;


my $CVSROOT = $ENV{CVSROOT} || die "Can't determine CVSROOT (commitcheck)!\n";

my $MINCVSVERSION = "1090900";	# 1.9.9p0

# Check that the user is committing on the right machine.
#
use Sys::Hostname;
my $hostname = hostname();
if (@cfg::COMMIT_HOSTS && !grep(/^\Q$hostname\E$/i, @cfg::COMMIT_HOSTS)) {
	print "Please don't commit on this host!\n";
	print "Please commit on ",
	    join(" or ", @cfg::COMMIT_HOSTS),
	    " instead.\n";
	exit 1;
}

# Sanity check to make sure we've been run through the wrapper and are
# now primary group 'ncvs'.
#
my $GRP=`/usr/bin/id -gn`;
chomp $GRP;
unless ( $GRP =~ /^ncvs$/ ) {
	print "You do not have group ncvs (commitcheck)!\n";
	exit 1;
}

#
# Ensure the minimum version of cvs is installed.
#
my $VERSTR = `/usr/bin/cvs -v`;
$VERSTR =~ s/.*Concurrent\D*(\S*).*/$1/s;
$VERSTR =~ s/\D+/./g;
my $VERSION = sprintf "%d%02d%02d%02d\n", split /\./, $VERSTR;
unless ( $VERSION && $VERSION >= $MINCVSVERSION ) {
	print "The wrong version of CVS is installed (commitcheck)!\n";
	exit 1;
}


#
# Does the access control list allow them commit access?
#
system("$CVSROOT/CVSROOT/cvs_acls.pl", @ARGV);
if ($? >> 8) {
	print "Access control checks failed! (cvs_acls.pl)\n";
	exit 1;
}

#
# Last minute checks and preparations for log_accum.pl later.  This
# records the last directory in this commit so that log_accum knows when
# to finish coalescing commit messages and mail it.
#
system("$CVSROOT/CVSROOT/commit_prep.pl", @ARGV);
if ($? >> 8) {
	print "commit_prep.pl failed!\n";
	exit 1;
}

exit 0;		# Lets do it!

#end
