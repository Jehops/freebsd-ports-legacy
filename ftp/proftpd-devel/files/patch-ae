--- modules/mod_auth.c.orig	Fri Jul 28 10:51:59 2000
+++ modules/mod_auth.c	Fri Jul 28 10:52:17 2000
@@ -72,7 +72,7 @@
 		      "closing control connection.",
                       TimeoutLogin);
   
-  main_exit((void*) LOG_NOTICE, "FTP login timed out, disconnected.",
+  main_exit((void*) LOG_INFO, "FTP login timed out, disconnected.",
 	    (void*) 0, NULL);
   
 /* should never be reached */
@@ -608,7 +608,7 @@
   c = _auth_resolve_user(p,&user,&ourname,&anonname);
 
   if(!user) {
-    log_pri(LOG_NOTICE, "USER %s (Login failed): User not a UserAlias.",
+    log_pri(LOG_INFO, "USER %s (Login failed): User not a UserAlias.",
 	    origuser);
     goto auth_failure;
   }
@@ -617,7 +617,7 @@
   aclp = login_check_limits(main_server->conf,FALSE,TRUE,&i);
 
   if((pw = auth_getpwnam(p,user)) == NULL) {
-    log_pri(LOG_NOTICE, "USER %s (Login failed): Can't find user.", user);
+    log_pri(LOG_INFO, "USER %s (Login failed): Can't find user.", user);
     goto auth_failure;
   }
 
@@ -678,14 +678,14 @@
     }
 
     if(!login_check_limits(c->subset,FALSE,TRUE,&i) || (!aclp && !i) ){
-      log_auth(LOG_NOTICE, "ANON %s (Login failed): Limit access denies "
+      log_auth(LOG_INFO, "ANON %s (Login failed): Limit access denies "
 	       "login.", origuser);
       goto auth_failure;
     }
   }
 
   if(!c && !aclp) {
-    log_auth(LOG_NOTICE, "USER %s (Login failed): Limit access denies login.",
+    log_auth(LOG_INFO, "USER %s (Login failed): Limit access denies login.",
 	     origuser);
     goto auth_failure;
   }
@@ -702,7 +702,7 @@
     if(c && origuser && strcasecmp(user,origuser) &&
        get_param_int(c->subset,"AuthUsingAlias",FALSE) == 1) {
       user_name = origuser;
-      log_auth(LOG_NOTICE, "ANON AUTH: User %s, Auth Alias %s",
+      log_auth(LOG_INFO, "ANON AUTH: User %s, Auth Alias %s",
 	       user, user_name);
     }
     
@@ -730,22 +730,22 @@
 
     switch(authcode) {
     case AUTH_NOPWD:
-      log_auth(LOG_NOTICE, "USER %s (Login failed): No such user found.",
+      log_auth(LOG_INFO, "USER %s (Login failed): No such user found.",
 	       user);
       goto auth_failure;
       
     case AUTH_BADPWD:
-      log_auth(LOG_NOTICE, "USER %s (Login failed): Incorrect password.",
+      log_auth(LOG_INFO, "USER %s (Login failed): Incorrect password.",
 	       origuser);
       goto auth_failure;
 
     case AUTH_AGEPWD:
-      log_auth(LOG_NOTICE, "USER %s (Login failed): Password expired.",
+      log_auth(LOG_INFO, "USER %s (Login failed): Password expired.",
 	       user);
       goto auth_failure;
 
     case AUTH_DISABLEDPWD:
-      log_auth(LOG_NOTICE, "USER %s (Login failed): Account disabled.",
+      log_auth(LOG_INFO, "USER %s (Login failed): Account disabled.",
 	       user);
       goto auth_failure;
 
@@ -768,12 +768,12 @@
   auth_setgrent(p);
 
   if(!_auth_check_shell((c ? c->subset : main_server->conf),pw->pw_shell)) {
-    log_auth(LOG_NOTICE, "USER %s (Login failed): Invalid shell.", user);
+    log_auth(LOG_INFO, "USER %s (Login failed): Invalid shell.", user);
     goto auth_failure;
   }
 
   if(!_auth_check_ftpusers((c ? c->subset : main_server->conf),pw->pw_name)) {
-    log_auth(LOG_NOTICE, "USER %s (Login failed): User in %s.",
+    log_auth(LOG_INFO, "USER %s (Login failed): User in %s.",
 	     user, FTPUSERS_PATH);
     goto auth_failure;
   }
@@ -845,7 +845,7 @@
 
   if(!login_check_limits((c ? c->subset : main_server->conf),FALSE,TRUE,&i))
   {
-    log_auth(LOG_NOTICE, "%s: Limit access denies login (DenyGroup).",
+    log_auth(LOG_INFO, "%s: Limit access denies login (DenyGroup).",
 	     origuser);
     goto auth_failure;
   }
@@ -860,7 +860,7 @@
   if(c && c->subset)
     resolve_anonymous_dirs(c->subset);
 
-  log_auth(LOG_NOTICE, "%s %s: Login successful.",
+  log_auth(LOG_INFO, "%s %s: Login successful.",
 	   (c != NULL) ? "ANON" : "USER",
 	   origuser);
 
@@ -1172,7 +1172,7 @@
 
   if(failnopwprompt) {
     if(!user) {
-      log_pri(LOG_NOTICE, "USER %s (Login failed): Not a UserAlias.",
+      log_pri(LOG_INFO, "USER %s (Login failed): Not a UserAlias.",
 	      origuser);
       send_response(R_530,"Login incorrect.");
       end_login(0);
@@ -1189,7 +1189,7 @@
 
     if(c) {
       if(!login_check_limits(c->subset,FALSE,TRUE,&i) || (!aclp && !i) ) {
-	log_auth(LOG_NOTICE, "ANON %s: Limit access denies login.",
+	log_auth(LOG_INFO, "ANON %s: Limit access denies login.",
 		 origuser);
 	send_response(R_530,"Login incorrect.");
 	end_login(0);
@@ -1197,7 +1197,7 @@
     }
     
     if(!c && !aclp) {
-      log_auth(LOG_NOTICE, "USER %s: Limit access denies login.", origuser);
+      log_auth(LOG_INFO, "USER %s: Limit access denies login.", origuser);
       send_response(R_530,"Login incorrect.");
       end_login(0);
     }
@@ -1269,7 +1269,7 @@
 			"Too many users in your class, "
 			"please try again later.");
 	
-	log_auth(LOG_NOTICE, "Connection refused (max clients for class %s).",
+	log_auth(LOG_INFO, "Connection refused (max clients for class %s).",
 		 session.class->name);
 	
 	end_login(0);
@@ -1304,7 +1304,7 @@
       send_response(R_530,"%s",
                     sreplace(cmd->tmp_pool,maxstr,"%m",maxn,NULL));
 
-      log_auth(LOG_NOTICE, "Connection refused (max clients per host %d).",
+      log_auth(LOG_INFO, "Connection refused (max clients per host %d).",
 	       max);
       
       end_login(0);
@@ -1330,7 +1330,7 @@
     if(cur >= max) {
       send_response(R_530, "%s",
 		    sreplace(cmd->tmp_pool, maxstr, "%m", maxn, NULL));
-      log_auth(LOG_NOTICE, "Connection refused (max clients %d).", max);
+      log_auth(LOG_INFO, "Connection refused (max clients %d).", max);
       end_login(0);
     }
 
@@ -1411,7 +1411,7 @@
 
     if(++auth_tries >= max) {
       send_response(R_530,"Login incorrect");
-      log_auth(LOG_NOTICE, "Maximum login attempts exceeded.");
+      log_auth(LOG_INFO, "Maximum login attempts exceeded.");
       end_login(0);
     }
 
