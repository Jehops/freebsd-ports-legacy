#!/bin/sh

# PROVIDE: openerpd
# REQUIRE: postgresql LOGIN
#
# Add the following lines to /etc/rc.conf
# to enable this service:
#
# openerpd_enable (bool):   Set to NO by default.
#               Set it to YES to enable mongod.
#
# Additional configurable variables:
# openerpd_config (path):   Set to %%PREFIX%%/etc/openerp-server.conf
#               by default. Additional configuration. You
#               can also use openerpd_flags for additional
#               command line arguments.

. /etc/rc.subr

name="openerpd"
rcvar=openerpd_enable

command=%%PREFIX%%/bin/openerp-server

load_rc_config $name

: ${openerpd_enable="NO"}
: ${openerpd_config="%%PREFIX%%/etc/openerp-server.conf"}
: ${openerpd_user="openerpd"}

openerpd_pidfile=${openerpd_pidfile:-"/var/run/openerp-server/openerpd.pid"}
openerpd_config=${openerpd_config:-"/usr/local/etc/openerpd.conf"}
openerpd_flags=${openerpd_flags:-"--config=${openerpd_config}"}

required_files="$openerpd_config"

start_precmd="${name}_prestart"
stop_cmd="${name}_stop"

openerpd_prestart()
{
    if [ ! -d `dirname ${openerpd_pidfile}` ]
    then
        mkdir -p `dirname ${openerpweb_pidfile}`
    fi
    chown ${openerpd_user} `dirname ${openerpd_pidfile}`
}

openerpd_stop()
{
    # ensure the server is stopped
    if [ -f ${openerpd_pidfile} ]
    then
        echo "Stopping ${name}."
        kill -15 `cat ${openerpd_pidfile}`
    else
        openerpd_pid=`pgrep -f "openerp-server.py ${openerpd_flags}"`
        if [ ${openerpd_pid} ]
        then
            echo "Stopping ${name}."
             kill -15 ${openerpd_pid}
        else
            echo "${name} not running? (pidfile not found)"
        fi
    fi
}



command_args="-c $openerpd_config >/dev/null 2>&1 &"

load_rc_config $name
run_rc_command "$1"
