Tcc is a small and fast C compiler with the following features:
  * Small: You can compile and execute C code everywhere, for
    example on rescue disks (about 100KB for x86 TCC executable,
    including C preprocessor, C compiler, assembler and linker).
  * Fast: tcc generates optimized x86 code. No byte code overhead.
    Compile, assemble and link several times faster than GCC.
  * Unlimited: Any C dynamic library can be used directly. TCC is
    heading torward full ISOC99 compliance. TCC can of course compile
    itself.
  * Safe: tcc includes an optional memory and bound checker. Bound
    checked code can be mixed freely with standard code.
  * Compile and execute C source directly. No linking or assembly
    necessary. Full C preprocessor and GNU-like assembler included.
  * C script supported : just add '#!/usr/local/bin/tcc -run' at
    the first line of your C source, and execute it directly from the
    command line.
  * With libtcc, you can use TCC as a backend for dynamic code
    generation.

WWW: http://www.tinycc.org/
