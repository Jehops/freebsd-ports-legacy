This should be properly fixed upstream by the next snapshot.

Revert commit 4e49b994de060d4a6c9318d0ed52ef038153426e
Author: Richard Sandiford <richard.sandiford@arm.com>
Date:   Wed Jun 17 17:45:29 2020 +0100

    recog: Tweak insn_gen_fn::operator() definition
    
    Fixes a “left operand of comma has no effect” warning that some were
    seeing.  Also fixes a spurious ellipsis that Jonathan Wakely pointed
    out.
    
    2020-06-17  Richard Sandiford  <richard.sandiford@arm.com>
    
    gcc/
            * coretypes.h (first_type): New alias template.
            * recog.h (insn_gen_fn::operator()): Use it instead of a decltype.
            Remove spurious “...” and split the function type out into a typedef.

--- gcc/coretypes.h	2020-06-21 22:32:12.000000000 +0000
+++ gcc/coretypes.h	2020-06-23 18:56:41.074951000 +0000
@@ -359,10 +359,6 @@
   const ValueType value;	/* the value of the name */
 };
 
-/* Alias of the first type, ignoring the second.  */
-template<typename T1, typename T2>
-using first_type = T1;
-
 /* Iterator pair used for a collection iteration with range-based loops.  */
 
 template<typename T>
--- gcc/recog.h
+++ gcc/recog.h
@@ -295,10 +295,9 @@ struct insn_gen_fn
   typedef void (*stored_funcptr) (void);
 
   template<typename ...Ts>
-  rtx_insn *operator() (Ts... args) const
+  rtx_insn *operator() (Ts... args...) const
   {
-    typedef rtx_insn *(*funcptr) (first_type<rtx, Ts>...);
-    return ((funcptr) func) (args...);
+    return ((rtx_insn *(*) (decltype(args, NULL_RTX)...)) func) (args...);
   }
 
   // This is for compatibility of code that invokes functions like
