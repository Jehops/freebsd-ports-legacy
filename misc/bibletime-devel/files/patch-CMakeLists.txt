--- ../CMakeLists.txt.orig	2008-08-27 15:01:48.000000000 -0400
+++ ../CMakeLists.txt	2008-09-11 15:57:29.000000000 -0400
@@ -6,8 +6,8 @@
 
 #Non-English locales to be processed and installed for UI, handbook and howto
 LIST(APPEND MESSAGE_LOCALE_LANGS af bg cs da de en_GB es et fi fr hu it ko nl nn_NO no pl pt_br ro ru sk sv ua zh_CN zh_TW)
-#WARNING: If you modify HANDBOOK_LOCALE_LANGS or HOWTO_LOCALE_LANGS, 
-#also modify the po4a conf files in cmake/docs/ to make sure all languages are processed. 
+#WARNING: If you modify HANDBOOK_LOCALE_LANGS or HOWTO_LOCALE_LANGS,
+#also modify the po4a conf files in cmake/docs/ to make sure all languages are processed.
 LIST(APPEND HANDBOOK_LOCALE_LANGS de fi fr nl)
 LIST(APPEND HOWTO_LOCALE_LANGS bg cs de fi fr it ko nl pt-br ru)
 
@@ -75,7 +75,7 @@
 IF (CMAKE_BUILD_TYPE STREQUAL "Release")
 	KDE4_ADD_EXECUTABLE(bibletime ${bibletime_SOURCES})
 	SET_TARGET_PROPERTIES(bibletime
-		PROPERTIES 
+		PROPERTIES
 			COMPILE_FLAGS "-fexceptions" #Enable exception handling
 	)
 	TARGET_LINK_LIBRARIES(bibletime
@@ -92,7 +92,7 @@
 ELSE (CMAKE_BUILD_TYPE STREQUAL "Release")
 	KDE4_ADD_EXECUTABLE(bibletime ${bibletime_SOURCES} ${bibletime_test_SOURCES})
 	SET_TARGET_PROPERTIES(bibletime
-		PROPERTIES 
+		PROPERTIES
 			COMPILE_FLAGS "-fexceptions -DBT_ENABLE_TESTING" #Enable exception handling and Testing
 	)
 	TARGET_LINK_LIBRARIES(bibletime
@@ -122,87 +122,66 @@
 	SET(CMAKE_INSTALL_PREFIX "install/") #install to ./build/install, allow override
 ENDIF (NOT CMAKE_INSTALL_PREFIX)
 
-SET(CMAKE_CXX_FLAGS_RELEASE "-W -O2")
-SET(CMAKE_CXX_FLAGS_DEBUG "-Wall -Werror -pedantic-errors -O0 -g")
-
-SET(CMAKE_CXX_FLAGS_DEBUG_BINONLY ${CMAKE_CXX_FLAGS_DEBUG})
-SET(CMAKE_C_FLAGS_DEBUG_BINONLY ${CMAKE_C_FLAGS_DEBUG})
-SET(CMAKE_EXE_LINKER_FLAGS_DEBUG_BINONLY ${CMAKE_EXE_LINKER_FLAGS_DEBUG})
-SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG_BINONLY ${CMAKE_SHARED_LINKER_FLAGS_DEBUG})
-MARK_AS_ADVANCED(
-	CMAKE_CXX_FLAGS_DEBUG_BINONLY
-	CMAKE_C_FLAGS_DEBUG_BINONLY
-	CMAKE_EXE_LINKER_FLAGS_DEBUG_BINONLY
-	CMAKE_SHARED_LINKER_FLAGS_DEBUG_BINONLY
-)
-
+SET(CMAKE_CXX_FLAGS "-W -O2")
+SET(CMAKE_CXX_FLAGS_DEBUG "-Wall -Werror -O0 -g") #-pedantic-errors
+SET(CMAKE_CXX_FLAGS_DEBUGFULL "-Wall -Werror -O0 -g") #-pedantic-errors
 
 ######################################################
 # Install files
 #
 # main binary
-INSTALL(TARGETS "bibletime" 
+INSTALL(TARGETS "bibletime"
 	DESTINATION "bin/"
-	CONFIGURATIONS Debug Release Debug_Binonly
 )
 # compiled catalogs
 FOREACH(MESSAGE_LOCALE_LANG ${MESSAGE_LOCALE_LANGS})
-	INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/i18n/messages/bibletime_ui_${MESSAGE_LOCALE_LANG}.qm" 
+	INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/i18n/messages/bibletime_ui_${MESSAGE_LOCALE_LANG}.qm"
 		DESTINATION "share/bibletime/locale/"
-		CONFIGURATIONS Debug Release
 	)
 ENDFOREACH(MESSAGE_LOCALE_LANG ${MESSAGE_LOCALE_LANGS})
 # icons
 FILE(GLOB INSTALL_ICONS_LIST "${CMAKE_CURRENT_SOURCE_DIR}/pics/icons/*.svg")
-INSTALL(FILES ${INSTALL_ICONS_LIST} 
+INSTALL(FILES ${INSTALL_ICONS_LIST}
 	DESTINATION "share/bibletime/icons/"
-	CONFIGURATIONS Debug Release
 )
 # display templates
 FILE(GLOB INSTALL_DISPLAY_TEMPLATES_LIST ${CMAKE_CURRENT_SOURCE_DIR}/src/display-templates/*.tmpl)
-INSTALL(FILES ${INSTALL_DISPLAY_TEMPLATES_LIST} 
+INSTALL(FILES ${INSTALL_DISPLAY_TEMPLATES_LIST}
 	DESTINATION "share/bibletime/display-templates/"
-	CONFIGURATIONS Debug Release
 )
 # splash screen
-INSTALL(FILES "pics/startuplogo.png" 
+INSTALL(FILES "pics/startuplogo.png"
 	DESTINATION "share/bibletime/pics/"
-	CONFIGURATIONS Debug Release
 )
 #handbook (install images from en/ to all languages)
 FILE(GLOB INSTALL_HANDBOOK_IMAGES "${CMAKE_CURRENT_SOURCE_DIR}/docs/handbook/en/html/*.png")
 FOREACH(HANDBOOK_LOCALE_LANG ${HANDBOOK_LOCALE_LANGS} "en")
 	FILE(GLOB INSTALL_HANDBOOK_HTML_FILES_${HANDBOOK_LOCALE_LANG} "${CMAKE_CURRENT_SOURCE_DIR}/docs/handbook/${HANDBOOK_LOCALE_LANG}/html/*.html")
-	INSTALL(FILES ${INSTALL_HANDBOOK_HTML_FILES_${HANDBOOK_LOCALE_LANG}} 
+	INSTALL(FILES ${INSTALL_HANDBOOK_HTML_FILES_${HANDBOOK_LOCALE_LANG}}
 		DESTINATION "share/bibletime/docs/handbook/${HANDBOOK_LOCALE_LANG}/"
-		CONFIGURATIONS Debug Release
 	)
-	INSTALL(FILES ${INSTALL_HANDBOOK_IMAGES} 
+	INSTALL(FILES ${INSTALL_HANDBOOK_IMAGES}
 		DESTINATION "share/bibletime/docs/handbook/${HANDBOOK_LOCALE_LANG}/"
-		CONFIGURATIONS Debug Release
 	)
 ENDFOREACH(HANDBOOK_LOCALE_LANG ${HANDBOOK_LOCALE_LANGS} "en")
 #howto (does not have images)
 FOREACH(HOWTO_LOCALE_LANG ${HOWTO_LOCALE_LANGS} "en")
 	FILE(GLOB INSTALL_HOWTO_HTML_FILES_${HOWTO_LOCALE_LANG} "${CMAKE_CURRENT_SOURCE_DIR}/docs/howto/${HOWTO_LOCALE_LANG}/html/*.html")
-	INSTALL(FILES ${INSTALL_HOWTO_HTML_FILES_${HOWTO_LOCALE_LANG}} 
+	INSTALL(FILES ${INSTALL_HOWTO_HTML_FILES_${HOWTO_LOCALE_LANG}}
 		DESTINATION "share/bibletime/docs/howto/${HOWTO_LOCALE_LANG}/"
-		CONFIGURATIONS Debug Release
 	)
 ENDFOREACH(HOWTO_LOCALE_LANG ${HOWTO_LOCALE_LANGS} "en")
 #
 # Platform specific installation
 #
 # LINUX: application icon
-INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/pics/icons/bibletime.svg" 
+INSTALL(FILES "${CMAKE_CURRENT_SOURCE_DIR}/pics/icons/bibletime.svg"
 	DESTINATION "share/icons/"
-	CONFIGURATIONS Debug Release
 )
 # LINUX: desktop file
 CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/cmake/platforms/linux/bibletime.desktop.cmake" "${CMAKE_CURRENT_BINARY_DIR}/bibletime.desktop")
-INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/bibletime.desktop" 
+INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/bibletime.desktop"
 	DESTINATION "share/applications/"
-	CONFIGURATIONS Debug Release
 )
 ######################################################
 
