--- src/ime-core/imi_view_classic.h.orig	2011-02-17 21:39:52.000000000 -0600
+++ src/ime-core/imi_view_classic.h	2011-11-10 23:00:20.374788681 -0600
@@ -61,6 +61,9 @@ public:
     virtual int  onCandidatePageRequest(int pgno, bool relative);
     virtual int  onCandidateSelectRequest(int index);
 
+    void makeSelection(int candiIdx, unsigned& mask);
+    void deleteCandidate(int candiIdx, unsigned& mask);
+
 private:
     unsigned    m_cursorFrIdx;
     unsigned    m_candiFrIdx;
@@ -75,8 +78,6 @@ private:
     inline void _erase (bool backward, unsigned& mask);
 
     inline void _getCandidates ();
-    inline void _makeSelection (int candiIdx, unsigned& mask);
-    inline void _deleteCandidate (int candiIdx, unsigned& mask);
 
     inline void _commitChar (TWCHAR ch);
     inline void _commitString (const wstring& wstr);
--- src/ime-core/imi_view_classic.cpp.orig	2011-02-17 21:39:52.000000000 -0600
+++ src/ime-core/imi_view_classic.cpp	2011-11-10 23:01:01.213605402 -0600
@@ -168,7 +168,7 @@ CIMIClassicView::onKeyEvent(const CKeyEv
              !m_pIC->isEmpty ()) {
         changeMasks |= KEYEVENT_USED;
         unsigned sel = (keyvalue == '0'? 9: keyvalue-'1');        
-        _deleteCandidate (sel, changeMasks);
+        deleteCandidate (sel, changeMasks);
         goto PROCESSED;
 
     } else if ((modifiers & (IM_CTRL_MASK | IM_ALT_MASK | IM_SUPER_MASK | IM_RELEASE_MASK)) == 0) {
@@ -177,7 +177,7 @@ CIMIClassicView::onKeyEvent(const CKeyEv
             if (!m_pIC->isEmpty ()) {
                 changeMasks |= KEYEVENT_USED;
                 unsigned sel = (keyvalue == '0'? 9: keyvalue-'1');
-                _makeSelection (sel, changeMasks);
+                makeSelection (sel, changeMasks);
             } else {
                 m_numeric_mode = true;
             }
@@ -216,7 +216,7 @@ CIMIClassicView::onKeyEvent(const CKeyEv
         } else if (keycode == IM_VK_SPACE) {
             if (!m_pIC->isEmpty ()) {
                 changeMasks |= KEYEVENT_USED;
-                _makeSelection (0, changeMasks);
+                makeSelection (0, changeMasks);
             } else {
                 wstring wstr = (m_pIC->fullPuncOp()) (keyvalue);
                 if (wstr.size()) {
@@ -327,7 +327,7 @@ CIMIClassicView::onCandidateSelectReques
     unsigned changeMasks = 0;
 
     if (!m_pIC->isEmpty())
-        _makeSelection(index, changeMasks);
+        makeSelection(index, changeMasks);
 
     updateWindows(changeMasks);
     return 0;
@@ -612,7 +612,7 @@ CIMIClassicView::_moveEnd (unsigned& mas
 }
 
 void
-CIMIClassicView::_makeSelection (int candiIdx, unsigned& mask)
+CIMIClassicView::makeSelection (int candiIdx, unsigned& mask)
 {
     candiIdx += m_candiPageFirst;
     if (!m_tailSentence.empty ()) --candiIdx;
@@ -655,7 +655,7 @@ CIMIClassicView::_makeSelection (int can
 }
     
 void
-CIMIClassicView::_deleteCandidate (int candiIdx, unsigned& mask)
+CIMIClassicView::deleteCandidate (int candiIdx, unsigned& mask)
 {
     candiIdx += m_candiPageFirst;
     if (!m_tailSentence.empty ()) --candiIdx;
--- src/ime-core/imi_view.h.orig	2011-02-17 21:39:52.000000000 -0600
+++ src/ime-core/imi_view.h	2011-11-10 23:05:14.515633839 -0600
@@ -188,7 +188,7 @@ public:
     CIMIWinHandler* getWinHandler(void) {return m_pWinHandler;}
 
     void setHotkeyProfile (CHotkeyProfile *prof) { m_pHotkeyProfile = prof;}
-    void setCandiWindowSize (unsigned size) {m_candiWindowSize = size<10? size: 10;}
+    void setCandiWindowSize (unsigned size) {m_candiWindowSize = size;}
     CHotkeyProfile* getHotkeyProfile() { return m_pHotkeyProfile; }
     unsigned getCandiWindowSize() { return m_candiWindowSize; }
 
