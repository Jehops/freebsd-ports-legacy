--- pine/pine.c.orig	Tue Sep 21 07:17:58 1999
+++ pine/pine.c	Thu Oct 14 12:13:57 1999
@@ -115,12 +115,12 @@
 	OTHER_MENU,
 	NULL_MENU,
 	NULL_MENU,
-	{"P","PrevCmd",{MC_PREVITEM,3,{'p',ctrl('P'),KEY_UP}},KS_NONE},
-	{"N","NextCmd",{MC_NEXTITEM,3,{'n',ctrl('N'),KEY_DOWN}},KS_NONE},
+	{"P","前一命令",{MC_PREVITEM,3,{'p',ctrl('P'),KEY_UP}},KS_NONE},
+	{"N","次一命令",{MC_NEXTITEM,3,{'n',ctrl('N'),KEY_DOWN}},KS_NONE},
 	NULL_MENU,
 	NULL_MENU,
-	{"R","RelNotes",{MC_RELNOTES,1,{'r'}},KS_NONE},
-	{"K","KBLock",{MC_KBLOCK,1,{'k'}},KS_NONE},
+	{"R","出版說明",{MC_RELNOTES,1,{'r'}},KS_NONE},
+	{"K","鍵盤鎖定",{MC_KBLOCK,1,{'k'}},KS_NONE},
 	NULL_MENU,
 	NULL_MENU,
 
@@ -130,10 +130,10 @@
 	COMPOSE_MENU,
 	LISTFLD_MENU,
 	GOTO_MENU,
-	{"I","Index",{MC_INDEX,1,{'i'}},KS_FLDRINDEX},
-	{"J","Journal",{MC_JOURNAL,1,{'j'}},KS_REVIEW},
-	{"S","Setup",{MC_SETUP,1,{'s'}},KS_NONE},
-	{"A","AddrBook",{MC_ADDRBOOK,1,{'a'}},KS_ADDRBOOK},
+	{"I","索引",{MC_INDEX,1,{'i'}},KS_FLDRINDEX},
+	{"J","日誌",{MC_JOURNAL,1,{'j'}},KS_REVIEW},
+	{"S","設定",{MC_SETUP,1,{'s'}},KS_NONE},
+	{"A","地址簿",{MC_ADDRBOOK,1,{'a'}},KS_ADDRBOOK},
 	RCOMPOSE_MENU,
 	NULL_MENU};
 INST_KEY_MENU(main_keymenu, main_keys);
@@ -542,7 +542,7 @@
 		static struct key simple_file_keys[] =
 		{HELP_MENU,
 		 NULL_MENU,
-		 {"Q","Quit Viewer",{MC_EXIT,1,{'q'}},KS_NONE},
+		 {"Q","離開",{MC_EXIT,1,{'q'}},KS_NONE},
 		 NULL_MENU,
 		 NULL_MENU,
 		 NULL_MENU,
@@ -551,15 +551,15 @@
 		 PRYNTTXT_MENU,
 		 WHEREIS_MENU,
 		 FWDEMAIL_MENU,
-		 {"S", "Save", {MC_SAVETEXT,1,{'s'}}, KS_SAVE}};
+		 {"S", "存檔", {MC_SAVETEXT,1,{'s'}}, KS_SAVE}};
 		INST_KEY_MENU(simple_file_keymenu, simple_file_keys);
 #define SAVE_KEY 9
 
 		memset(&sargs, 0, sizeof(SCROLL_S));
 		sargs.text.text = so_text(store);
 		sargs.text.src  = src;
-		sargs.text.desc = "file";
-		sargs.bar.title = "FILE VIEW";
+		sargs.text.desc = "檔案";
+		sargs.bar.title = "檢視檔案";
 		sargs.bar.style = FileTextPercent;
 		sargs.keys.menu = &simple_file_keymenu;
 		setbitmap(sargs.keys.bitmap);
@@ -771,7 +771,7 @@
 	    if(!pine_state->VAR_INBOX_PATH || !pine_state->VAR_INBOX_PATH[0]
 	       || strucmp(pine_state->VAR_INBOX_PATH, "inbox") == 0){
 		HelpType help = NO_HELP;
-		static   ESCKEY_S ekey[] = {{ctrl(T), 2, "^T", "To Fldrs"},
+		static   ESCKEY_S ekey[] = {{ctrl(T), 2, "^T", "資料匣"},
 					  {-1, 0, NULL, NULL}};
 
 		pine_state->mangled_footer = 1;
@@ -781,7 +781,7 @@
 
         	    rv = optionally_enter(int_mail, -FOOTER_ROWS(pine_state),
 				      0, MAXPATH,
-				      "No inbox!  Folder to open as inbox : ",
+				      "沒有新進信件匣(inbox)！信件匣開啟為 inbox：",
 				      /* ekey */ NULL, help, &flags);
         	    if(rv == 3){
 			help = (help == NO_HELP) ? h_sticky_inbox : NO_HELP;
@@ -793,7 +793,7 @@
     		}
 
     		if(rv == 1){
-		    q_status_message(SM_ORDER, 0, 2 ,"Folder open cancelled");
+		    q_status_message(SM_ORDER, 0, 2 ,"取消開啟信件匣");
 		    rv = 0;		/* reset rv */
 		} 
 		else if(rv == 2){
@@ -812,7 +812,7 @@
 		    removing_leading_white_space(int_mail);
 		    if((!pine_state->VAR_INBOX_PATH 
 			|| strucmp(pine_state->VAR_INBOX_PATH, "inbox") == 0)
-		     && want_to("Preserve folder as \"inbox-path\" in PINERC", 
+		     && want_to("在 PINERC 中保留資料匣為 \"inbox-path\"", 
 				'y', 'n', NO_HELP, WT_NORM) == 'y'){
 			set_variable(V_INBOX_PATH, int_mail, 1);
 		    }
@@ -959,25 +959,25 @@
 		 *news_addition;
     int		  key_index;	  /* index into keymenu array for this cmd */
 } mkeys[] = {
-    {" %s     HELP               -  Get help using Pine",
+    {" %s     使用說明           -  Pine 的使用說明",
      NULL, MAIN_HELP_KEY},
     {"", NULL, UNUSED},
-    {" %s     COMPOSE MESSAGE    -  Compose and send%s a message",
+    {" %s     寫信               -  寫信或是發表文章",
      "/post", MAIN_COMPOSE_KEY},
     {"", NULL, UNUSED},
-    {" %s     MESSAGE INDEX      -  View messages in current folder",
+    {" %s     查看信件匣         -  查看目前信件匣內的信件",
      NULL, MAIN_INDEX_KEY},
     {"", NULL, UNUSED},
-    {" %s     FOLDER LIST        -  Select a folder%s to view",
-     " OR news group", MAIN_FOLDER_KEY},
+    {" %s     信件匣列表         -  列出信件匣%s以供選擇",
+     "或是新聞組群", MAIN_FOLDER_KEY},
     {"", NULL, UNUSED},
-    {" %s     ADDRESS BOOK       -  Update address book",
+    {" %s     地址簿             -  更新或修改地址簿的內容",
      NULL, MAIN_ADDRESS_KEY},
     {"", NULL, UNUSED},
-    {" %s     SETUP              -  Configure Pine Options",
+    {" %s     設定               -  設定 Pine 的內部參數",
      NULL, MAIN_SETUP_KEY},
     {"", NULL, UNUSED},
-    {" %s     QUIT               -  Leave the Pine program",
+    {" %s     離開               -  結束 Pine 的使用",
      NULL, MAIN_QUIT_KEY}
 };
 
@@ -1307,7 +1307,7 @@
 		pine_state->mangled_footer = 1;
 	    }
 	    else{
-		helper(main_menu_tx, "HELP FOR MAIN MENU", 0);
+		helper(main_menu_tx, "主選單的輔助說明", 0);
 		pine_state->mangled_screen = 1;
 	    }
 
@@ -1335,7 +1335,7 @@
 		just_a_navigate_cmd++;
 	    }
 	    else
-	      q_status_message(SM_ORDER, 0, 2, "Already at top of list");
+	      q_status_message(SM_ORDER, 0, 2, "已經在列表頂端了");
 
 	    break;
 
@@ -1351,14 +1351,14 @@
 		just_a_navigate_cmd++;
 	    }
 	    else
-	      q_status_message(SM_ORDER, 0, 2, "Already at bottom of list");
+	      q_status_message(SM_ORDER, 0, 2, "已經在列表底端了");
 
 	    break;
 
 
 	    /*---------- Release Notes ----------*/
 	  case MC_RELNOTES :
-	    helper(h_news, "PINE RELEASE NOTES", 0);
+	    helper(h_news, "PINE 出版摘要", 0);
 	    pine_state->mangled_screen = 1;
 	    break;
 
@@ -1615,7 +1615,7 @@
 
     /* paint the titlebar if needed */
     if(ps->mangled_header){
-	set_titlebar("MAIN MENU", ps->mail_stream, ps->context_current,
+	set_titlebar("主選單", ps->mail_stream, ps->context_current,
 		     ps->cur_folder, ps->msgmap, 1, FolderName, 0, 0);
 	ps->mangled_header = 0;
     }
@@ -1784,15 +1784,15 @@
 {
     char        prompt[80];
     char        letters[20];
-    char        *printer  = "Printer";
-    char        *passwd   = "Newpassword";
-    char        *config   = "Config";
-    char        *update   = "Update";
-    char	*sigedit  = "Signature";
-    char	*abooks   = "AddressBooks";
-    char	*clctns   = "collectionList";
-    char	*rules    = "Rules";
-    char	*color    = "Kolor";
+    char        *printer  = "印表機";
+    char        *passwd   = "設定新密碼";
+    char        *config   = "環境設定";
+    char        *update   = "更新環境";
+    char	*sigedit  = "編輯簽名檔";
+    char	*abooks   = "地址簿";
+    char	*clctns   = "總集列表";
+    char	*rules    = "規則";
+    char	*color    = "色彩";
 #ifdef	ENABLE_LDAP
     char	*dir      = "Directory";
 #endif
@@ -1881,13 +1881,13 @@
     }
 
     sprintf(prompt,
-	    "Choose a setup task from %s : ",
-	    F_ON(F_BLANK_KEYMENU,ps_global) ? letters : "the menu below");
+	    "請從%s選擇你所要設定的工作：",
+	    F_ON(F_BLANK_KEYMENU,ps_global) ? letters : "下列表單中");
 
     s = radio_buttons(prompt, ql, setup_names, deefault, 'x', help, RB_NORM);
     /* ^C */
     if(s == 'x') {
-	q_status_message(SM_ORDER,0,3,"Setup command cancelled");
+	q_status_message(SM_ORDER,0,3,"取消設定指令");
 	s = 'e';
     }
 
@@ -2021,7 +2021,7 @@
 	opts[ekey_num].ch      = 'a';
 	opts[ekey_num].rval    = 'a';
 	opts[ekey_num].name    = "A";
-	opts[ekey_num++].label = "Addrbook";
+	opts[ekey_num++].label = "地址簿";
     }
 
     if(F_OFF(F_DISABLE_ROLES_SETUP,ps)){ /* roles are allowed */
@@ -2031,7 +2031,7 @@
 	opts[ekey_num].ch      = 'r';
 	opts[ekey_num].rval    = 'r';
 	opts[ekey_num].name    = "R";
-	opts[ekey_num++].label = "Roles";
+	opts[ekey_num++].label = "角色";
     }
     else if(deefault != 'a')
       deefault = 's';
@@ -2039,7 +2039,7 @@
     opts[ekey_num].ch      = 's';
     opts[ekey_num].rval    = 's';
     opts[ekey_num].name    = "S";
-    opts[ekey_num++].label = "SetScores";
+    opts[ekey_num++].label = "設定得分";
 
 #ifndef	_WINDOWS
     if(ps->color_style != COL_NONE && pico_hascolor()){
@@ -2050,7 +2050,7 @@
 	opts[ekey_num].ch      = 'i';
 	opts[ekey_num].rval    = 'i';
 	opts[ekey_num].name    = "I";
-	opts[ekey_num++].label = "Indexcolor";
+	opts[ekey_num++].label = "索引色彩";
 #ifndef	_WINDOWS
     }
 #endif
@@ -2058,7 +2058,7 @@
     opts[ekey_num].ch      = 'f';
     opts[ekey_num].rval    = 'f';
     opts[ekey_num].name    = "F";
-    opts[ekey_num++].label = "Filters";
+    opts[ekey_num++].label = "過濾器";
 
     opts[ekey_num].ch    = -1;
 
@@ -2096,14 +2096,14 @@
     HELP_MENU,
     NULL_MENU,
     {"E",NULL,{MC_EXIT,1,{'e',ctrl('M'),ctrl('J')}},KS_NONE},
-    {"Ret","[Be Counted!]",{MC_VIEW_HANDLE,2,{ctrl('M'),ctrl('J')}},KS_NONE},
+    {"Ret","[列入使用者總計中]",{MC_VIEW_HANDLE,2,{ctrl('M'),ctrl('J')}},KS_NONE},
     NULL_MENU,
     NULL_MENU,
     PREVPAGE_MENU,
     NEXTPAGE_MENU,
     PRYNTMSG_MENU,
     NULL_MENU,
-    {"R","RelNotes",{MC_RELNOTES,1,{'r'}},KS_NONE},
+    {"R","出版說明",{MC_RELNOTES,1,{'r'}},KS_NONE},
     NULL_MENU};
 INST_KEY_MENU(nuov_keymenu, nuov_keys);
 #define	NUOV_EXIT	2
@@ -2202,13 +2202,13 @@
 		memset(&sargs, 0, sizeof(SCROLL_S));
 		sargs.text.text	   = so_text(store);
 		sargs.text.src	   = CharStar;
-		sargs.text.desc	   = "greeting text";
+		sargs.text.desc	   = "問候文字";
 		sargs.text.handles = handles;
-		sargs.bar.title	   = "GREETING TEXT";
+		sargs.bar.title	   = "問候文字";
 		sargs.bar.style	   = TextPercent;
 		sargs.proc.tool	   = nuov_processor;
 		sargs.help.text	   = main_menu_tx;
-		sargs.help.title   = "MAIN PINE HELP";
+		sargs.help.title   = "PINE 的主要輔助說明";
 		sargs.resize_exit  = 1;
 		sargs.keys.menu	   = &km;
 		km		   = nuov_keymenu;
@@ -2218,11 +2218,11 @@
 		setbitmap(sargs.keys.bitmap);
 
 		if(ps->phone_home){
-		    km.keys[NUOV_EXIT].label = "Exit this greeting";
+		    km.keys[NUOV_EXIT].label = "離開";
 		    km.keys[NUOV_EXIT].bind.nch = 1;
 		}
 		else{
-		    km.keys[NUOV_EXIT].label	= "[Exit this greeting]";
+		    km.keys[NUOV_EXIT].label	= "[離開]";
 		    km.keys[NUOV_EXIT].bind.nch = 3;
 		    clrbitn(NUOV_VIEW, sargs.keys.bitmap);
 		}
@@ -2303,7 +2303,7 @@
 	break;
 
       case MC_RELNOTES :
-	helper(h_news, "PINE RELEASE NOTES", 0);
+	helper(h_news, "PINE 出版摘要", 0);
 	ps_global->mangled_screen = 1;
 	break;
 
@@ -2422,7 +2422,7 @@
     dprint(1, (debugfile, "\n\n    ---- QUIT SCREEN ----\n"));    
 
     if(!pine_state->nr_mode && F_OFF(F_QUIT_WO_CONFIRM,pine_state)
-       && want_to("Really quit pine", 'y', 0, NO_HELP, WT_NORM) != 'y') {
+       && want_to("真的要離開 Pine 嗎？", 'y', 0, NO_HELP, WT_NORM) != 'y') {
         pine_state->next_screen = pine_state->prev_screen;
         return;
     }
