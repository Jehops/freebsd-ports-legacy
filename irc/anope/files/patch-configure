--- configure~	Mon Apr 19 04:36:02 2004
+++ configure	Fri Apr 23 18:36:12 2004
@@ -327,388 +327,6 @@
 
 ###########################################################################
 
-# Ask the user anything we need to know ahead of time.
-
-export ok INPUT
-
-####
-
-ok=0
-echo "Note: press Return for the default, or enter a new value."
-echo "In what directory do you want the binaries to be installed?"
-while [ $ok -eq 0 ] ; do
-	echo2 "[$BINDEST] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$BINDEST
-	fi
-	if [ ! -d "$INPUT" ] ; then
-		if exists "$INPUT" ; then
-			echo "$INPUT exists, but is not a directory!"
-		else
-			echo "$INPUT does not exist.  Create it?"
-			echo2 "[y] "
-			read YN
-			if [ "$YN" != "n" ] ; then
-				if mkdir -p $INPUT ; then
-					ok=1
-				fi
-			fi
-		fi
-	elif exists "$INPUT/services.h" ; then
-		echo "You cannot use the Services source directory as a target directory."
-	else
-		ok=1
-	fi
-done
-BINDEST=$INPUT
-DATDEST=$INPUT
-echo ""
-
-####
-
-ok=0
-echo "Where do you want the data files to be installed?"
-while [ $ok -eq 0 ] ; do
-	echo2 "[$DATDEST] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$DATDEST
-	fi
-	if [ ! -d "$INPUT" ] ; then
-		if exists "$INPUT" ; then
-			echo "$INPUT exists, but is not a directory!"
-		else
-			echo "$INPUT does not exist.  Create it?"
-			echo2 "[y] "
-			read YN
-			if [ "$YN" != "n" ] ; then
-				if mkdir -p $INPUT ; then
-					ok=1
-				fi
-			fi
-		fi
-	elif exists "$INPUT/services.h" ; then
-		echo "You cannot use the Services source directory as a target directory."
-	else
-		ok=1
-	fi
-done
-DATDEST=$INPUT
-echo ""
-
-####
-
-OLD_RUNGROUP="$RUNGROUP"
-if [ "$RUNGROUP" ] ; then
-  echo "Which group should all Services data files be owned by?  (If Services"
-  echo "should not force files to be owned by a particular group, type "\"none\"
-  echo "(without the quotes) and press Return.)"
-else
-  echo "Which group should all Services data files be owned by?  (If Services"
-  echo "should not force files to be owned by a particular group, just press"
-  echo "Return.)"
-fi
-echo2 "[$RUNGROUP] "
-if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-if [ "$INPUT" ] ; then
-	if [ "$INPUT" = "none" ] ; then
-		RUNGROUP=""
-	else
-		RUNGROUP="$INPUT"
-	fi
-fi
-echo ""
-
-####
-
-if [ ! "$UMASK" -o "$RUNGROUP" != "$OLD_RUNGROUP" ] ; then
-	if [ "$RUNGROUP" ] ; then
-		UMASK=007
-	else
-		UMASK=077
-	fi
-fi
-
-ok=0
-echo "What should the default umask for data files be (in octal)?"
-echo "(077 = only accessible by owner; 007 = accessible by owner and group)"
-while [ $ok -eq 0 ] ; do
-	echo2 "[$UMASK] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$UMASK
-	fi
-	if [ `echo "$INPUT" | grep -c '[^0-7]'` -gt 0 ] ; then
-		echo "$UMASK is not a valid octal number!"
-	else
-		if [ "`echo $INPUT | cut -c1`" != "0" ] ; then
-			INPUT=0$INPUT
-		fi
-		ok=1
-	fi
-done
-UMASK=$INPUT
-echo ""
-
-####
-
-ok=0
-echo "Select the closest to the type of server on your IRC network:"
-echo "    1) DreamForge 4.6.7   [dated IRCd, upgrade to a current one]"
-echo "    2) Bahamut 1.4.27     [or later]"
-echo "    3) UnrealIRCd 3.1.1   [or later]"
-echo "    4) UltimateIRCd 2.8.2 [or later]"
-echo "    5) UltimateIRCd 3.0.0 [alpha26 or later]"
-echo "    6) Hybrid IRCd 7.0    [experimental]"
-echo "    7) ViagraIRCd 1.3.x   [or later]"
-echo "    8) PTlink 6.15.0      [experimental]"
-
-while [ $ok -eq 0 ] ; do
-	echo2 "[$IRCTYPE] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$IRCTYPE
-	fi
-	case $INPUT in
-		no\ default)
-			echo "You must specify your IRC server type in order for Services to function"
-			echo "correctly."
-			;;
-		1)
-			IRCTYPE_DEF="IRC_DREAMFORGE"
-			IRCTYPE_DEF2=
-			ok=1
-			;;
-		2)
-			IRCTYPE_DEF="IRC_BAHAMUT"
-			IRCTYPE_DEF2=
-			ok=1
-			;;
-		3)  IRCTYPE_DEF="IRC_DREAMFORGE"
-			IRCTYPE_DEF2="IRC_UNREAL"
-			ok=1
-			;;
-		4)  IRCTYPE_DEF="IRC_DREAMFORGE"
-	        IRCTYPE_DEF2="IRC_ULTIMATE"
-	        ok=1
-	        ;;
-                5)      IRCTYPE_DEF="IRC_BAHAMUT"
-                        IRCTYPE_DEF2="IRC_ULTIMATE3"
-                        ok=1
-                        ;;
-		6) IRCTYPE_DEF="IRC_HYBRID"
-		   IRCTYPE_DEF2=
-		   ok=1
-		   ;;
-                7) IRCTYPE_DEF="IRC_BAHAMUT"
-                   IRCTYPE_DEF2="IRC_VIAGRA"
-                   ok=1
-                   ;;
-                8) IRCTYPE_DEF="IRC_PTLINK"
-                   IRCTYPE_DEF2=
-                   ok=1
-                   ;;
-		*)
-			echo "Please enter a valid option number."
-			;;
-	esac
-done
-IRCTYPE=$INPUT
-echo ""
-
-####
-
-if [ "$ENCRYPTION" = "ENCRYPT_MD5" ] ; then
-	DEF=yes
-else
-	DEF=no
-fi
-
-ok=0
-echo "Do you want to use the MD5 message-digest algorithm to encrypt passwords?"
-echo "(Selecting "\"yes\"" protects your passwords from being stolen if someone"
-echo "gains access to the Services databases, but makes it impossible to recover"
-echo "forgotten passwords. There is no way to reverse this operation, so make"
-echo "sure you really want to enable it.)"
-while [ $ok -eq 0 ] ; do
-	echo2 "[$DEF] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$DEF
-	fi
-	case $INPUT in
-		n*|N*)
-			ENCRYPTION=
-			ok=1
-			;;
-		y*|Y*)
-			ENCRYPTION=ENCRYPT_MD5
-			ok=1
-			;;
-		*)
-			echo "Please enter `yes' or `no'."
-			;;
-	esac
-done
-echo ""
-
-
-
-####
-
-if [ "$THREAD" = "USE_THREADS" ] ; then
-	DEF=yes
-else
-	DEF=no
-fi
-
-ok=0
-echo "Do you want to compile Anope with threading support?"
-echo "If you want to use the proxy detector, you MUST have this. If you get"
-echo "compilation errors, you should disable this feature and try again."
-while [ $ok -eq 0 ] ; do
-	echo2 "[$DEF] "
-	if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-	if [ ! "$INPUT" ] ; then
-		INPUT=$DEF
-	fi
-	case $INPUT in
-		n*|N*)
-			THREAD=
-			ok=1
-			;;
-		y*|Y*)
-			THREAD="USE_THREADS"
-			ok=1
-			;;
-		*)
-			echo "Please enter yes or no."
-			;;
-	esac
-done
-echo ""
-
-if [ "$MYSQL" = "USE_MYSQL" ] ; then
-        DEF=yes
-else
-        DEF=no
-fi
-
-ok=0
-echo "Do you want to compile Anope with MySQL support?"
-echo "At this time Anope is able to dump all databases into MySQL. That means"
-echo "you get a read-only copy of the data. If you plan to run any module that"
-echo "uses MySQL, you should enable this option as well."
-while [ $ok -eq 0 ] ; do
-        echo2 "[$DEF] "
-        if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-        if [ ! "$INPUT" ] ; then
-                INPUT=$DEF
-        fi
-        case $INPUT in
-                n*|N*)  
-			RDB=
-                        MYSQL=
-                        ok=1
-                        ;;
-                y*|Y*)
-			RDB="USE_RDB"
-                        MYSQL="USE_MYSQL"
-                        ok=1
-                        ;;
-                *)
-                        echo "Please enter yes or no."
-                        ;;
-        esac
-done
-echo ""
-
-####
-
-if [ "$USE_MODULES" = "USE_MODULES" ] ; then
-        DEF=yes
-else
-        DEF=no
-fi
-
-ok=0
-echo "Do you want to compile Anope with Module support?"
-echo "This will allow you to load and unload external modules of code without"
-echo "restarting services. You can find several Anope modules on our website."
-echo "This requires libdl, if you have problems compiling disable this option."
-echo "(this option is ignored on OpenBSD for the time being)"
-while [ $ok -eq 0 ] ; do
-        echo2 "[$DEF] "
-        if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-        if [ ! "$INPUT" ] ; then
-                INPUT=$DEF
-        fi
-        case $INPUT in
-                n*|N*)
-			USE_MODULES=
-                        MODULE_PATH=
-                        ok=1
-                        ;;
-                y*|Y*)
-                        USE_MODULES="USE_MODULES"
-                        ok=1
-                        ;;
-                *)
-                        echo "Please enter yes or no."
-                        ;;
-        esac
-done
-echo ""
-
-###
-if [ "$USE_MODULES" = "USE_MODULES" ] ; then
-	if [ "$MODULE_PATH" ] ; then
-	        DEF=$MODULE_PATH
-	else
-	        DEF=$BINDEST/modules/
-	fi
-	ok=0
-	echo "Where do you want the modules installed? (The trailing / is important)"
-	while [ $ok -eq 0 ] ; do
-		echo2 "[$DEF] "
-		if read INPUT ; then : ; else echo "" ; exit 1 ; fi
-		if [ ! "$INPUT" ] ; then
-			INPUT=$DEF
-		fi
-		if [ ! -d "$INPUT" ] ; then
-			if exists "$INPUT" ; then
-				echo "$INPUT exists, but is not a directory!"
-			else
-				echo "$INPUT does not exist.  Create it?"
-			echo2 "[y] "
-				read YN
-				if [ "$YN" != "n" ] ; then
-					if mkdir -p $INPUT ; then
-						ok=1
-					fi
-				fi
-			fi
-		elif exists "$INPUT/services.h" ; then
-			echo "You cannot use the Services source directory as a target directory."
-		else
-			ok=1
-		fi
-		if [ ! -d "$INPUT/runtime/" ] ; then
-			if mkdir -p $INPUT/runtime/ ; then
-				ok=1
-			fi
-		fi
-	done
-	MODULE_PATH=$INPUT
-	echo ""
-fi
-echo ""
-
-###
-
-echo "End of interactive configuration."
-echo ""
 
 ###########################################################################
 
@@ -830,6 +448,7 @@
 	fi
 	log cache supplied \`"$CC_LIBS'"
 else
+	echo >tmp/test.c "int main(){return 1;}"
 	CC_LIBS=
 	if run $CC $CC_FLAGS tmp/test.c -lnsl -o tmp/test ; then
 		CC_LIBS="$CC_LIBS -lnsl"
