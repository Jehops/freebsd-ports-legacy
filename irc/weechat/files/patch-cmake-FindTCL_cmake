--- cmake/FindTCL.cmake.orig	2011-04-02 18:26:10.225070885 +0100
+++ cmake/FindTCL.cmake	2011-04-02 18:29:21.009167958 +0100
@@ -55,98 +55,18 @@
   SET(TCL_FIND_QUIETLY TRUE)
 ENDIF(TCL_FOUND)
 
-INCLUDE(CMakeFindFrameworks)
-INCLUDE(FindTclsh)
-
-GET_FILENAME_COMPONENT(TCL_TCLSH_PATH "${TCL_TCLSH}" PATH)
-GET_FILENAME_COMPONENT(TCL_TCLSH_PATH_PARENT "${TCL_TCLSH_PATH}" PATH)
-STRING(REGEX REPLACE
-  "^.*tclsh([0-9]\\.*[0-9]).*$" "\\1" TCL_TCLSH_VERSION "${TCL_TCLSH}")
-
-GET_FILENAME_COMPONENT(TCL_INCLUDE_PATH_PARENT "${TCL_INCLUDE_PATH}" PATH)
-
-GET_FILENAME_COMPONENT(TCL_LIBRARY_PATH "${TCL_LIBRARY}" PATH)
-GET_FILENAME_COMPONENT(TCL_LIBRARY_PATH_PARENT "${TCL_LIBRARY_PATH}" PATH)
-STRING(REGEX REPLACE
-  "^.*tcl([0-9]\\.*[0-9]).*$" "\\1" TCL_VERSION "${TCL_LIBRARY}")
-
-SET(TCL_POSSIBLE_LIB_PATHS
-  "${TCL_INCLUDE_PATH_PARENT}/lib"
-  "${TCL_INCLUDE_PATH_PARENT}/lib64"
-  "${TCL_LIBRARY_PATH}"
-  "${TCL_TCLSH_PATH_PARENT}/lib"
-  "${TCL_TCLSH_PATH_PARENT}/lib64"
-  /usr/lib
-  /usr/lib64
-  /usr/local/lib
-  /usr/local/lib64
-  )
-
-IF(WIN32)
-  GET_FILENAME_COMPONENT(
-    ActiveTcl_CurrentVersion
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\ActiveState\\ActiveTcl;CurrentVersion]"
-    NAME)
-  SET(TCLTK_POSSIBLE_LIB_PATHS ${TCLTK_POSSIBLE_LIB_PATHS}
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\ActiveState\\ActiveTcl\\${ActiveTcl_CurrentVersion}]/lib"
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Scriptics\\Tcl\\8.6;Root]/lib"
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Scriptics\\Tcl\\8.5;Root]/lib"
-    "$ENV{ProgramFiles}/Tcl/Lib"
-    "C:/Program Files/Tcl/lib"
-    "C:/Tcl/lib"
-    )
-ENDIF(WIN32)
+SET(TCL_VERSION ${BSD_TCL_VER})
+STRING(REPLACE "." "" TCL_INT_VERSION ${TCL_VERSION})
 
 FIND_LIBRARY(TCL_LIBRARY
   NAMES
-  tcl86 tcl8.6
-  tcl85 tcl8.5
-  tcl
-  tcl${TCL_VERSION} tcl${TCL_TCLSH_VERSION}
-  PATHS ${TCL_POSSIBLE_LIB_PATHS}
+  tcl${TCL_INT_VERSION}
+  PATHS ${BSD_TCL_LIBDIR}
   )
 
-CMAKE_FIND_FRAMEWORKS(Tcl)
-
-SET(TCL_FRAMEWORK_INCLUDES)
-IF(Tcl_FRAMEWORKS)
-  IF(NOT TCL_INCLUDE_PATH)
-    FOREACH(dir ${Tcl_FRAMEWORKS})
-      SET(TCL_FRAMEWORK_INCLUDES ${TCL_FRAMEWORK_INCLUDES} ${dir}/Headers)
-    ENDFOREACH(dir)
-  ENDIF(NOT TCL_INCLUDE_PATH)
-ENDIF(Tcl_FRAMEWORKS)
-
-SET(TCL_POSSIBLE_INCLUDE_PATHS
-  "${TCL_LIBRARY_PATH_PARENT}/include"
-  "${TCL_INCLUDE_PATH}"
-  ${TCL_FRAMEWORK_INCLUDES}
-  "${TCL_TCLSH_PATH_PARENT}/include"
-  /usr/include/tcl8.6
-  /usr/include/tcl8.5
-  /usr/include
-  /usr/local/include
-  /usr/include/tcl${TCL_VERSION}
-  /usr/local/include/tcl${TCL_VERSION}
-  /usr/local/include/tcl8.6
-  /usr/local/include/tcl8.5
-  )
-
-
-IF(WIN32)
-  SET(TCLTK_POSSIBLE_INCLUDE_PATHS ${TCLTK_POSSIBLE_INCLUDE_PATHS}
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\ActiveState\\ActiveTcl\\${ActiveTcl_CurrentVersion}]/include"
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Scriptics\\Tcl\\8.6;Root]/include"
-    "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Scriptics\\Tcl\\8.5;Root]/include"
-    "$ENV{ProgramFiles}/Tcl/include"
-    "C:/Program Files/Tcl/include"
-    "C:/Tcl/include"
-    )
-ENDIF(WIN32)
-
 FIND_PATH(TCL_INCLUDE_PATH
   NAMES tcl.h
-  PATHS ${TCL_POSSIBLE_INCLUDE_PATHS}
+  PATHS ${BSD_TCL_INCDIR}
   )
 
 IF(TCL_LIBRARY AND TCL_INCLUDE_PATH)
