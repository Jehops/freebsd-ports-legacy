diff -ruN ./libPMGR/src/PMGRrUpgrade.c ../../branch/0.2.6_2/libPMGR/src/PMGRrUpgrade.c
--- ./libPMGR/src/PMGRrUpgrade.c	Mon Feb  7 11:46:39 2005
+++ ../../branch/0.2.6_2/libPMGR/src/PMGRrUpgrade.c	Tue Feb  8 08:30:07 2005
@@ -247,23 +247,56 @@
 									MGdbGetRecno( property->strikesDb ) - 1 );
 					MGdbAdd( property->strikesDb, oldPortDir, "2", NULL );	
 
-					/**********************************************************************/
-					/* look for mismatch between looping port's +CONTENTS file dependency */
-					/* directories and and the dependency's actual point of origin        */
-					/**********************************************************************/
-					MGdbGoTop( property->dependencyPortsDb );
+					/*
+					 * look for mismatch between looping port's +CONTENTS file dependency
+					 * directories and and the dependency's actual point of origin
+					 *
+					 * if  dependency.db (looping port name) (dependency name) dependencyDir
+					 * != installed.db ( dependency.name) dependency.dir 
+					 *
+					 */
 
+					/*
+					 * get looping port's +CONTENTS file dependency name
+					 */
+					MGdbGoTop( property->dependencyPortsDb );
 					dependencyPortName	= MGdbSeek( property->dependencyPortsDb,
 									property->fieldChildPortName,
 									oldPortName, property->fieldDependencyPortName );
+					if( !dependencyPortName )
+					{
+						fprintf( stderr,
+							"%s not found in dependencyPortsDb property->fieldChildPortName\n",
+							oldPortName );
+						assert(0);
+					}
+printf( "%s %s DEBUG: get looping port's +CONTENTS file dependency name = %s\n", id, VERSION, dependencyPortName );									
 
+					/*
+					 * get looping port's +CONTENTS file dependency dir
+					 */
 					dependencyPortDir	= MGdbGet( property->dependencyPortsDb,
 									MGdbGetRecno( property->dependencyPortsDb ) -1, 
 											property->fieldDependencyPortDir );
 
+printf( "%s %s DEBUG: get looping port's +CONTENTS file dependency dir = %s\n", id, VERSION, dependencyPortDir );									
+
+					/*
+					 * get dependency's actual point of origin
+					 */
 					MGdbGoTop( property->installedPortsDb );
 					origDir	= MGdbSeek( property->installedPortsDb, property->fieldInstalledPortName,
 								dependencyPortName, property->fieldInstalledPortDir );
+					if( !origDir )
+					{
+						fprintf( stderr,
+							"%s not found in installedPortsDb property->fieldInstalledPortName\n",
+							dependencyPortName );
+						assert(0);
+					}
+
+printf( "%s %s DEBUG: get looping port's +CONTENTS file dependency actual point of ORIGIN dir = %s\n",
+	id, VERSION, origDir );
 
 					fprintf( stdout, "analysing problem:\n" );
 					while( dependencyPortName )
