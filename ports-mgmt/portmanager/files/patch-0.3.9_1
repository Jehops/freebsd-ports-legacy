diff -ruN ../0.3.9/libMGPM/src/MGPMrCommandLine.c ./libMGPM/src/MGPMrCommandLine.c
--- ../0.3.9/libMGPM/src/MGPMrCommandLine.c	Wed Nov 23 19:35:36 2005
+++ ./libMGPM/src/MGPMrCommandLine.c	Fri Nov 25 10:38:28 2005
@@ -57,7 +57,7 @@
 /*
 	fprintf( stdout, "MGPMrTimer received signal -=>%d\n", signalId );
 */
-	fclose( globalProperty->stdin );
+	fclose( globalProperty->STDIN );
 	globalProperty->timeOut	= 1;
 }
 
diff -ruN ../0.3.9/libMGPM/src/MGPMrGetPortName.c ./libMGPM/src/MGPMrGetPortName.c
--- ../0.3.9/libMGPM/src/MGPMrGetPortName.c	Thu Nov 24 09:28:49 2005
+++ ./libMGPM/src/MGPMrGetPortName.c	Fri Nov 25 11:22:07 2005
@@ -84,11 +84,11 @@
 				/*
 				 * set timeout default to Y
 				 */
-				property->stdin = fopen( "/dev/stdin", "r" );
-				property->timeOut = 0;
-				signal( SIGALRM, MGPMrTimer );
 				alarm( property->timeout );
-				answer	= getc( property->stdin );
+				signal( SIGALRM, MGPMrTimer );
+				property->STDIN = fopen( "/dev/stdin", "r" );
+				property->timeOut = 0;
+				answer	= getc( property->STDIN );
 				
 				switch(answer)
 				{
@@ -98,36 +98,36 @@
 					}
 					case KEY_A:
 					{
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						property->autoMoved = 1;
 						break;
 					}
 					case KEY_a:
 					{
 						property->autoMoved = 1;
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						break;
 					}
 					case KEY_Y:
 					{
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						break;
 					}
 					case KEY_y:
 					{
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						break;
 					}
 					case KEY_N:
 					{
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						fprintf( stdout, "you will have to deal with this manually then, portmanager shutting down\n" );
 						while( fflush( stdout ) );
 						exit(0);
 					}
 					case KEY_n:
 					{
-						answer	= getc( property->stdin );
+						answer	= getc( property->STDIN );
 						fprintf( stdout, "you will have to deal with this manually then, portmanager shutting down\n" );
 						while( fflush( stdout ) );
 						exit(0);
@@ -143,7 +143,7 @@
 						{
 							fprintf( stdout, "Invalid option. Please enter either Y to upgrade or N\n");
 							while( fflush( stdout ) );
-							answer	= getc( property->stdin );
+							answer	= getc( property->STDIN );
 						}
 					}
 				}
@@ -156,7 +156,7 @@
 			if( property->timeOut  == 1 )
 			{
 				/*
-				 * reset alarm, reopen stdin after timeout
+				 * reset alarm, reopen STDIN after timeout
 				 */
 				alarm(0);
 				property->timeOut	= 0;
@@ -165,7 +165,7 @@
 			}
 			else
 			{
-				fclose( property->stdin );
+				fclose( property->STDIN );
 				MGPMlogAdd( property, "installed ", portName,
 					" removed from system:  no longer in ports tree:  see /usr/ports/MOVED", " ", " " );
 			}
diff -ruN ../0.3.9/libMGPM/src/MGPMrUpdate.c ./libMGPM/src/MGPMrUpdate.c
--- ../0.3.9/libMGPM/src/MGPMrUpdate.c	Thu Nov 24 10:01:19 2005
+++ ./libMGPM/src/MGPMrUpdate.c	Fri Nov 25 11:21:55 2005
@@ -617,11 +617,11 @@
 							/*
 							 * set timeout default to Y
 							 */
-							property->stdin = fopen( "/dev/stdin", "r" );
-							property->timeOut = 0;
-							signal( SIGALRM, MGPMrTimer );
 							alarm( property->timeout );
-							answer	= getc( property->stdin );
+							signal( SIGALRM, MGPMrTimer );
+							property->STDIN = fopen( "/dev/stdin", "r" );
+							property->timeOut = 0;
+							answer	= getc( property->STDIN );
 
 							switch(answer)
 							{
@@ -631,24 +631,24 @@
 								}
 								case KEY_A:
 								{
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									property->autoConflicts	= 1;
 									break;
 								}
 								case KEY_a:
 								{
 									property->autoConflicts	= 1;
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									break;
 								}
 								case KEY_Y:
 								{
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									break;
 								}
 								case KEY_y:
 								{
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									break;
 								}
 								case KEY_N:
@@ -656,7 +656,7 @@
 									fprintf( stdout, "\nAdding  %s %s to ignore list\n", oldPortName, oldPortDir );
 									while( fflush( stdout ) );
 									MGdbAdd( property->ignoreDb, oldPortDir, "conflicts with another port", NULL );
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									rCleanUp( property, &localProperty );
 									return(0);
 								}
@@ -665,7 +665,7 @@
 									fprintf( stdout, "\nAdding  %s %s to ignore list\n", oldPortName, oldPortDir );
 									while( fflush( stdout ) );
 									MGdbAdd( property->ignoreDb, oldPortDir, "conflicts with another port", NULL );
-									answer	= getc( property->stdin );
+									answer	= getc( property->STDIN );
 									rCleanUp( property, &localProperty );
 									return(0);
 								}
@@ -680,7 +680,7 @@
 									{
 										fprintf( stdout, "Invalid option. Please enter either Y to upgrade or N\n");
 										while( fflush( stdout ) );
-										answer	= getc( property->stdin );
+										answer	= getc( property->STDIN );
 									}
 								}
 							}
@@ -691,7 +691,7 @@
 						if( property->timeOut  == 1 )
 						{
 							/*
-							 * reset alarm, reopen stdin after timeout
+							 * reset alarm, reopen STDIN after timeout
 							 */
 							alarm(0);
 							property->timeOut	= 0;
@@ -701,7 +701,7 @@
 						}
 						else
 						{
-							fclose( property->stdin );
+							fclose( property->STDIN );
 							MGPMlogAdd( property, "conflicting installed ", localProperty.installedPortName,
 								" removed from system: conflicted with ", oldPortName, " " );
 						}
@@ -1249,12 +1249,12 @@
 	 * 5 second time delay
 	 */
 /*
-	property->stdin = fopen( "/dev/stdin", "r" );
+	property->STDIN = fopen( "/dev/STDIN", "r" );
 	signal( SIGALRM, MGPMrTimer );
 	alarm( 5 );
-	answer	= getc( property->stdin );
+	answer	= getc( property->STDIN );
 	alarm(0);
-	fclose( property->stdin );
+	fclose( property->STDIN );
 */
 	
 	strcpy( localProperty.command, "cp /tmp/*.db " );
diff -ruN ../0.3.9/libMGPM/src/libMGPM.h ./libMGPM/src/libMGPM.h
--- ../0.3.9/libMGPM/src/libMGPM.h	Fri Nov 25 05:50:16 2005
+++ ./libMGPM/src/libMGPM.h	Fri Nov 25 10:38:39 2005
@@ -139,7 +139,7 @@
 	int	timeout;			/* default timeout in seconds */
 	int	verbose;
 	
-	FILE*	stdin;
+	FILE*	STDIN;
 	/*
 	 * misc
 	 */
