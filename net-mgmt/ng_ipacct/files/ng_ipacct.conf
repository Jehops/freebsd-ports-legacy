# $FreeBSD$
#
# Please read and meditate on netgraph(4), ipacctctl(8) and ngctl(8).

# Enable ng_ipacct (i.e. enable run startup script "ng_ipacct.sh")
#ng_ipacct_enable="YES"

# Enable kernel modules loading.
# On "ng_ipacct.sh start" all kernel modules specified
# in ${ng_ipacct_modules_list} will be loaded.
# Note: on "ng_ipacct.sh stop" only "ng_ipacct" will be unloaded.
ng_ipacct_modules_load="YES"

# Netgraph can load required ng_* modules automatically on the hook creation
# - except for "ng_ether". Generally, preloading modules is recommended.
# Do not add to this list modules which are statically compiled into kernel.
#ng_ipacct_modules_list="netgraph ng_ether ng_cisco ng_socket ng_tee ng_ipacct"
ng_ipacct_modules_list="netgraph ng_ether ng_ipacct"

# List of monitored interfaces. For each interface additional vars must be
# specified in corresponding variables 'ng_ipacct_IFACE_*'.
# See examples below.
#ng_ipacct_interfaces="xl0 cx0"

# Default start/stop scripts.
#
# Single quotes is required to preserve newlines.
# '%%iface%%' will be automatically expanded with relevant interface.
# This feature should be applied to reuse indentical rules
# for similar interfaces.
ng_ipacct_default_ether_start='
	mkpeer %%iface%%: tee lower right
	name %%iface%%:lower %%iface%%_tee
	connect %%iface%%: lower upper left

	mkpeer %%iface%%_tee: ipacct right2left %%iface%%_in
	name %%iface%%_tee:right2left %%iface%%_ip_acct
	connect %%iface%%_tee: %%iface%%_ip_acct: left2right %%iface%%_out
'

ng_ipacct_default_ether_stop='
	shutdown %%iface%%_ip_acct:
	shutdown %%iface%%_tee:
	shutdown %%iface%%:
'

# EXAMPLE 1. Ethernet interface

#        +-------------------------------+
#        |                               |
#      (upper)              (left2right)-----------(xl0_in)
#        |                      |        |             |
#       xl0         +--(left)-xl0_tee-(right)     xl0_ip_acct
#        |          |           |                      |
#      (lower)      |       (right2left)-----------(xl0_out)
#        |          |
#        +----------+
#
# xl0           - ng_ether
# xl0_tee       - ng_tee
# xl0_ip_acct   - ng_ipacct

# Configuration for 'xl0_ip_acct' node:

ng_ipacct_xl0_dlt="EN10MB"	# required line; see ipacctctl(8)
ng_ipacct_xl0_threshold="15000"	# '5000' by default
ng_ipacct_xl0_verbose="yes"	# 'yes' by default
ng_ipacct_xl0_saveuid="yes"	# 'no' by default
ng_ipacct_xl0_savetime="no"	# 'no' by default
ng_ipacct_xl0_start=${ng_ipacct_default_ether_start}
ng_ipacct_xl0_stop=${ng_ipacct_default_ether_stop}

# EXAMPLE 2. Cronyx Sigma WAN adapter with HDLC encapsulation 

# cx0_hdlc-(downstream)----(rawdata)-cx0
#    |
# (inet)  (left2right)--------------------(cx0_in)
#    |      |                                |
# (left)-cx0_tee-(right)---(inet)-ng0     cx0_ip_acct
#           |                                |
#         (right2left)--------------------(cx0_out)
#
# cx0           - ng_cx
# cx0_hdlc      - ng_cisco
# cx0_tee       - ng_tee
# cx0_ip_acct   - ng_ipacct

# Configuration for 'cx0_ip_acct' node:

ng_ipacct_cx0_dlt="RAW"
ng_ipacct_cx0_start='
	mkpeer %%iface%%: cisco rawdata downstream
	name %%iface%%:rawdata %%iface%%_hdlc
	mkpeer %%iface%%_hdlc: tee inet left
	name %%iface%%_hdlc:inet %%iface%%_tee
	mkpeer %%iface%%_tee: iface right inet

	mkpeer %%iface%%_tee: ipacct right2left %%iface%%_in
	name %%iface%%_tee:right2left %%iface%%_ip_acct
	connect %%iface%%_tee: %%iface%%_ip_acct: left2right %%iface%%_out
'
ng_ipacct_cx0_stop='
	shutdown %%iface%%_ip_acct:
	shutdown %%iface%%_tee:
	shutdown %%iface%%_hdlc:
'
