#!/bin/sh
#
# $FreeBSD: /tmp/pcvs/ports/sysutils/rsyslog4-devel/files/Attic/rsyslogd.in,v 1.2 2010-03-27 00:15:04 dougb Exp $
#

# PROVIDE: rsyslogd
# REQUIRE: mountcritremote cleanvar newsyslog ldconfig
# BEFORE:  SERVERS

. /etc/rc.subr

name=rsyslogd
rcvar=`set_rcvar`
command="%%PREFIX%%/sbin/${name}"
load_rc_config $name
: ${rsyslogd_enable:="NO"}
: ${rsyslogd_pidfile:="/var/run/rsyslogd.pid"}
: ${rsyslogd_config:="%%PREFIX%%/etc/rsyslog.conf"}
pidfile="${rsyslogd_pidfile}"
command_args="-i ${pidfile} -f ${rsyslogd_config}"
required_files="${rsyslogd_config}"
start_precmd="rsyslogd_precmd"
extra_commands="reload"

sockfile="/var/run/rsyslogd.sockets"
evalargs="rc_flags=\"\`set_socketlist\` \$rc_flags\""
altlog_proglist="named"

rsyslogd_precmd()
{
	local _l _ldir

	#	Transitional symlink for old binaries
	#
	if [ ! -L /dev/log ]; then
		ln -sf /var/run/log /dev/log
	fi
	rm -f /var/run/log

	#	Create default list of syslog sockets to watch
	#
	( umask 022 ; > $sockfile )

	#	If running named(8) or ntpd(8) chrooted, added appropriate
	#	syslog socket to list of sockets to watch.
	#
	for _l in $altlog_proglist; do
		eval _ldir=\$${_l}_chrootdir
		if checkyesno `set_rcvar $_l` && [ -n "$_ldir" ]; then
			echo "${_ldir}/var/run/log" >> $sockfile
		fi
	done

	#	If other sockets have been provided, change run_rc_command()'s
	#	internal copy of $rsyslogd_flags to force use of specific
	#	rsyslogd sockets.
	#
	if [ -s $sockfile ]; then
		echo "/var/run/log" >> $sockfile
		eval $evalargs
	fi

	return 0
}

set_socketlist()
{
	local _s _socketargs

	_socketargs=
	for _s in `cat $sockfile | tr '\n' ' '` ; do
		_socketargs="-a $_s $_socketargs"
	done
	echo $_socketargs
}

run_rc_command "$1"
