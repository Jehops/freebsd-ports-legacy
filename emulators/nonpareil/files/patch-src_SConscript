--- src/SConscript.orig	2008-08-24 00:37:18 UTC
+++ src/SConscript
@@ -41,16 +41,11 @@ sdl_pkg_config_cmd = 'sdl-config --cflags --libs'
 
 build_env.Append (CPPPATH = ['.'])
 build_env.Append (CPPPATH = ['#/build/common'])  # generated includes
-build_env.Append (CCFLAGS = ['-Wall'])
+build_env.Append (CCFLAGS = "%%CFLAGS%%")
 build_env.Append (YACCFLAGS = [ '-d', '-v' ])
+build_env.Replace (CC = '%%CC%%')
 
-if build_env ['debug'] :
-    build_env.Append (CCFLAGS = ['-g'])
-else:
-    build_env.Append (CCFLAGS = ['-O2'])
-
 if cross and ming and build_target_only:
-    build_env.Replace (CC = '/usr/local/mingw/bin/i586-mingw32msvc-gcc')
     build_env.Append (CCFLAGS = ['-mms-bitfields'])
     build_env.Append (CPPPATH = ['/usr/local/gtkwin/include'])  # libpng
     build_env.Append (CPPPATH = ['/usr/local/gtkwin/SDL-1.2.8/include'])
@@ -79,7 +74,7 @@ state_io_srcs = Split ("""state_write.c state_read.c""
 state_io_objs = [build_env.Object(src) for src in state_io_srcs];
 state_io_packages = "gtk+-2.0 gdk-2.0 gdk-pixbuf-2.0 glib-2.0 libxml-2.0"
 
-release_env = build_env.Copy (CPPDEFINES = [('NONPAREIL_RELEASE', build_env ['RELEASE'])])
+release_env = build_env.Clone (CPPDEFINES = [('NONPAREIL_RELEASE', build_env ['RELEASE'])])
 common_objs.append (release_env.Object ('release.c'))
 
 build_env.ParseConfig(pkg_config_cmd + state_io_packages)
@@ -89,7 +84,7 @@ build_env.ParseConfig(pkg_config_cmd + state_io_packag
 #-----------------------------------------------------------------------------
 
 if build_env ['build_target_only'] == 0:
-    str2png_env = build_env.Copy ()
+    str2png_env = build_env.Clone ()
 
     str2png_env.Append (CPPDEFINES = [('DEFAULT_PATH', 'image')])
 
@@ -196,7 +191,7 @@ if build_env ['build_target_only'] == 0:
 #-----------------------------------------------------------------------------
 
 if not build_target_only:
-    title_env = native_env.Copy (STR2PNG_STRING = 'NONPAREIL',
+    title_env = native_env.Clone (STR2PNG_STRING = 'NONPAREIL',
                                  STR2PNG_OPTS = '-x 40 -y 44 -m 10')
 
     title_env.STR2PNG (target = 'nonpareil_title',
@@ -205,7 +200,7 @@ if not build_target_only:
     native_env.PNG2C (target = '#build/common/nonpareil_title_png.c',
                       source = 'nonpareil_title.png')
             
-    rgoose_env = native_env.Copy (STR2PNG_STRING = '.',
+    rgoose_env = native_env.Clone (STR2PNG_STRING = '.',
                                   STR2PNG_OPTS = '-x 40 -y 44')
 
     rgoose_env.STR2PNG (target = 'rgoose',
@@ -214,7 +209,7 @@ if not build_target_only:
     native_env.PNG2C (target = '#build/common/rgoose_png.c',
                       source = 'rgoose.png')
             
-    lgoose_env = native_env.Copy (STR2PNG_STRING = ',',
+    lgoose_env = native_env.Clone (STR2PNG_STRING = ',',
                                   STR2PNG_OPTS = '-x 40 -y 44')
 
     lgoose_env.STR2PNG (target = 'lgoose',
@@ -235,7 +230,7 @@ if not build_target_only:
 # nonpareil
 #-----------------------------------------------------------------------------
 
-nonpareil_env = build_env.Copy ()
+nonpareil_env = build_env.Clone ()
 
 nonpareil_srcs = Split ("""proc.c glib_async_queue_source.c
                            about.c goose.c pixbuf_util.c
@@ -284,9 +279,9 @@ nonpareil_env.ParseConfig (pkg_config_cmd + nonpareil_
 if (not ming) or (cross and not build_target_only):
     nonpareil_env.ParseConfig (sdl_pkg_config_cmd)
 
-csim_env = nonpareil_env.Copy ()
+csim_env = nonpareil_env.Clone ()
 if not ming:
-    csim_env.Append (CPPDEFINES = [('DEFAULT_PATH', build_env ['libdir'])])
+    csim_env.Append (CPPDEFINES = [('DEFAULT_PATH' + build_env ['libdir'])])
 
 if build_env ['target'] == 'win32':
     csim_env.Append (CPPDEFINES = [('SHAPE_DEFAULT', "false")])
@@ -296,7 +291,7 @@ if build_env ['has_debugger_gui']:
 
 if build_env ['has_debugger_cli']:
     csim_env.Append (CPPDEFINES = [('HAS_DEBUGGER_CLI', 1)])
-    debugger_cli_env = csim_env.Copy ()
+    debugger_cli_env = csim_env.Clone ()
     if build_env ['use_tcl']:
         debugger_cli_env.Append (CPPDEFINES = [('USE_TCL', 1)])
         nonpareil_env.Append (LIBS = 'tcl')
@@ -325,7 +320,7 @@ nonpareil = nonpareil_env.Program (target = 'nonpareil
 # udis
 #-----------------------------------------------------------------------------
 
-udis_env = build_env.Copy ()
+udis_env = build_env.Clone ()
 
 udis_srcs = Split ("""dis.c""")
 
@@ -336,7 +331,7 @@ udis = udis_env.Program (target = 'udis',
 # nsim_conv
 #-----------------------------------------------------------------------------
 
-nsim_conv_env = build_env.Copy ()
+nsim_conv_env = build_env.Clone ()
 
 nsim_conv_srcs = Split ("""nsim_conv.c
 	                   state_read_nsim.c state_write_nsim.c""")
