From d5c3fb7b75b4ea80e09bf3cb7ff6dd1061968d6e Mon Sep 17 00:00:00 2001
From: Stacey Son <sson@FreeBSD.org>
Date: Tue, 2 Dec 2014 00:52:03 +0000
Subject: [PATCH] Add sched_yield(2) and sched_get_priority_{max, min}(2)
 syscall handlers.

This change adds system call handlers and strace support for
sched_yield(2), sched_get_priority_max(2) and sched_get_priority_min(2).
---
 bsd-user/bsd-proc.h          | 21 ++++++++++++++++++++-
 bsd-user/freebsd/strace.list |  2 ++
 bsd-user/syscall.c           | 13 +++++++++++++
 3 files changed, 35 insertions(+), 1 deletion(-)

diff --git a/bsd-user/bsd-proc.h b/bsd-user/bsd-proc.h
index 5c1f91a..85dff61 100644
--- a/bsd-user/bsd-proc.h
+++ b/bsd-user/bsd-proc.h
@@ -443,6 +443,25 @@ static inline abi_long do_bsd_setpriority(abi_long which, abi_long who,
     return get_errno(setpriority(which, who, prio));
 }
 
+/* sched_yield(2) */
+static inline abi_long do_bsd_sched_yield(void)
+{
 
-#endif /* !__BSD_PROC_H_ */
+        return get_errno(sched_yield());
+}
+
+/* sched_get_priority_min(2) */
+static inline abi_long do_bsd_sched_get_priority_min(int policy)
+{
+
+        return get_errno(sched_get_priority_min(policy));
+}
+
+/* sched_get_priority_max(2) */
+static inline abi_long do_bsd_sched_get_priority_max(int policy)
+{
 
+        return get_errno(sched_get_priority_max(policy));
+}
+
+#endif /* !__BSD_PROC_H_ */
diff --git a/bsd-user/freebsd/strace.list b/bsd-user/freebsd/strace.list
index 6202790..b0e32fd 100644
--- a/bsd-user/freebsd/strace.list
+++ b/bsd-user/freebsd/strace.list
@@ -191,6 +191,8 @@
 { TARGET_FREEBSD_NR_rmdir, "rmdir", NULL, NULL, NULL },
 { TARGET_FREEBSD_NR_rtprio_thread, "rtprio_thread", "%s(%d, %d, %p)", NULL, NULL },
 { TARGET_FREEBSD_NR_sbrk, "sbrk", NULL, NULL, NULL },
+{ TARGET_FREEBSD_NR_sched_get_priority_max, "sched_get_priority_max", NULL, NULL, NULL },
+{ TARGET_FREEBSD_NR_sched_get_priority_min, "sched_get_priority_min", NULL, NULL, NULL },
 { TARGET_FREEBSD_NR_sched_yield, "sched_yield", NULL, NULL, NULL },
 { TARGET_FREEBSD_NR_select, "select", NULL, NULL, NULL },
 { TARGET_FREEBSD_NR_semget, "semget", NULL, NULL, NULL },
diff --git a/bsd-user/syscall.c b/bsd-user/syscall.c
index 6f467f8..0e090f4 100644
--- a/bsd-user/syscall.c
+++ b/bsd-user/syscall.c
@@ -1425,10 +1425,23 @@ abi_long do_freebsd_syscall(void *cpu_env, int num, abi_long arg1,
         ret = do_freebsd_sched_getscheduler(arg1);
         break;
 
+    case TARGET_FREEBSD_NR_sched_get_priority_max: /* sched_get_priority_max(2)*/
+                ret = do_bsd_sched_get_priority_max(arg1);
+                break;
+
+    case TARGET_FREEBSD_NR_sched_get_priority_min: /* sched_get_priority_min(2)*/
+                ret = do_bsd_sched_get_priority_min(arg1);
+                break;
+
     case TARGET_FREEBSD_NR_sched_rr_get_interval: /* sched_rr_get_interval(2) */
         ret = do_freebsd_sched_rr_get_interval(arg1, arg2);
         break;
 
+    case TARGET_FREEBSD_NR_sched_yield: /* sched_yield(2)*/
+                ret = do_bsd_sched_yield();
+                break;
+
+
         /*
          * FreeBSD CPU affinity sets management
          */
