From f254372f13ab5cd8f25bd1ca8641ce6d67bff3fe Mon Sep 17 00:00:00 2001
From: Stacey Son <sson@FreeBSD.org>
Date: Tue, 2 Dec 2014 13:57:27 +0000
Subject: [PATCH] Eliminate "Qemu unsupported ioctl" warnings for cryptodev.

The host may have /dev/crypto (cryptodev) support but emulation of it
for qemu targets is not supported.  Therefore, return an error if
it used to eliminate the generic warning message.
---
 bsd-user/bsd-ioctl.c                  | 17 ++++++-
 bsd-user/freebsd/os-ioctl-cmds.h      |  3 ++
 bsd-user/freebsd/os-ioctl-cryptodev.h | 85 +++++++++++++++++++++++++++++++++++
 3 files changed, 104 insertions(+), 1 deletion(-)
 create mode 100644 bsd-user/freebsd/os-ioctl-cryptodev.h

diff --git a/bsd-user/bsd-ioctl.c b/bsd-user/bsd-ioctl.c
index 10e8e54..ae4784a 100644
--- a/bsd-user/bsd-ioctl.c
+++ b/bsd-user/bsd-ioctl.c
@@ -1,7 +1,7 @@
 /*
  *  BSD ioctl(2) emulation
  *
- *  Copyright (c) 2013 Stacey D. Son
+ *  Copyright (c) 2013-14 Stacey D. Son
  *
  *  This program is free software; you can redistribute it and/or modify
  *  it under the terms of the GNU General Public License as published by
@@ -29,10 +29,13 @@
 #include <sys/ttycom.h>
 #include <sys/filio.h>
 
+#include <crypto/cryptodev.h>
+
 #include "qemu.h"
 #include "qemu-common.h"
 
 #include "bsd-ioctl.h"
+#include "os-ioctl-cryptodev.h"
 #include "os-ioctl-filio.h"
 #include "os-ioctl-ttycom.h"
 
@@ -295,6 +298,10 @@ typedef struct IOCTLEntry IOCTLEntry;
 
 #define MAX_STRUCT_SIZE 4096
 
+static abi_long do_ioctl_unsupported(__unused const IOCTLEntry *ie,
+                __unused uint8_t *buf_temp,  __unused int fd,
+                __unused abi_long cmd, __unused abi_long arg);
+
 static IOCTLEntry ioctl_entries[] = {
 #define IOC_    0x0000
 #define IOC_R   0x0001
@@ -331,6 +338,14 @@ static void log_unsupported_ioctl(unsigned long cmd)
 	gemu_log(" '%c' %3d %lu\n", (char)IOCGROUP(cmd), (int)(cmd & 0xff), IOCPARM_LEN(cmd));
 }
 
+static abi_long do_ioctl_unsupported(__unused const IOCTLEntry *ie,
+                __unused uint8_t *buf_temp,  __unused int fd,
+                __unused abi_long cmd, __unused abi_long arg)
+{
+
+        return -TARGET_ENXIO;
+}
+
 abi_long do_bsd_ioctl(int fd, abi_long cmd, abi_long arg)
 {
     const IOCTLEntry *ie;
diff --git a/bsd-user/freebsd/os-ioctl-cmds.h b/bsd-user/freebsd/os-ioctl-cmds.h
index 0129f9e..f10d560 100644
--- a/bsd-user/freebsd/os-ioctl-cmds.h
+++ b/bsd-user/freebsd/os-ioctl-cmds.h
@@ -47,3 +47,6 @@ IOCTL(FIONWRITE, IOC_R, MK_PTR(TYPE_INT))
 IOCTL(FIONSPACE, IOC_R, MK_PTR(TYPE_INT))
 IOCTL(FIOSEEKDATA, IOC_RW, MK_PTR(TYPE_ULONG))
 IOCTL(FIOSEEKHOLE, IOC_RW, MK_PTR(TYPE_ULONG))
+
+/* crypto/cryptodev.h */
+IOCTL_SPECIAL(CRIOGET, IOC_RW, do_ioctl_unsupported, TYPE_INT)
diff --git a/bsd-user/freebsd/os-ioctl-cryptodev.h b/bsd-user/freebsd/os-ioctl-cryptodev.h
new file mode 100644
index 0000000..bb0d90f
--- /dev/null
+++ b/bsd-user/freebsd/os-ioctl-cryptodev.h
@@ -0,0 +1,85 @@
+/*
+ *  FreeBSD cryptodev definitions for ioctl(2) emulation
+ *
+ *  Copyright (c) 2014 Stacey D. Son
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2 of the License, or
+ *  (at your option) any later version.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+#ifndef _IOCTL_CRYPTODEV_H_
+#define _IOCTL_CRYPTODEV_H_
+
+/* see opencrypto/cryptodev.h */
+
+struct target_session_op {
+	u_int32_t	cipher;
+	u_int32_t	mac;
+	
+	u_int32_t	keylen;
+	abi_ulong	key;
+	int32_t		mackeylen;
+	abi_ulong	mackey;
+
+	u_int32_t	ses;
+};
+
+
+struct target_session2_op {
+	u_int32_t	cipher;
+	u_int32_t	mac;
+	
+	u_int32_t	keylen;
+	abi_ulong	key;
+	int32_t		mackeylen;
+	abi_ulong	mackey;
+
+	u_int32_t	ses;
+	int32_t		crid;
+	int		pad[4];
+};
+
+struct target_crypt_find_op {
+	int		crid;
+        char		name[32];
+};
+
+struct target_crparam {
+	abi_ulong	crp_p;
+        u_int		crp_nbits;
+};
+
+#define	TARGET_CRK_MAXPARAM	8 
+
+struct target_crypt_kop {
+        u_int		crk_op;
+        u_int		crk_status;
+        u_short		crk_iparams;
+        u_short		crk_oparams;
+        u_int		crk_crid;
+        struct target_crparam	crk_param[TARGET_CRK_MAXPARAM];
+};
+
+#define	TARGET_CRIOGET		TARGET_IOWR('c', 100, u_int32_t)
+#define TARGET_CRIOASYMFEAT	TARGET_CIOCASYMFEAT
+#define	TARGET_CRIOFINDDEV	TARGET_CIOCFINDDEV
+
+#define	TARGET_CIOCGSESSION	TARGET_IOWR('c', 101, struct target_session_op)
+#define	TARGET_CIOCFSESSION	TARGET_IOW('c', 102, u_int32_t)
+#define	TARGET_CIOCCRYPT	TARGET_IOWR('c', 103, struct target_crypt_op)
+#define	TARGET_CIOCKEY		TARGET_IOWR('c', 104, struct target_crypt_kop)
+#define	TARGET_CIOCASYMFEAT	TARGET_IOR('c', 105, u_int32_t)
+#define	TARGET_CIOCGSESSION2	TARGET_IOWR('c', 106, struct target_session2_op)
+#define	TARGET_CIOCKEY2		TARGET_IOWR('c', 107, struct target_crypt_kop)
+#define	TARGET_CIOCFINDDEV	TARGET_IOWR('c', 108, struct target_crypt_find_op)
+
+#endif /* !_IOCTL_CRYPTODEV_H_ */
