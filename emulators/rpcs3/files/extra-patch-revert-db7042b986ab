--- Utilities/sync.h.orig	2019-10-19 17:20:18 UTC
+++ Utilities/sync.h
@@ -24,8 +24,6 @@
 #include <unordered_map>
 
 #ifdef _WIN32
-DYNAMIC_IMPORT("ntdll.dll", NtWaitForKeyedEvent, NTSTATUS(HANDLE, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout));
-DYNAMIC_IMPORT("ntdll.dll", NtReleaseKeyedEvent, NTSTATUS(HANDLE, PVOID Key, BOOLEAN Alertable, PLARGE_INTEGER Timeout));
 DYNAMIC_IMPORT("ntdll.dll", NtWaitForSingleObject, NTSTATUS(HANDLE Handle, BOOLEAN Alertable, PLARGE_INTEGER Timeout));
 DYNAMIC_IMPORT("ntdll.dll", NtDelayExecution, NTSTATUS(BOOLEAN Alertable, PLARGE_INTEGER DelayInterval));
 #endif
--- rpcs3/util/atomic.cpp.orig	2019-10-19 17:20:18 UTC
+++ rpcs3/util/atomic.cpp
@@ -59,7 +59,7 @@ static thread_local bool(*s_tls_wait_cb)(const void* d
 #ifdef USE_POSIX
 using sema_handle = sem_t;
 #elif defined(_WIN32)
-using sema_handle = std::uint16_t;
+using sema_handle = HANDLE;
 #else
 namespace
 {
@@ -119,7 +119,10 @@ static u32 sema_alloc()
 			// Initialize semaphore (should be very fast)
 			sem_init(&s_sema_list[id], 0, 0);
 #elif defined(_WIN32)
-			// Do nothing
+			if (!s_sema_list[id])
+			{
+				s_sema_list[id] = CreateSemaphoreW(nullptr, 0, 0x7fff'ffff, nullptr);
+			}
 #else
 			if (!s_sema_list[id])
 			{
@@ -454,7 +457,7 @@ void atomic_storage_futex::wait(const void* data, std:
 			qw.QuadPart -= 1;
 		}
 
-		if (!NtWaitForKeyedEvent(nullptr, &s_sema_list[sema_id], false, timeout + 1 ? &qw : nullptr))
+		if (!NtWaitForSingleObject(s_sema_list[sema_id], false, timeout + 1 ? &qw : nullptr))
 		{
 			fallback = true;
 		}
@@ -569,7 +572,7 @@ void atomic_storage_futex::wait(const void* data, std:
 #if defined(_WIN32) && !defined(USE_POSIX)
 		static LARGE_INTEGER instant{};
 
-		if (!NtWaitForKeyedEvent(nullptr, &s_sema_list[sema_id], false, &instant))
+		if (!NtWaitForSingleObject(s_sema_list[sema_id], false, &instant))
 		{
 			fallback = true;
 		}
@@ -765,7 +768,7 @@ void atomic_storage_futex::notify_one(const void* data
 #ifdef USE_POSIX
 		sem_post(&s_sema_list[sema_id]);
 #elif defined(_WIN32)
-		NtReleaseKeyedEvent(nullptr, &s_sema_list[sema_id], 1, nullptr);
+		ReleaseSemaphore(s_sema_list[sema_id], 1, nullptr);
 #else
 		dumb_sema& sema = *s_sema_list[sema_id];
 
@@ -836,9 +839,9 @@ void atomic_storage_futex::notify_all(const void* data
 		sem_post(&s_sema_list[sema_id]);
 	}
 #elif defined(_WIN32)
-	for (u32 i = 0; i < count; i++)
+	if (count)
 	{
-		NtReleaseKeyedEvent(nullptr, &s_sema_list[sema_id], count, nullptr);
+		ReleaseSemaphore(s_sema_list[sema_id], count, nullptr);
 	}
 #else
 	if (count)
