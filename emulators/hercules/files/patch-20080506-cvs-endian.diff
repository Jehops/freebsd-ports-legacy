Index: control.c
===================================================================
RCS file: /usr/cvs/hercules/hercules/control.c,v
retrieving revision 1.266
retrieving revision 1.267
diff -u -p -r1.266 -r1.267
--- control.c	11 Apr 2008 14:28:00 -0000	1.266
+++ control.c	6 May 2008 22:15:42 -0000	1.267
@@ -1968,16 +1971,16 @@ U16     updated = 0;                    
         m = n;
 
     /* Copy from operand beginning */
-    for (i = 0; i < m; i++)
+    for (i = 0; i < m; i++, p1++)
     {
-        regs->CR_L((r1 + i) & 0xF) = fetch_fw (p1++);
+        regs->CR_L((r1 + i) & 0xF) = fetch_fw (p1);
         updated |= BIT((r1 + i) & 0xF);
     }
 
     /* Copy from next page */
-    for ( ; i < n; i++)
+    for ( ; i < n; i++, p2++)
     {
-        regs->CR_L((r1 + i) & 0xF) = fetch_fw (p2++);
+        regs->CR_L((r1 + i) & 0xF) = fetch_fw (p2);
         updated |= BIT((r1 + i) & 0xF);
     }
 
Index: esame.c
===================================================================
RCS file: /usr/cvs/hercules/hercules/esame.c,v
retrieving revision 1.201
retrieving revision 1.202
diff -u -p -r1.201 -r1.202
--- esame.c	11 Apr 2008 14:28:29 -0000	1.201
+++ esame.c	6 May 2008 22:15:42 -0000	1.202
@@ -4038,8 +4041,8 @@ U32    *p1, *p2;                        
     {
         /* Boundary not crossed */
         n >>= 2;
-        for (i = 0; i < n; i++)
-            regs->GR_H((r1 + i) & 0xF) = fetch_fw (p1++);
+        for (i = 0; i < n; i++, p1++)
+            regs->GR_H((r1 + i) & 0xF) = fetch_fw (p1);
     }
     else
     {
@@ -4052,11 +4055,11 @@ U32    *p1, *p2;                        
         {
             /* Addresses are word aligned */
             m >>= 2;
-            for (i = 0; i < m; i++)
-                regs->GR_H((r1 + i) & 0xF) = fetch_fw (p1++);
+            for (i = 0; i < m; i++, p1++)
+                regs->GR_H((r1 + i) & 0xF) = fetch_fw (p1);
             n >>= 2;
-            for ( ; i < n; i++)
-                regs->GR_H((r1 + i) & 0xF) = fetch_fw (p2++);
+            for ( ; i < n; i++, p2++)
+                regs->GR_H((r1 + i) & 0xF) = fetch_fw (p2);
         }
         else
         {
@@ -6728,16 +6731,16 @@ U32    *p1, *p2 = NULL;                 
         m = n;
 
     /* Load from first page */
-    for (i = 0; i < m; i++)
+    for (i = 0; i < m; i++, p1++)
     {
-        regs->AR((r1 + i) & 0xF) = fetch_fw (p1++);
+        regs->AR((r1 + i) & 0xF) = fetch_fw (p1);
         SET_AEA_AR(regs, (r1 + i) & 0xF);
     }
 
     /* Load from next page */
-    for ( ; i < n; i++)
+    for ( ; i < n; i++, p2++)
     {
-        regs->AR((r1 + i) & 0xF) = fetch_fw (p2++);
+        regs->AR((r1 + i) & 0xF) = fetch_fw (p2);
         SET_AEA_AR(regs, (r1 + i) & 0xF);
     }
 
@@ -6811,8 +6814,8 @@ U32    *p1, *p2;                        
     {
         /* Boundary not crossed */
         n >>= 2;
-        for (i = 0; i < n; i++)
-            regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1++);
+        for (i = 0; i < n; i++, p1++)
+            regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1);
     }
     else
     {
@@ -6825,11 +6828,11 @@ U32    *p1, *p2;                        
         {
             /* Addresses are word aligned */
             m >>= 2;
-            for (i = 0; i < m; i++)
-                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1++);
+            for (i = 0; i < m; i++, p1++)
+                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1);
             n >>= 2;
-            for ( ; i < n; i++)
-                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p2++);
+            for ( ; i < n; i++, p2++)
+                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p2);
         }
         else
         {
Index: general1.c
===================================================================
RCS file: /usr/cvs/hercules/hercules/general1.c,v
retrieving revision 1.165
retrieving revision 1.166
diff -u -p -r1.165 -r1.166
--- general1.c	11 Apr 2008 14:28:44 -0000	1.165
+++ general1.c	6 May 2008 22:15:42 -0000	1.166
@@ -3413,16 +3416,16 @@ U32    *p1, *p2 = NULL;                 
         m = n;
 
     /* Copy from operand beginning */
-    for (i = 0; i < m; i++)
+    for (i = 0; i < m; i++, p1++)
     {
-        regs->AR((r1 + i) & 0xF) = fetch_fw (p1++);
+        regs->AR((r1 + i) & 0xF) = fetch_fw (p1);
         SET_AEA_AR (regs, (r1 + i) & 0xF);
     }
 
     /* Copy from next page */
-    for ( ; i < n; i++)
+    for ( ; i < n; i++, p2++)
     {
-        regs->AR((r1 + i) & 0xF) = fetch_fw (p2++);
+        regs->AR((r1 + i) & 0xF) = fetch_fw (p2);
         SET_AEA_AR (regs, (r1 + i) & 0xF);
     }
 
@@ -3580,8 +3583,8 @@ U32    *p1, *p2;                        
     {
         /* Boundary not crossed */
         n >>= 2;
-        for (i = 0; i < n; i++)
-            regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1++);
+        for (i = 0; i < n; i++, p1++)
+            regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1);
     }
     else
     {
@@ -3594,11 +3597,11 @@ U32    *p1, *p2;                        
         {
             /* Addresses are word aligned */
             m >>= 2;
-            for (i = 0; i < m; i++)
-                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1++);
+            for (i = 0; i < m; i++, p1++)
+                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p1);
             n >>= 2;
-            for ( ; i < n; i++)
-                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p2++);
+            for ( ; i < n; i++, p2++)
+                regs->GR_L((r1 + i) & 0xF) = fetch_fw (p2);
         }
         else
         {
