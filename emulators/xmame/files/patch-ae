--- src/unix/video-drivers/glxtool.h.orig	Sat Mar 24 02:33:38 2001
+++ src/unix/video-drivers/glxtool.h	Mon Apr  2 21:40:48 2001
@@ -28,6 +28,8 @@
 	  int accumBlueBits;
 	  int accumAlphaBits;
 
+	  /* internal use only */
+	  int  gl_supported;
 	  long nativeVisualID;
 	} GLCapabilities;
 
--- src/unix/video-drivers/xgl.c.orig	Mon Apr  2 13:33:10 2001
+++ src/unix/video-drivers/xgl.c	Mon Apr  2 21:42:05 2001
@@ -63,14 +63,14 @@
 GLXContext glContext=NULL;
 
 const GLCapabilities glCapsDef = { BUFFER_DOUBLE, COLOR_RGBA, STEREO_OFF,
-			           1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 
+			           1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1,
 			           -1
 			         };
 
 GLCapabilities glCaps;
 
 static const char * xgl_version_str = 
-	"\nGLmame v0.83, by Sven Goethel, http://www.jausoft.com, sgoethel@jausoft.com,\nbased upon GLmame v0.6 driver for xmame, written by Mike Oliphant\n\n";
+	"\nGLmame v0.85, by Sven Goethel, http://www.jausoft.com, sgoethel@jausoft.com,\nbased upon GLmame v0.6 driver for xmame, written by Mike Oliphant\n\n";
 
 struct rc_option display_opts[] = {
    /* name, shortname, type, dest, deflt, min, max, func, help */
@@ -237,6 +237,7 @@
 
   glCaps.alphaBits=(alphablending>0)?1:0;
   glCaps.buffer   =(doublebuffer>0)?BUFFER_DOUBLE:BUFFER_SINGLE;
+  glCaps.gl_supported = 1;
 
   window = RootWindow(display,DefaultScreen( display ));
   vgc = findVisualGlX( display, window,
--- src/unix/video-drivers/glxtool.c.orig	Fri Mar 23 17:33:38 2001
+++ src/unix/video-drivers/glxtool.c	Mon Apr  2 22:31:23 2001
@@ -68,6 +68,7 @@
 				        GLCapabilities *glCaps )
 {
     int i=0;
+    visualAttribList[i++] = GLX_USE_GL;    /* paranoia .. */
     visualAttribList[i++] = GLX_RED_SIZE;
     visualAttribList[i++] = 1;
     visualAttribList[i++] = GLX_GREEN_SIZE;
@@ -134,13 +135,18 @@
     int gc_ret = 0;
     int ownwin = 0;
 
+    GLCapabilities _glCaps;
+
     /** 
      * The Visual seeked by Function: findVisualIdByFeature !
      */
     XVisualInfo * visualList=NULL; /* the visual list, to be XFree-ed */
 
+    /* paranoia .. */
+    glCaps->gl_supported = 1;
+
     /* backup ... */
-    GLCapabilities _glCaps = *glCaps;
+    _glCaps = *glCaps;
 
     if(pOwnWin) ownwin=*pOwnWin;
 
@@ -214,14 +220,14 @@
 
 	    if( offscreen && vgc.visual!=NULL)
 	    {
-	        if(*pix!=0)
+	        if(pix!=NULL && *pix!=NULL)
 		{
 			XFreePixmap(display, *pix);
 		}
-		if(vgc.visual !=NULL)
+		if(pix!=NULL && vgc.visual !=NULL)
 	    		*pix = XCreatePixmap( display, rootWin, width, height, 
 		                              vgc.visual->depth); 
-		if(*pix!=0)
+		if(pix!=NULL && *pix!=NULL)
 		{
 	           *pWin = __glXCreateGLXPixmap( display,  vgc.visual, *pix );
 		   if(*pWin==0)
@@ -271,7 +277,7 @@
 			fflush(stderr);
 		    }
 
-		    if(*pix!=0)
+		    if(pix!=NULL && *pix!=NULL)
 		    {
 		   	XFreePixmap(display, *pix);
 			*pix=0;
@@ -463,6 +469,16 @@
     int iValue2=0;
     int iValue3=0;
 
+    memset(glCaps, 0, sizeof(GLCapabilities));
+
+    if(__glXGetConfig( disp, visual, GLX_USE_GL, &iValue)==0)
+    {
+	glCaps->gl_supported=(iValue==True)?1:0;
+    } else {
+	fprintf(stderr,"GLINFO: fetching GLX_USE_GL state failed\n");
+	fflush(stderr);
+    }
+
     if(__glXGetConfig( disp, visual, GLX_DOUBLEBUFFER, &iValue)==0)
     {
 	glCaps->buffer=iValue?BUFFER_DOUBLE:BUFFER_SINGLE;
@@ -530,7 +546,7 @@
 	fprintf(stderr,"GLINFO: fetching rgba AccumSize states failed\n");
 	fflush(stderr);
     }
-    glCaps->nativeVisualID=(long)visual->visualid;
+    glCaps->nativeVisualID=(long) (visual->visualid);
 
     return 1;
 }
@@ -541,6 +557,8 @@
     GLCapabilities _glCaps;
     setGLCapabilities ( display, vi, &_glCaps);
 
+    if(_glCaps.gl_supported != glCaps->gl_supported) return 0;
+
     if(_glCaps.buffer<glCaps->buffer) return 0;
 
     if(_glCaps.color<glCaps->color) return 0;
@@ -635,6 +653,7 @@
 
 void printGLCapabilities ( GLCapabilities *glCaps )
 {
+    fprintf(stdout, "\t gl_supported: %d !\n", glCaps->gl_supported);
     fprintf(stdout, "\t doubleBuff: %d, ", (int)glCaps->buffer);
     fprintf(stdout, " rgba: %d, ", (int)glCaps->color);
     fprintf(stdout, " stereo: %d, ", (int)glCaps->stereo);
