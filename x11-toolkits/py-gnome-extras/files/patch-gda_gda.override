--- gda/gda.override.orig	Wed Apr 20 16:10:31 2005
+++ gda/gda.override	Wed Apr 20 16:12:56 2005
@@ -59,13 +59,14 @@ override gda_config_get_data_source_list
 static PyObject*
 _wrap_gda_config_get_data_source_list (PyObject* self) {
 	PyObject* plist = PyList_New (0);
+	GList *tmp, *list;
 
 	if (!plist) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	GList *tmp, *list = gda_config_get_data_source_list();
+	list = gda_config_get_data_source_list();
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
 		PyObject* obj = pyg_boxed_new (GDA_TYPE_DATA_SOURCE_INFO, tmp->data, FALSE, FALSE);
@@ -81,13 +82,14 @@ override gda_config_get_provider_list kw
 static PyObject*
 _wrap_gda_config_get_provider_list (PyObject* self) {
 	PyObject* plist = PyList_New (0);
+	GList *tmp, *list;
 
 	if (!plist) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	GList *tmp, *list = gda_config_get_provider_list();
+	list = gda_config_get_provider_list();
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
 		PyObject* obj = pyg_boxed_new (GDA_TYPE_PROVIDER_INFO, tmp->data, FALSE, FALSE);
@@ -174,20 +176,22 @@ static PyObject*
 _wrap_gda_config_list_keys (PyObject* self, PyObject* fargs, PyObject* kwargs) {
 	static char* kwlist[] = { "path", NULL };
 	gchar* path = "/";
+	PyObject *plist;
+	GList *tmp, *list;
 
 	if (!PyArg_ParseTupleAndKeywords (fargs, kwargs, "|s:config_list_keys", kwlist, &path)) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	PyObject* plist = PyList_New (0);
+	plist = PyList_New (0);
 
 	if (!plist) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	GList *tmp, *list = gda_config_list_keys (path);
+	list = gda_config_list_keys (path);
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
 		PyList_Append (plist, PyString_FromString (tmp->data));
@@ -201,7 +205,8 @@ override gda_connection_execute_command 
 static PyObject*
 _wrap_gda_connection_execute_command (PyGObject* self, PyObject* fargs, PyObject* kwargs) {
 	static char* kwlist[] = { "cmd", "params", NULL };
-	PyGObject *cmd, *params;
+	PyGObject *cmd, *params, *plist;
+	GList *tmp, *list;
 
 /* TODO: 
 	if (!PyArg_ParseTupleAndKeywords (fargs, kwargs, "O!O!:GdaConnection.execute_command",
@@ -211,14 +216,14 @@ _wrap_gda_connection_execute_command (Py
 	}
 */
 
-	PyObject* plist = PyList_New (0);
+	plist = PyList_New (0);
 
 	if (!plist) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	GList *tmp, *list = gda_connection_execute_command (GDA_CONNECTION (self->obj),
+	list = gda_connection_execute_command (GDA_CONNECTION (self->obj),
 	      GDA_COMMAND (cmd->obj), GDA_PARAMETER_LIST (params->obj));
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
@@ -235,13 +240,14 @@ override gda_connection_get_errors kwarg
 static PyObject*
 _wrap_gda_connection_get_errors (PyGObject* self) {
 	PyObject* plist = PyList_New (0);
+	GList *tmp, *list;
 
 	if (!plist) {
 		Py_INCREF (Py_None);
 		return Py_None;
 	}
 
-	GList *tmp, *list = (GList*) gda_connection_get_errors (GDA_CONNECTION (self->obj));
+	list = (GList*) gda_connection_get_errors (GDA_CONNECTION (self->obj));
 
 	for (tmp = list; tmp != NULL; tmp = tmp->next) {
 		PyObject* obj = pygobject_new (G_OBJECT (tmp->data));
