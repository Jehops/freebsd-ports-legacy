--- util/wsetfont.orig	Fri May 18 22:09:24 2001
+++ util/wsetfont	Fri May 18 22:09:40 2001
@@ -77,7 +77,7 @@
     "--auto")
 	auto="YES";;
     *)
-	if echo $i |grep "^--locale=" &>/dev/null; then
+	if echo $i |grep "^--locale=" >/dev/null 2>&1; then
 	    new_locale=$(echo $i |sed -e "s|--locale=||" -)
 	elif [ -z $family ]; then
 	    family=$i
@@ -115,7 +115,7 @@
 
 for i in $DomainNames; do
     tmp="Domain$i"
-    AllKeys="$AllKeys ${!tmp}"
+    AllKeys="$AllKeys `eval echo '${'$tmp'}'`"
 done
 
 #
@@ -212,8 +212,8 @@
 	family="default"
     else
 	for i in $all_codings; do
-	    for j in ${!i}; do
-		if [ "$j" == "${locale%_*}" ]; then
+	    for j in `eval echo '${'$i'}'`; do
+		if [ "$j" = "${locale%_*}" ]; then
 		    family="$i"
 		    break 2
 		fi
@@ -227,7 +227,7 @@
 #
 is_supported=""
 for i in $Supported; do
-    if test "$family" == "$i"; then
+    if test "$family" = "$i"; then
 	is_supported="YES"
 	break
     fi
@@ -245,7 +245,7 @@
 #
 is_nodef_unable=""
 for i in $NodefUnable; do
-    if test "$family" == "$i"; then
+    if test "$family" = "$i"; then
 	if test -n "$nodef"; then	# --nodef with one from $NodefUnable
 	    echo -e "\n"\
 		"Sorry, --nodef argument is not allowed for these font codings:\n"\
@@ -268,22 +268,22 @@
     for i in $AllKeys; do
 	if test -n "$is_nodef_unable"; then		# japanese,... defaults
 	    tmp="$family$i"
-	    eval $i=${!tmp}
+	    eval $i=`eval echo '${'$tmp'}'`
 	else						# rest, load defaults
 	    not_font=""
 	    for j in $NotFont; do
-		if test "$i" == "$j"; then
+		if test "$i" = "$j"; then
 		    not_font="YES"
 		    break
 		fi
 	    done
 	    if test -n "$not_font"; then  # don't append coding (not default!)
 		tmp="${family}$i"
-		eval $i="${!tmp}"
+		eval $i="`eval echo '${'$tmp'}'`"
 	    else					# append coding
 		tmp="Default$i"
 		tmp1="${family}Coding"
-		eval $i="${!tmp}${!tmp1}"
+		eval $i="`eval echo '${'$tmp'}${'$tmp1'}'`"
 	    fi
 	fi
     done
@@ -305,36 +305,38 @@
     echo
     echo "Setting up $i domain file..."
     tmp="Domain$i"
-    for j in ${!tmp}; do
+    for j in `eval echo '${'$tmp'}'`; do
 	if test -n "$nodef"; then		# --nodef, change coding only
 	    not_font=""
 	    for k in $NotFont; do
-		if test "$k" == "$j"; then
+		if test "$k" = "$j"; then
 		    not_font="YES"
 		    break;
 		fi
 	    done
 	    if test -n "$not_font"; then		# don't append coding
 		tmp1="${family}$j"
-		eval $j=${!tmp1}
+		eval $j=`eval echo '${'$tmp1'}'`
 	    else					# append coding
 #TODO:make this funny sed script a lot smarter to let us make changes in font
 #     lists, etc... (then we can enable --nodef for NodefUnable codings)
 #TODO:better (or at least any) check, whether wmaker is installed...
-		tmp1="${family}Coding"
-		eval $j=$($WDREAD $i $j | sed -e "s/\(^-.*-\).*-.*$/\1${!tmp1}/g")
-		if test -z "${!j}"; then		# failed, load default
+		tmp1="`eval echo '${'${family}Coding'}'`"
+		eval $j=`$WDREAD $i $j | sed -e "s/\(^-.*-\).*-.*$/\1${tmp1}/g"`
+		if test -z "`eval echo '${'$j'}'`"; then		# failed, load default
 		    tmp2="Default$j"
-		    eval $j=${!tmp2}
+		    eval $j=`eval echo '${'$tmp2'}'`
 		fi
 	    fi
 	fi
-	tmp1="$j=\"${!j}\""			# cosmetic length workaround
-	if (( ${#tmp1} > 80 )); then
-	    tmp1=$(echo "${tmp1:0:76}...\"")
+	tmp1="$j=\"`eval echo '${'$j'}'`\""			# cosmetic length workaround
+        echo '<<<<'
+	if [ ${#tmp1} -lt 80 ]; then
+	    tmp1=`echo $tmp1 | sed -e 's/^\(.\{1,76\}\).*/\1/'`
 	fi
+        echo '>>>>'
 	echo "$tmp1"
-	$WDWRITE $i $j \"${!j}\"
+	$WDWRITE $i $j \"`eval echo '${'$j'}'`\"
     done
 done
 echo

