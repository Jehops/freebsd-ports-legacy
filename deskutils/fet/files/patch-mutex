--- src/engine/generate.cpp.orig	2014-03-02 16:22:17.052250281 +0100
+++ src/engine/generate.cpp	2014-03-02 16:16:52.423231858 +0100
@@ -50,7 +50,7 @@
 
 #include <QSemaphore>
 
-extern QMutex mutex; //timetablegenerateform.cpp
+extern QMutex fet_mutex; //timetablegenerateform.cpp
 
 #ifndef FET_COMMAND_LINE
 extern QSemaphore semaphorePlacedActivity;
@@ -2596,7 +2596,7 @@
 	}
 
 if(threaded){
-		mutex.lock();
+		fet_mutex.lock();
 }
 	c.makeUnallocated(gt.rules);
 
@@ -2612,7 +2612,7 @@
 	maxActivitiesPlaced=0;
 
 if(threaded){
-		mutex.unlock();
+		fet_mutex.unlock();
 }
 
 	triedRemovals.resize(gt.rules.nInternalActivities, gt.rules.nHoursPerWeek);
@@ -2645,13 +2645,13 @@
 	time(&starting_time);
 	
 if(threaded){
-		mutex.lock();
+		fet_mutex.lock();
 }
 	timeToHighestStage=0;
 	searchTime=0;
 	generationStartDateTime=QDateTime::currentDateTime();
 if(threaded){
-		mutex.unlock();
+		fet_mutex.unlock();
 }
 	
 	//2000 was before
@@ -2666,11 +2666,11 @@
 		prevvalue:
 
 if(threaded){
-		mutex.lock();
+		fet_mutex.lock();
 }
 		if(abortOptimization){
 if(threaded){
-			mutex.unlock();
+			fet_mutex.unlock();
 }
 			return;
 		}
@@ -2680,7 +2680,7 @@
 		
 		if(searchTime>=maxSeconds){
 if(threaded){
-			mutex.unlock();
+			fet_mutex.unlock();
 }
 			
 			timeExceeded=true;
@@ -2945,7 +2945,7 @@
 		if(!foundGoodSwap){
 			if(impossibleActivity){
 if(threaded){
-				mutex.unlock();
+				fet_mutex.unlock();
 }
 				nDifficultActivities=1;
 				difficultActivities[0]=permutation[added_act];
@@ -3075,7 +3075,7 @@
 				
 			added_act=q+1;
 if(threaded){
-			mutex.unlock();
+			fet_mutex.unlock();
 }
 	
 			//if(semaphorePlacedActivity){
@@ -3119,18 +3119,18 @@
 			}
 			
 if(threaded){
-			mutex.unlock();
+			fet_mutex.unlock();
 }
 			emit(activityPlaced(added_act+1));
 if(threaded){
 			semaphorePlacedActivity.acquire();
 }
 if(threaded){
-			mutex.lock();
+			fet_mutex.lock();
 }
 			if(added_act==gt.rules.nInternalActivities && foundGoodSwap){
 if(threaded){
-				mutex.unlock();
+				fet_mutex.unlock();
 }
 				break;
 			}
@@ -3150,7 +3150,7 @@
 		}
 
 if(threaded){
-		mutex.unlock();
+		fet_mutex.unlock();
 }
 	}
 
@@ -9111,8 +9111,8 @@
 	if(level==0 && (nConflActivities[perm[0]]==MAX_ACTIVITIES)){
 		//to check if generation was stopped
 if(this->isThreaded){
-			mutex.unlock();
-			mutex.lock();
+			fet_mutex.unlock();
+			fet_mutex.lock();
 }
 		if(!abortOptimization && activity_count_impossible_tries<MAX_RETRIES_FOR_AN_ACTIVITY_AT_LEVEL_0){
 			activity_count_impossible_tries++;
--- src/interface/fet.cpp.orig	2014-03-02 16:22:44.447319626 +0100
+++ src/interface/fet.cpp	2014-03-02 16:18:50.547263613 +0100
@@ -102,9 +102,9 @@
 extern bool students_schedule_ready, teachers_schedule_ready, rooms_schedule_ready;
 
 #ifndef FET_COMMAND_LINE
-extern QMutex mutex;
+extern QMutex fet_mutex;
 #else
-QMutex mutex;
+QMutex fet_mutex;
 #endif
 
 void writeDefaultSimulationParameters();
--- src/interface/timetablegenerateform.cpp.orig	2014-03-02 16:23:08.548355931 +0100
+++ src/interface/timetablegenerateform.cpp	2014-03-02 16:19:40.633349485 +0100
@@ -38,7 +38,7 @@
 
 #include "longtextmessagebox.h"
 
-QMutex mutex;
+QMutex fet_mutex;
 
 static GenerateThread generateThread;
 
@@ -189,11 +189,11 @@
 
 	simulation_running=false;
 
-	mutex.lock();
+	fet_mutex.lock();
 	gen.abortOptimization=true;
-	mutex.unlock();
+	fet_mutex.unlock();
 
-	mutex.lock();
+	fet_mutex.lock();
 
 	Solution& c=gen.c;
 
@@ -294,7 +294,7 @@
 		s+="\n";
 	}
 
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	//show the message in a dialog
 	QDialog dialog(this);
@@ -340,11 +340,11 @@
 
 	simulation_running=false;
 
-	mutex.lock();
+	fet_mutex.lock();
 	gen.abortOptimization=true;
-	mutex.unlock();
+	fet_mutex.unlock();
 
-	mutex.lock();
+	fet_mutex.lock();
 
 	Solution& c=highestStageSolution;
 
@@ -421,7 +421,7 @@
 
 	s+="\n";
 
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	//show the message in a dialog
 	QDialog dialog(this);
@@ -468,11 +468,11 @@
 
 	simulation_running=false;
 
-	mutex.lock();
+	fet_mutex.lock();
 	gen.abortOptimization=true;
-	mutex.unlock();
+	fet_mutex.unlock();
 
-	mutex.lock();
+	fet_mutex.lock();
 
 
 
@@ -542,7 +542,7 @@
 		s+="\n";
 	}
 
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	//show the message in a dialog
 	QDialog dialog(this);
@@ -661,11 +661,11 @@
 void TimetableGenerateForm::activityPlaced(int na){
 	assert(gt.rules.initialized && gt.rules.internalStructureComputed);
 
-	mutex.lock();
+	fet_mutex.lock();
 	int t=gen.searchTime; //seconds
 	int mact=maxActivitiesPlaced;
 	int seconds=gen.timeToHighestStage;
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	//write to the Qt interface
 	QString s;
@@ -756,7 +756,7 @@
 }
 
 void TimetableGenerateForm::write(){
-	mutex.lock();
+	fet_mutex.lock();
 
 	Solution& c=gen.c;
 
@@ -783,7 +783,7 @@
 
 	TimetableExport::writeSimulationResults(this);
 
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	QString kk;
 	kk=FILE_SEP;
@@ -803,7 +803,7 @@
 }
 
 void TimetableGenerateForm::writeHighestStage(){
-	mutex.lock();
+	fet_mutex.lock();
 
 	Solution& c=highestStageSolution;
 
@@ -830,7 +830,7 @@
 
 	TimetableExport::writeHighestStageResults(this);
 
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	QString kk;
 	kk=FILE_SEP;
@@ -859,7 +859,7 @@
 {
 	QString s;
 
-	mutex.lock();
+	fet_mutex.lock();
 
 	s+=TimetableGenerateForm::tr("Information relating difficult to schedule activities:");
 	s+="\n\n";
@@ -884,7 +884,7 @@
 		s+="\n";
 	}
 
-	mutex.unlock();
+	fet_mutex.unlock();
 	
 	//show the message in a dialog
 	QDialog dialog(this);
--- src/interface/timetablegeneratemultipleform.cpp.orig	2014-03-02 16:23:32.468317057 +0100
+++ src/interface/timetablegeneratemultipleform.cpp	2014-03-02 16:20:11.886252298 +0100
@@ -35,7 +35,7 @@
 
 #include <QDir>
 
-extern QMutex mutex;
+extern QMutex fet_mutex;
 
 static GenerateMultipleThread generateMultipleThread;
 
@@ -93,9 +93,9 @@
 		
 		bool ok;
 
-		mutex.lock();
+		fet_mutex.lock();
 		if(genMulti.abortOptimization){
-			mutex.unlock();
+			fet_mutex.unlock();
 			return;
 		}
 		else if(impossible){
@@ -163,7 +163,7 @@
 
 			s+=QString(".");
 		}
-		mutex.unlock();
+		fet_mutex.unlock();
 		
 		emit(timetableGenerated(i+1, s, ok));
 		semaphoreTimetableFinished.acquire();
@@ -369,9 +369,9 @@
 
 	simulation_running_multi=false;
 
-	mutex.lock();
+	fet_mutex.lock();
 	genMulti.abortOptimization=true;
-	mutex.unlock();
+	fet_mutex.unlock();
 
 	QString s=TimetableGenerateMultipleForm::tr("Simulation interrupted!");
 	s+="\n\n";
