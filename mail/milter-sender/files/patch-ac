--- milter-sender.sh.in.orig	Thu Aug 12 09:44:49 2004
+++ milter-sender.sh.in	Mon Aug 23 10:45:57 2004
@@ -88,35 +88,25 @@
 	rm -f $STATE_DIR/mutex
 
 	NAME=`basename "$PROGRAM"`
-        printf "Starting %s" $NAME
 
 	pid=`getpid "$PROGRAM"`
 	if [ X"$pid" != X ]; then
-		printf '\r\033[71C['${FG_RED}'FAILED'${FG_NORMAL}']\n'
+ 		echo " milter-sender:FAILED"
 		return
 	fi
 
 	# Make sure the old socket has been removed, especially for FreeBSD.
 	rm -f ${STATE_DIR}/socket
 	
-	# Start the program in the background from a sub-shell
-	# so that process will appear in the ps output immediately.
-	sh -c "$PROGRAM $OPTIONS &"
-
-	pid=`getpid "$PROGRAM"`
-	if [ X"$pid" = X ]; then
-		printf '\r\033[71C['${FG_RED}'FAILED'${FG_NORMAL}']\n'
-		return
-	fi
-
-	printf '\r\033[71C['${FG_GREEN}'  OK  '${FG_NORMAL}']\n'
+ 	cd $STATE_DIR && /usr/sbin/daemon -f $PROGRAM $OPTIONS &
+  
+ 	echo -n " milter-sender"
 }
 
 unalias stop
 stop()
 {
 	NAME=`basename "$PROGRAM"`
-        printf "Stopping %s" $NAME
 
 	pid=`getpid "$PROGRAM"`
 	if [ X"$pid" != X ]; then
@@ -133,7 +123,7 @@
 			
 			pid=`getpid "$PROGRAM"`
 			if [ X"$pid" != X ]; then					
-				printf '\r\033[71C['${FG_RED}'FAILED'${FG_NORMAL}']\n'
+				echo " milter-sender:FAILED"
 				return
 			fi
 			
@@ -152,7 +142,7 @@
 		fi
 	fi
 
-	printf '\r\033[71C['${FG_GREEN}'  OK  '${FG_NORMAL}']\n'
+	echo -n " milter-sender"
 }
 
 case "$1" in
@@ -183,9 +173,9 @@
 status)
 	pid=`getpid "$PROGRAM"`
 	if [ X"$pid" != X ]; then
-		printf '\r\033[72C['${FG_GREEN}${pid}${FG_NORMAL}']\n'
+		echo "milter-sender:${pid}"
 	else
-		printf '\r\033[70C['${FG_RED}'STOPPED'${FG_NORMAL}']\n'
+		echo "milter-sender:STOPPED"
 	fi
 	;;
 *)
