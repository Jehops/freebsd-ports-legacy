diff -c -N ../xfaces-3.3-org/Imakefile ./Imakefile
*** ../xfaces-3.3-org/Imakefile	Sun Mar 13 01:38:53 1994
--- ./Imakefile	Wed Dec 11 14:08:06 1996
***************
*** 53,58 ****
--- 53,60 ----
  #define USE_POP
  #define LOOKUP_HOSTNAME
  
+ #define IHaveSubdirs
+ SUBDIRS = images sounds
  #
  #  For debugging.
  #
***************
*** 65,71 ****
  #	-DLOOKUP_DEBUG
  #
  #CDEBUGFLAGS= -Wall -g 
! #CDEBUGFLAGS= -g
  
  #ifdef USE_XFACE
  XFACE_SRCS	= face_search_xface.c face_image_xface.c
--- 67,73 ----
  #	-DLOOKUP_DEBUG
  #
  #CDEBUGFLAGS= -Wall -g 
! CDEBUGFLAGS= -pipe -O2
  
  #ifdef USE_XFACE
  XFACE_SRCS	= face_search_xface.c face_image_xface.c
***************
*** 265,271 ****
  
  files:
  	@echo $(HDRS) $(SRCS) $(OTHER_FILES)
! 	
  clean::
  	rm -rf Distribution
  
--- 267,273 ----
  
  files:
  	@echo $(HDRS) $(SRCS) $(OTHER_FILES)
! 
  clean::
  	rm -rf Distribution
  
diff -c -N ../xfaces-3.3-org/Makefile ./Makefile
*** ../xfaces-3.3-org/Makefile	Sun Mar 13 01:38:33 1994
--- ./Makefile	Thu Jan  1 01:00:00 1970
***************
*** 1,590 ****
- # Makefile generated by imake - do not edit!
- # $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
- #
- # The cpp used on this machine replaces all newlines and multiple tabs and
- # spaces in a macro expansion with a single space.  Imake tries to compensate
- # for this, but is not always successful.
- #
- 
- # -------------------------------------------------------------------------
- # Makefile generated from "Imake.tmpl" and </tmp/IIf.a04025>
- # $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
- #
- # Platform-specific parameters may be set in the appropriate <vendor>.cf
- # configuration files.  Site-specific parameters should be set in the file
- # site.def.  Full rebuilds are recommended if any parameters are changed.
- #
- # If your C preprocessor does not define any unique symbols, you will need
- # to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
- # "make World" the first time).
- #
- 
- # -------------------------------------------------------------------------
- # site-specific configuration parameters that need to come before
- # the platform-specific parameters - edit site.def to change
- 
- # site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
- 
- # -------------------------------------------------------------------------
- # platform-specific configuration parameters - edit sun.cf to change
- 
- # platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $
- 
- # operating system:  SunOS 4.1.1
- 
- # $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $
- 
- .c.o:
- 	$(CC) -c $(CFLAGS) $*.c
- 
- # -------------------------------------------------------------------------
- # site-specific configuration parameters that go after
- # the platform-specific parameters - edit site.def to change
- 
- # site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
- 
-             SHELL = /bin/sh
- 
-               TOP = .
-       CURRENT_DIR = .
- 
-                AR = ar clq
-   BOOTSTRAPCFLAGS =
-                CC = gcc -fstrength-reduce -fpcc-struct-return
-                AS = as
- 
-          COMPRESS = compress
-               CPP = /lib/cpp $(STD_CPP_DEFINES)
-     PREPROCESSCMD = gcc -fstrength-reduce -fpcc-struct-return -E $(STD_CPP_DEFINES)
-           INSTALL = install
-                LD = ld
-              LINT = lint
-       LINTLIBFLAG = -C
-          LINTOPTS = -axz
-                LN = ln -s
-              MAKE = make
-                MV = mv
-                CP = cp
- 
-            RANLIB = ranlib
-   RANLIBINSTFLAGS =
- 
-                RM = rm -f
-             TROFF = psroff
-          MSMACROS = -ms
-               TBL = tbl
-               EQN = eqn
-      STD_INCLUDES =
-   STD_CPP_DEFINES =
-       STD_DEFINES =
-  EXTRA_LOAD_FLAGS = -B/usr/bin/
-   EXTRA_LIBRARIES =
-              TAGS = ctags
- 
-     SHAREDCODEDEF = -DSHAREDCODE
-          SHLIBDEF = -DSUNSHLIB
- 
-     PROTO_DEFINES =
- 
-      INSTPGMFLAGS =
- 
-      INSTBINFLAGS = -m 0755
-      INSTUIDFLAGS = -m 4755
-      INSTLIBFLAGS = -m 0644
-      INSTINCFLAGS = -m 0444
-      INSTMANFLAGS = -m 0444
-      INSTDATFLAGS = -m 0444
-     INSTKMEMFLAGS = -g kmem -m 2755
- 
-       PROJECTROOT = /usr/X11R5
- 
-      TOP_INCLUDES = -I$(INCROOT)
- 
-       CDEBUGFLAGS = -O
-         CCOPTIONS =
- 
-       ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
-        ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
-            CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
-         LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
- 
-            LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
- 
-         LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)
- 
-    LDCOMBINEFLAGS = -X -r
-       DEPENDFLAGS =
- 
-         MACROFILE = sun.cf
-            RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
- 
-     IMAKE_DEFINES =
- 
-          IRULESRC = $(CONFIGDIR)
-         IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
- 
-      ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
- 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
- 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
- 
- # -------------------------------------------------------------------------
- # X Window System Build Parameters
- # $XConsortium: Project.tmpl,v 1.138.1.1 92/11/11 09:49:19 rws Exp $
- 
- # -------------------------------------------------------------------------
- # X Window System make variables; this need to be coordinated with rules
- 
-           PATHSEP = /
-         USRLIBDIR = /usr/X11R5/lib
-            BINDIR = /usr/X11R5/bin
-           INCROOT = /usr/X11R5/include
-      BUILDINCROOT = $(TOP)
-       BUILDINCDIR = $(BUILDINCROOT)/X11
-       BUILDINCTOP = ..
-            INCDIR = $(INCROOT)/X11
-            ADMDIR = /usr/adm
-            LIBDIR = $(USRLIBDIR)/X11
-         CONFIGDIR = $(LIBDIR)/config
-        LINTLIBDIR = $(USRLIBDIR)/lint
- 
-           FONTDIR = $(LIBDIR)/fonts
-          XINITDIR = $(LIBDIR)/xinit
-            XDMDIR = $(LIBDIR)/xdm
-            TWMDIR = $(LIBDIR)/twm
-           MANPATH = /usr/X11R5/man
-     MANSOURCEPATH = $(MANPATH)/man
-         MANSUFFIX = n
-      LIBMANSUFFIX = 3
-            MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
-         LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
-            NLSDIR = $(LIBDIR)/nls
-         PEXAPIDIR = $(LIBDIR)/PEX
-       XAPPLOADDIR = $(LIBDIR)/app-defaults
-        FONTCFLAGS = -t
- 
-      INSTAPPFLAGS = $(INSTDATFLAGS)
- 
-             IMAKE = imake
-            DEPEND = makedepend
-               RGB = rgb
- 
-             FONTC = bdftopcf
- 
-         MKFONTDIR = mkfontdir
-         MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier
- 
-         CONFIGSRC = $(TOP)/config
-        DOCUTILSRC = $(TOP)/doc/util
-         CLIENTSRC = $(TOP)/clients
-           DEMOSRC = $(TOP)/demos
-            LIBSRC = $(TOP)/lib
-           FONTSRC = $(TOP)/fonts
-        INCLUDESRC = $(TOP)/X11
-         SERVERSRC = $(TOP)/server
-           UTILSRC = $(TOP)/util
-         SCRIPTSRC = $(UTILSRC)/scripts
-        EXAMPLESRC = $(TOP)/examples
-        CONTRIBSRC = $(TOP)/../contrib
-            DOCSRC = $(TOP)/doc
-            RGBSRC = $(TOP)/rgb
-         DEPENDSRC = $(UTILSRC)/makedepend
-          IMAKESRC = $(CONFIGSRC)
-          XAUTHSRC = $(LIBSRC)/Xau
-           XLIBSRC = $(LIBSRC)/X
-            XMUSRC = $(LIBSRC)/Xmu
-        TOOLKITSRC = $(LIBSRC)/Xt
-        AWIDGETSRC = $(LIBSRC)/Xaw
-        OLDXLIBSRC = $(LIBSRC)/oldX
-       XDMCPLIBSRC = $(LIBSRC)/Xdmcp
-       BDFTOSNFSRC = $(FONTSRC)/bdftosnf
-       BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
-       BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
-      MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
-          FSLIBSRC = $(FONTSRC)/lib/fs
-     FONTSERVERSRC = $(FONTSRC)/server
-      EXTENSIONSRC = $(TOP)/extensions
-          XILIBSRC = $(EXTENSIONSRC)/lib/xinput
-         PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
-       PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
- 
- # $XConsortium: sunLib.tmpl,v 1.14.1.2 92/11/11 09:55:02 rws Exp $
- 
- SHLIBLDFLAGS = -assert pure-text
- PICFLAGS = -pic
- 
-   DEPEXTENSIONLIB =
-      EXTENSIONLIB = -lXext
- 
-           DEPXLIB = $(DEPEXTENSIONLIB)
-              XLIB = $(EXTENSIONLIB) -lX11
- 
-         DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
-        XMULIBONLY = -lXmu
-            XMULIB = -lXmu
- 
-        DEPOLDXLIB =
-           OLDXLIB = -loldX
- 
-       DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
-          XTOOLLIB = -lXt
- 
-         DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
-            XAWLIB = -lXaw
- 
-         DEPXILIB =
-            XILIB = -lXi
- 
-         DEPPEXLIB =
-            PEXLIB = -lPEX5
- 
-         SOXLIBREV = 4.10
-           SOXTREV = 4.10
-          SOXAWREV = 5.0
-         SOOLDXREV = 4.10
-          SOXMUREV = 4.10
-         SOXEXTREV = 4.10
-       SOXINPUTREV = 4.10
-          SOPEXREV = 1.0
- 
-       DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
-          XAUTHLIB =  -lXau
-       DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
-          XDMCPLIB =  -lXdmcp
- 
-         DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
-            PHIGSLIB =  -lphigs
- 
-        DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
-           XBSDLIB =  -lXbsd
- 
-  LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
-          LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
-           LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
-         LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
-           LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
-            LINTXI = $(LINTLIBDIR)/llib-lXi.ln
-           LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln
-         LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln
- 
-           DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
- 
-          DEPLIBS1 = $(DEPLIBS)
-          DEPLIBS2 = $(DEPLIBS)
-          DEPLIBS3 = $(DEPLIBS)
- 
- # -------------------------------------------------------------------------
- # Imake rules for building libraries, programs, scripts, and data files
- # rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
- 
- # -------------------------------------------------------------------------
- # start of Imakefile
- 
- #
- #		 Copyright 1994 Christopher B. Liebman
- #
- #     Permission to use, copy, modify, distribute, and sell this software
- #     and its documentation for any purpose is hereby granted without fee,
- #     provided that the above copyright notice appear in all copies and that
- #     both that copyright notice and this permission notice appear in
- #     supporting documentation, and that the name Christopher B. Liebman not
- #     be used in advertising or publicity pertaining to distribution of this
- #     software without specific, written prior permission.
- #
- #    THIS SOFTWARE IS PROVIDED `AS-IS'.  CHRISTOPHER B. LIEBMAN, DISCLAIMS
- #    ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING WITHOUT
- #    LIMITATION ALL IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
- #    PARTICULAR PURPOSE, OR NONINFRINGEMENT.  IN 0 EVENT SHALL CHRISTOPHER
- #    B. LIEBMAN, BE LIABLE FOR ANY DAMAGES WHATSOEVER, INCLUDING SPECIAL,
- #    INCIDENTAL OR CONSEQUENTIAL DAMAGES, INCLUDING LOSS OF USE, DATA, OR
- #    PROFITS, EVEN IF ADVISED OF THE POSSIBILITY THEREOF, AND REGARDLESS OF
- #    WHETHER IN AN ACTION IN CONTRACT, TORT OR NEGLIGENCE, ARISING OUT OF
- #    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
- #
- #
- # $Id: Imakefile,v 1.41 1994/03/08 02:40:38 liebman Exp $
- #
- #    Makefile for XFaces.
- #
- 
- #
- #  For debugging.
- #
- #	-DBINDING_DEBUG
- #	-DFACEDB_DEBUG
- #	-DPOP_DEBUG
- #	-DRESOURCE_DEBUG
- #	-DSEARCH_DEBUG
- #	-DITEM_DEBUG
- #	-DLOOKUP_DEBUG
- #
- #CDEBUGFLAGS= -Wall -g
- #CDEBUGFLAGS= -g
- 
- XFACE_SRCS	= face_search_xface.c face_image_xface.c
- XFACE_OBJS	= face_search_xface.o face_image_xface.o
- XFACE_DEFS	= -DXFACE
- #XFACE_LIBS	= -L../compface -lcompface
- XFACE_LIBS	= -L/usr/local/lib -lcompface
- 
- XPM_SRCS	= face_image_xpm.c
- XPM_OBJS	= face_image_xpm.o
- XPM_INCL	=
- #XPL_INCL	= -I/usr/xpm/include
- XPM_LIBS	= -lXpm
- #XPM_LIBS	= -L/usr/xpm/lib -lXpm
- XPM_DEFS	= -DXPM
- 
- SOUND_SRCS	= face_sound.c
- SOUND_OBJS	= face_sound.o
- SOUND_INCL	=
- #SOUND_INCL	= -I/usr/audio/include
- SOUND_LIBS	= -laudio
- #SOUND_LIBS	= -L/usr/audio/lib -laudio
- 
- SOUND_DEFS	= -DSOUND -DUSE_BUCKETS
- 
- SHAPE_SRCS	= face_shape.c
- SHAPE_OBJS	= face_shape.o
- SHAPE_INCL	=
- SHAPE_LIBS	=
- SHAPE_DEFS	= -DSHAPE
- 
- POP_SRCS	= pop_check.c
- POP_OBJS	= pop_check.o
- POP_INCL	=
- POP_LIBS	=
- POP_DEFS	= -DPOP
- 
- LHN_SRCS	=
- LHN_OBJS	=
- LHN_INCL	=
- LHN_LIBS	=
- LHN_DEFS	= -DLOOKUP_HOSTNAME
- 
- XFACES_VERSION_TAG=
- 
- HDRS	= Tiled.h \
- 	  TiledP.h \
- 	  faces.h \
- 	  face_command.h \
- 	  face_image.h \
- 	  face_search.h \
- 	  face_sound.h \
- 	  patchlevel.h \
- 	  regexp.h \
- 	  regmagic.h \
- 	  $(XFACE_HDRS)
- 
- SRCS	= Tiled.c \
- 	  cmd_check.c \
- 	  face_actions.c \
- 	  face_annotate.c \
- 	  face_binding.c \
- 	  face_command.c \
- 	  face_display.c \
- 	  face_image.c \
- 	  face_image_xbm.c \
- 	  face_search.c \
- 	  face_search_binding.c \
- 	  face_search_facedb.c \
- 	  face_search_resource.c \
- 	  face_search_uh.c \
- 	  mail_box.c \
- 	  mail_body.c \
- 	  mail_check.c  \
- 	  mail_file.c \
- 	  mail_header.c \
- 	  mail_items.c  \
- 	  mail_parse.c \
- 	  main.c \
- 	  path.c \
- 	  regexp.c \
- 	  regsub.c \
- 	  string.c \
- 	  $(SOUND_SRCS) $(XPM_SRCS) $(SHAPE_SRCS) $(XFACE_SRCS) $(POP_SRCS) \
- 	  $(LHN_OBJS)
- 
- OBJS	= Tiled.o \
- 	  cmd_check.o \
- 	  face_actions.o \
- 	  face_annotate.o \
- 	  face_binding.o \
- 	  face_command.o \
- 	  face_display.o \
- 	  face_image.o \
- 	  face_image_xbm.o \
- 	  face_search.o \
- 	  face_search_binding.o \
- 	  face_search_facedb.o \
- 	  face_search_resource.o \
- 	  face_search_uh.o \
- 	  mail_box.o \
- 	  mail_body.o \
- 	  mail_check.o  \
- 	  mail_file.o \
- 	  mail_header.o \
- 	  mail_items.o  \
- 	  mail_parse.o \
- 	  main.o \
- 	  path.o \
- 	  regexp.o \
- 	  regsub.o \
- 	  string.o \
- 	  $(SOUND_OBJS) $(XPM_OBJS) $(SHAPE_OBJS) $(XFACE_OBJS) $(POP_OBJS) \
- 	  $(LHN_OBJS)
- 
- OTHER_FILES	= BLURB README CHANGES CREDITS TODO COPYRIGHT ChangeLog \
- 		  Imakefile XFaces.ad xfaces.man ausun.patch \
- 		  Makefile.noimake
- IMAGEDIR	= images
- 
- INCLUDES	= $(TOP_INCLUDES) $(SOUND_INCL) \
- 		  $(XPM_INCL) $(SHAPE_INCL) $(POP_INCL) $(LHN_INCL)
- SYS_LIBRARIES	= $(SOUND_LIBS) -lm
- #
- #
- # You will need to add -lnsl and -lsocket on some Solaris2 systems using
- # openwindows. You may even need to add a -L/usr/openwin/lib before
- # the $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB) also.
- #
- LOCAL_LIBRARIES = $(XPM_LIBS) $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB) $(XFACE_LIBS) $(POP_LIBS) \
- 		  $(LHN_LIBS)
- DEFINES		= $(SOUND_DEFS) $(XPM_DEFS) $(SHAPE_DEFS) \
- 		  $(XFACE_DEFS) $(POP_DEFS) $(LHN_DEFS)
- 
-  PROGRAM = xfaces
- 
- all:: xfaces
- 
- xfaces: $(OBJS) $(DEPLIBS)
- 	$(RM) $@
- 	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)
- 
- saber_xfaces:: $(SRCS)
- 	# load $(ALLDEFINES) $(SRCS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
- 
- osaber_xfaces:: $(OBJS)
- 	# load $(ALLDEFINES) $(OBJS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
- 
- install:: xfaces
- 	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
- 	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
- 	$(INSTALL) -c $(INSTPGMFLAGS)  xfaces $(DESTDIR)$(BINDIR)
- 
- install.man:: xfaces.man
- 	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
- 	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
- 	$(INSTALL) -c $(INSTMANFLAGS) xfaces.man $(DESTDIR)$(MANDIR)/xfaces.$(MANSUFFIX)
- 
- depend::
- 	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)
- 
- lint:
- 	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
- lint1:
- 	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)
- 
- clean::
- 	$(RM) $(PROGRAM)
- 
- install:: XFaces.ad
- 	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
- 	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
- 	$(INSTALL) -c $(INSTAPPFLAGS) XFaces.ad $(DESTDIR)$(XAPPLOADDIR)/XFaces
- 
- install.man:: xfaces.man
- 	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
- 	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
- 	$(INSTALL) -c $(INSTMANFLAGS) xfaces.man $(DESTDIR)$(MANDIR)/xfaces.$(MANSUFFIX)
- 
- #
- # A bit of a hack to make life easier.
- #
- 
- distribution:
- 	(set -x;THIS_PLACE=`pwd`; \
- 	export THIS_PLACE; \
- 	if [ -z "$(XFACES_VERSION)" ]; then \
- 	    XFV=`grep XFACES_VERSION patchlevel.h|awk '{print $$3}'`; \
- 	else \
- 	    XFV=$(XFACES_VERSION);\
- 	fi; \
- 	XFT=XFACES_`echo $$XFV | sed 's/\./_/'`; \
- 	export XFT; \
- 	mkdir -p Distribution/xfaces-$$XFV; \
- 	cd Distribution/xfaces-$$XFV; \
- 	ln -s $$THIS_PLACE/RCS; \
- 	co -r$$XFT Imakefile; \
- 	xmkmf; \
- 	make XFACES_VERSION_TAG=$$XFT current; \
- 	rm RCS; \
- 	mkdir -p $(IMAGEDIR); \
- 	(cd $(IMAGEDIR); \
- 	ln -s $$THIS_PLACE/$(IMAGEDIR)/RCS; \
- 	co -r$$XFT Imakefile; \
- 	xmkmf; \
- 	make XFACES_VERSION_TAG=$$XFT current; \
- 	rm -f Makefile Makefile.bak Imakefile RCS); \
- 	cd ..; \
- 	tar cvf xfaces-$$XFV.tar xfaces-$$XFV; \
- 	compress xfaces-$$XFV.tar)
- 
- current:
- 	co -r$(XFACES_VERSION_TAG) $(HDRS) $(SRCS) $(OTHER_FILES)
- 
- tag:
- 	if [ ! -z "$(XFACES_VERSION_TAG)" ]; then \
- 	    for i in $(HDRS) $(SRCS) $(OTHER_FILES);do \
- 		head=`rlog -h $$i | grep '^head' | awk '{print $$2}'`; \
- 		rcs -N$(XFACES_VERSION_TAG):$$head $$i; \
- 	    done; \
- 	    (cd $(IMAGEDIR); \
- 	    make XFACES_VERSION_TAG=$(XFACES_VERSION_TAG) tag); \
- 	fi
- 
- files:
- 	@echo $(HDRS) $(SRCS) $(OTHER_FILES)
- 
- clean::
- 	rm -rf Distribution
- 
- # -------------------------------------------------------------------------
- # common rules for all Makefiles - do not edit
- 
- emptyrule::
- 
- clean::
- 	$(RM_CMD) "#"*
- 
- Makefile::
- 	-@if [ -f Makefile ]; then set -x; \
- 	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
- 	else exit 0; fi
- 	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
- 
- tags::
- 	$(TAGS) -w *.[ch]
- 	$(TAGS) -xw *.[ch] > TAGS
- 
- saber:
- 	# load $(ALLDEFINES) $(SRCS)
- 
- osaber:
- 	# load $(ALLDEFINES) $(OBJS)
- 
- # -------------------------------------------------------------------------
- # empty rules for directories that do not have SUBDIRS - do not edit
- 
- install::
- 	@echo "install in $(CURRENT_DIR) done"
- 
- install.man::
- 	@echo "install.man in $(CURRENT_DIR) done"
- 
- Makefiles::
- 
- includes::
- 
- # -------------------------------------------------------------------------
- # dependencies generated by makedepend
- 
--- 0 ----
diff -c -N ../xfaces-3.3-org/XFaces.ad ./XFaces.ad
*** ../xfaces-3.3-org/XFaces.ad	Sun Mar 13 01:38:54 1994
--- ./XFaces.ad	Wed Dec 11 14:22:15 1996
***************
*** 71,78 ****
  ! lists.
  !
  
! XFaces.soundPath:	/usr/sounds:/usr/demo/SOUND/sounds
! XFaces.imagePath:	/usr/images
  
  !
  !  This is where we look for sounds/images in the "faces" format.
--- 71,78 ----
  ! lists.
  !
  
! XFaces.soundPath:	/usr/local/share/sounds
! XFaces.imagePath:	/usr/X11R6/include/X11/pixmaps
  
  !
  !  This is where we look for sounds/images in the "faces" format.
***************
*** 100,106 ****
  ! image types are set in the imageTypes resource.
  !
  
! XFaces.facedbPath:	/usr/faces
  
  !
  !  Tell how many different annotations there are. We can support any number.
--- 100,106 ----
  ! image types are set in the imageTypes resource.
  !
  
! XFaces.facedbPath:	/usr/local/share/faces
  
  !
  !  Tell how many different annotations there are. We can support any number.
***************
*** 244,250 ****
  !
  
  weather.listCommand:	wx.faces wbc
! weather.facedbPath:	/usr/faces/weather
  weather.compressImages:	False
  weather.keepOrder:	True
  weather.shapeExtra:	False
--- 244,250 ----
  !
  
  weather.listCommand:	wx.faces wbc
! weather.facedbPath:	/usr/local/share/faces/weather
  weather.compressImages:	False
  weather.keepOrder:	True
  weather.shapeExtra:	False
***************
*** 337,358 ****
  ! Could setup special sounds for mailing lists.
  !
  
! !XFaces.beforeSoundBindings:	\
! !	Cc:	foo:		train
  
  !
  ! Could use this to show a special face for users that we have no face for.
  !
  
! !XFaces.afterImageBindings:	\
! !	*	.*:		unknown
  
  !
  ! Could setup default sounds if no sound is specified.
  !
  
! !XFaces.afterSoundBindings:	\
! !	*	.*:			train
  
  !
  ! This set of bindings is run after the all of the image search has 
--- 337,358 ----
  ! Could setup special sounds for mailing lists.
  !
  
! |Faces.beforeSoundBindings:	\
! |	Cc:	foo:		train
  
  !
  ! Could use this to show a special face for users that we have no face for.
  !
  
! XFaces.afterImageBindings:	\
! 	*	.*:		unknown
  
  !
  ! Could setup default sounds if no sound is specified.
  !
  
! XFaces.afterSoundBindings:	\
! 	*	.*:			train
  
  !
  ! This set of bindings is run after the all of the image search has 
***************
*** 382,387 ****
  !  Mail from root.
  !
  
! XFaces.image.root:		root
  XFaces.sound.root:		busy
- 
--- 382,386 ----
  !  Mail from root.
  !
  
! XFaces.image.root		root
  XFaces.sound.root:		busy
diff -c -N ../xfaces-3.3-org/face_image.c ./face_image.c
*** ../xfaces-3.3-org/face_image.c	Sun Mar 13 01:38:40 1994
--- ./face_image.c	Wed Dec 11 09:22:28 1996
***************
*** 204,218 ****
      int			length;
      static char*	filename = NULL;
      static int		filename_length = 0;
!     
      /*
       *    First see if we already have this image.
      */
      
      for (fi = TheImages; fi != NULL; fi = fi->next)
      {
  	if (strcmp(fi->file, file) == 0)
  	{
  	    /*
  	     * Yep!
  	    */
--- 204,225 ----
      int			length;
      static char*	filename = NULL;
      static int		filename_length = 0;
! 
!     char                my_label[512];
      /*
       *    First see if we already have this image.
      */
+ 
      
      for (fi = TheImages; fi != NULL; fi = fi->next)
      {
  	if (strcmp(fi->file, file) == 0)
  	{
+ 	  if (info && info->item) {
+ 	    sprintf(my_label, "%s@%s", info->item->user, info->item->host);
+ 	    if (strcmp(fi->label, my_label))
+ 	      break;
+ 	  }
  	    /*
  	     * Yep!
  	    */
***************
*** 290,296 ****
      /*
       *   Ok, create a face image struct.
      */
-     
      fi = FaceImageCreate(file, info->type, image_data);
      
      info->item->image = fi;
--- 297,302 ----
***************
*** 367,372 ****
--- 373,383 ----
  	    break;
  	}
      }
+ 
+ #ifdef FACEDB_DEBUG
+     if (found) 
+       fprintf(stderr, "FaceImageLoad: Reporting %s as found\n", file);
+ #endif
      
      return found;
  }
diff -c -N ../xfaces-3.3-org/face_search_facedb.c ./face_search_facedb.c
*** ../xfaces-3.3-org/face_search_facedb.c	Sun Mar 13 01:38:42 1994
--- ./face_search_facedb.c	Tue Dec 10 10:41:23 1996
***************
*** 483,488 ****
--- 483,492 ----
      int			parts;
      char*		username;
      FacedbMap*		map;
+ 
+ #ifdef FACEDB_DEBUG
+     fprintf(stderr, "facedb: searching in path %s\n", path);
+ #endif
      
      if (buffer1 == NULL)
      {
***************
*** 535,541 ****
  	*/
  	
  	FaceSearchFacedbMakeName(file, info, i, buffer1);
! 	
  	/*
  	 * Try to load this guy.
  	*/
--- 539,545 ----
  	*/
  	
  	FaceSearchFacedbMakeName(file, info, i, buffer1);
! #ifndef FACE_FILES_ONLY
  	/*
  	 * Try to load this guy.
  	*/
***************
*** 550,556 ****
  	    XtFree(hostdata);
  	    return 1;
  	}
! 	
  	/*
  	 *  try adding "/face" and see what we find.
  	*/
--- 554,560 ----
  	    XtFree(hostdata);
  	    return 1;
  	}
! #endif
  	/*
  	 *  try adding "/face" and see what we find.
  	*/
***************
*** 570,598 ****
  	    return 1;
  	}
  	
- #if 0
- 	/*
- 	 *  Finally if we are looking for an image try "/48x48x1".
- 	*/
- 	
- 	if (info->data->format == FormatImage)
- 	{
- 	    strcpy(tail, "/48x48x1");
- 	    
- 	    if (FaceSearchLoad(buffer1, info->item, info->data))
- 	    {
- 		XtFree((char*) host);
- 		XtFree(hostdata);
- 		return 1;
- 	    }
- 	}
- #endif
      }
      
      /*
       *   try for user in the MISC directory.
      */
!     
      sprintf(buffer1, "%sMISC/%s", file, username);
      
  #ifdef FACEDB_DEBUG
--- 574,585 ----
  	    return 1;
  	}
  	
      }
      
      /*
       *   try for user in the MISC directory.
      */
! #ifndef FACE_FILES_ONLY
      sprintf(buffer1, "%sMISC/%s", file, username);
      
  #ifdef FACEDB_DEBUG
***************
*** 605,611 ****
  	XtFree(hostdata);
  	return 1;
      }
!     
      sprintf(buffer1, "%sMISC/%s/face", file, username);
      
  #ifdef FACEDB_DEBUG
--- 592,598 ----
  	XtFree(hostdata);
  	return 1;
      }
! #endif
      sprintf(buffer1, "%sMISC/%s/face", file, username);
      
  #ifdef FACEDB_DEBUG
***************
*** 632,638 ****
  	*/
  	
  	FaceSearchFacedbMakeName(file, info, i, buffer1);
! 	
  	/*
  	 * Try to load this guy.
  	*/
--- 619,625 ----
  	*/
  	
  	FaceSearchFacedbMakeName(file, info, i, buffer1);
! #ifndef FACE_FILES_ONLY
  	/*
  	 * Try to load this guy.
  	*/
***************
*** 653,659 ****
  	    
  	    return 1;
  	}
! 	
  	/*
  	 *  try adding "/face" and see what we find.
  	*/
--- 640,646 ----
  	    
  	    return 1;
  	}
! #endif
  	/*
  	 *  try adding "/face" and see what we find.
  	*/
***************
*** 679,701 ****
  	    return 1;
  	}
  	
- #if 0
- 	/*
- 	 *  Finally if we are looking for an image try "/48x48x1".
- 	*/
- 	
- 	if (info->data->format == FormatImage)
- 	{
- 	    strcpy(tail, "/48x48x1");
- 	    
- 	    if (FaceSearchLoad(buffer1, info->item, info->data))
- 	    {
- 		XtFree((char*) host);
- 		XtFree(hostdata);
- 		return 1;
- 	    }
- 	}
- #endif
      }
      
      XtFree((char*) host);
--- 666,671 ----
***************
*** 704,710 ****
      /*
       *   One last try.  The MISC directory. Look for "unknown"
      */
!     
      sprintf(buffer1, "%sMISC/unknown", file);
      
  #ifdef FACEDB_DEBUG
--- 674,680 ----
      /*
       *   One last try.  The MISC directory. Look for "unknown"
      */
! #ifndef FACE_FILES_ONLY
      sprintf(buffer1, "%sMISC/unknown", file);
      
  #ifdef FACEDB_DEBUG
***************
*** 721,727 ****
  	
  	return 1;
      }
!     
      sprintf(buffer1, "%sMISC/unknown/face", file);
      
  #ifdef FACEDB_DEBUG
--- 691,697 ----
  	
  	return 1;
      }
! #endif
      sprintf(buffer1, "%sMISC/unknown/face", file);
      
  #ifdef FACEDB_DEBUG
Common subdirectories: ../xfaces-3.3-org/images and ./images
diff -c -N ../xfaces-3.3-org/mail_items.c ./mail_items.c
*** ../xfaces-3.3-org/mail_items.c	Sun Mar 13 01:38:44 1994
--- ./mail_items.c	Tue Dec 10 10:25:32 1996
***************
*** 351,359 ****
  MailBoxClean()
  {
      MailItem *item;
!     
!     for (item = TheMailItems; item != NULL; item = item->next)
      {
  	if (item->in_use == 0)
  	{
  	    MailItemFree(item);
--- 351,368 ----
  MailBoxClean()
  {
      MailItem *item;
!     MailItem *next_item;
!    
!     for (item = TheMailItems; item != NULL; item = next_item)
      {
+ 	/*
+ 	 * Save item->next here because if MailItemFree() is called, it will
+ 	 * free item and we won't be able to access it after the call.
+ 	 * Found by phkmalloc. Philippe Charnier (charnier@xp11.frmug.org)
+ 	 * 11/96.
+ 	 */
+ 	next_item = item->next;
+ 
  	if (item->in_use == 0)
  	{
  	    MailItemFree(item);
***************
*** 651,656 ****
--- 660,666 ----
      {
  	item->prev = TheMailItemsTail;
  	item->prev->next = item;
+ 	TheMailItemsTail = item;
      }
      
      item->face = FaceDisplay(item);
diff -c -N ../xfaces-3.3-org/main.c ./main.c
*** ../xfaces-3.3-org/main.c	Sun Mar 13 01:38:45 1994
--- ./main.c	Wed Dec 11 14:23:05 1996
***************
*** 124,130 ****
      },
      {
  	"spoolDir", "SpoolDir", XtRString, sizeof(String),
! 	offset(spool_dir), XtRString, "/usr/spool/mail"
      },
      {
  	"popHost", "PopHost", XtRString, sizeof(String),
--- 124,130 ----
      },
      {
  	"spoolDir", "SpoolDir", XtRString, sizeof(String),
! 	offset(spool_dir), XtRString, "/var/mail/"
      },
      {
  	"popHost", "PopHost", XtRString, sizeof(String),
***************
*** 144,158 ****
      },
      {
  	"imagePath", "Path", XtRString, sizeof(String),
! 	offset(image_path), XtRString, "/usr/images"
      },
      {
  	"soundPath", "Path", XtRString, sizeof(String),
! 	offset(sound_path), XtRString, "/usr/sounds"
      },
      {
  	"facedbPath", "Path", XtRString, sizeof(String),
! 	offset(facedb_path), XtRString, "/usr/local/faces"
      },
      {
  	"machine", "Path", XtRString, sizeof(String),
--- 144,158 ----
      },
      {
  	"imagePath", "Path", XtRString, sizeof(String),
! 	offset(image_path), XtRString, "/usr/X11R6/include/X11/pixmaps"
      },
      {
  	"soundPath", "Path", XtRString, sizeof(String),
! 	offset(sound_path), XtRString, "/usr/local/share/sounds"
      },
      {
  	"facedbPath", "Path", XtRString, sizeof(String),
! 	offset(facedb_path), XtRString, "/usr/local/share/faces"
      },
      {
  	"machine", "Path", XtRString, sizeof(String),
***************
*** 297,303 ****
  static XrmOptionDescRec options[] =
  {
      {
! 	"-c", "frame.setWidth", XrmoptionSepArg, NULL
      },
      {
  	"-e", "listCommand", XrmoptionSepArg, NULL
--- 297,303 ----
  static XrmOptionDescRec options[] =
  {
      {
! 	"-c", "frame.maxWidth", XrmoptionSepArg, NULL
      },
      {
  	"-e", "listCommand", XrmoptionSepArg, NULL
Common subdirectories: ../xfaces-3.3-org/sounds and ./sounds
diff -c -N ../xfaces-3.3-org/xfaces.man ./xfaces.man
*** ../xfaces-3.3-org/xfaces.man	Sun Mar 13 01:38:54 1994
--- ./xfaces.man	Wed Dec 11 16:20:47 1996
***************
*** 171,177 ****
  .TP 8
  .BI XFaces.spoolDir: " <mail spool directory>"
  This resource specifies the directory that contains user mail spool
! files.  The default is \fI/usr/spool/mail\fP.  On some machines (SVR4?)
  you may want to set this to \fI/usr/mail\fP.
  .TP 8
  .BI XFaces.popHost: " <hostname>"
--- 171,177 ----
  .TP 8
  .BI XFaces.spoolDir: " <mail spool directory>"
  This resource specifies the directory that contains user mail spool
! files.  The default is \fI/var/mail\fP.  On some machines (SVR4?)
  you may want to set this to \fI/usr/mail\fP.
  .TP 8
  .BI XFaces.popHost: " <hostname>"
***************
*** 198,209 ****
  .BI XFaces.imagePath: " <image path>"
  This resource specifies a colon-separated list of directories that
  specify the default directories to use for image files.  The default
! is \fI/usr/images\fP.
  .TP 8
  .BI XFaces.soundPath: " <sound path>"
  This resource specifies a colon-separated list of directories that
  specify the default directories to use for sound files.  The default
! is \fI/usr/sounds\fP.
  .TP 8
  .BI XFaces.facedbPath: " <facedb path>"
  This is a list of directories that contain a multi-level directory hierarchy.
--- 198,209 ----
  .BI XFaces.imagePath: " <image path>"
  This resource specifies a colon-separated list of directories that
  specify the default directories to use for image files.  The default
! is \fI/usr/X11/include/X11/pixmaps\fP.
  .TP 8
  .BI XFaces.soundPath: " <sound path>"
  This resource specifies a colon-separated list of directories that
  specify the default directories to use for sound files.  The default
! is \fI/usr/local/share/sounds\fP.
  .TP 8
  .BI XFaces.facedbPath: " <facedb path>"
  This is a list of directories that contain a multi-level directory hierarchy.
***************
*** 289,295 ****
  no image.  This defaults to \fITrue\fP.
  .TP 8
  .BI XFaces.useCommands: " <flag>"
! This resource tells \FIXFaces\fP if it needs to search for shell commands to
  run in addition to image and sounds.  The default is \fIFalse\fP.
  .TP 8
  .BI XFaces.useContentLength: " <flag>"
--- 289,295 ----
  no image.  This defaults to \fITrue\fP.
  .TP 8
  .BI XFaces.useCommands: " <flag>"
! This resource tells \fIXFaces\fP if it needs to search for shell commands to
  run in addition to image and sounds.  The default is \fIFalse\fP.
  .TP 8
  .BI XFaces.useContentLength: " <flag>"
***************
*** 318,324 ****
  .TP 8
  .B xpm-shaped
  This is a shaped color image.  Shaped xpm files should be named
! \fIface-shaped.xpm\fP.
  .TP 8
  .B xpm
  This is a non shaped color image. These files should be named
--- 318,324 ----
  .TP 8
  .B xpm-shaped
  This is a shaped color image.  Shaped xpm files should be named
! \fIface-shape.xpm\fP.
  .TP 8
  .B xpm
  This is a non shaped color image. These files should be named
***************
*** 357,363 ****
  The \fI<format list>\fP is currently ignored for the \fBsoundSearch\fP
  resource. Both the \fI<format list>\fP and the <search path> are 
  (except if you use the \fIfacedb\fP search) for the \fBcommandSearch\fP
! resoiurce.  If the \fI<format list>\fP is empty then the list in the
  \fBimageFormats\fP resource is used.  If the \fI<search path>\fP is
  empty then the \fBfacedbPath\fP is used for \fIfacedb\fP searches for
  both sounds and images and one of the \fBsoundPath\fP or
--- 357,363 ----
  The \fI<format list>\fP is currently ignored for the \fBsoundSearch\fP
  resource. Both the \fI<format list>\fP and the <search path> are 
  (except if you use the \fIfacedb\fP search) for the \fBcommandSearch\fP
! resource.  If the \fI<format list>\fP is empty then the list in the
  \fBimageFormats\fP resource is used.  If the \fI<search path>\fP is
  empty then the \fBfacedbPath\fP is used for \fIfacedb\fP searches for
  both sounds and images and one of the \fBsoundPath\fP or
