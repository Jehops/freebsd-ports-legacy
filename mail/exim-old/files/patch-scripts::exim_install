This patch makes two changes to the exim_install script:

*) Changes the test used to determine whether a file should be installed
   to cope with files which we "touch" to zero bytes for packaging
   purposes.

*) Causes the configure file to be installed as a sample only.  The
   administrator needs to rename this file to "activate" exim.

--- scripts/exim_install.orig	Mon Aug  2 17:43:03 1999
+++ scripts/exim_install	Tue Aug  3 14:31:20 1999
@@ -146,9 +146,9 @@
     from=../util/
   fi
 
-  if [ ! -s ${from}${name} ]; then
+  if [ ! -r ${from}${name} ]; then
     echo $com ""
-    echo $com "*** `pwd`/${from}${name} does not exist or is empty"
+    echo $com "*** `pwd`/${from}${name} does not exist"
     echo $com "*** Have you built Exim successfully?"
     echo $com "*** Exim installation ${ver}failed ***"
     exit 1
@@ -199,25 +199,20 @@
   fi
 done
 
-
-
-# If there is no configuration file, install the default.
+# Install only a sample configuration, which encourages the admin to look
+# at it, since Exim won't run without a configure file.
 
 echo $com ""
 
-if [ ! -f ${CONFIGURE_FILE} ]; then
-  echo $com Installing default configuration in ${CONFIGURE_FILE}
-  echo $com because there is no existing configuration file.
-  echo ${CP} ../src/configure.default ${CONFIGURE_FILE}
-  ${real} ${CP} ../src/configure.default ${CONFIGURE_FILE}
+  echo $com Installing default configuration file in ${CONFIGURE_FILE%/*}/configure.default
+  ${real} mkdir -p ${CONFIGURE_FILE%/*}
+  echo ${CP} ../src/configure.default ${CONFIGURE_FILE%/*}
+  ${real} ${CP} ../src/configure.default ${CONFIGURE_FILE%/*}
   if [ $? -ne 0 ]; then
     echo $com ""
     echo $com "*** Exim installation ${ver}failed ***"
     exit 1
   fi
-else
-  echo $com Configuration file ${CONFIGURE_FILE} already exists
-fi
 
 # Install info files if the directory is defined and the Texinfo
 # source documentation is present.
