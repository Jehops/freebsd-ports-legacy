--- dovecot-example.conf.orig	Fri Jun 18 19:25:31 2004
+++ dovecot-example.conf	Mon Jun 21 11:15:52 2004
@@ -7,11 +7,11 @@
 # --with-ssldir=/etc/ssl
 
 # Base directory where to store runtime data.
-#base_dir = /var/run/dovecot/
+base_dir = /var/dovecot/
 
 # Protocols we want to be serving:
 #  imap imaps pop3 pop3s
-#protocols = imap imaps
+protocols = imap pop3
 
 # IP or host address where to listen in for connections. It's not currently
 # possible to specify multiple addresses. "*" listens in all IPv4 interfaces.
@@ -27,18 +27,18 @@
 #pop3s_listen = 
 
 # Disable SSL/TLS support.
-#ssl_disable = no
+ssl_disable = yes
 
 # PEM encoded X.509 SSL/TLS certificate and private key. They're opened before
 # dropping root privileges, so keep the key file unreadable by anyone but
 # root. Included doc/mkcert.sh can be used to easily generate self-signed
 # certificate, just make sure to update the domains in dovecot-openssl.cnf
-#ssl_cert_file = /etc/ssl/certs/dovecot.pem
-#ssl_key_file = /etc/ssl/private/dovecot.pem
+ssl_cert_file = %%SSLDIR%%/certs/dovecot.pem
+ssl_key_file = %%SSLDIR%%/private/dovecot.pem
 
 # SSL parameter file. Master process generates this file for login processes.
 # It contains Diffie Hellman and RSA parameters.
-#ssl_parameters_file = /var/run/dovecot/ssl-parameters.dat
+ssl_parameters_file = %%SSLDIR%%/ssl-parameters.dat
 
 # How often to regenerate the SSL parameters file. Generation is quite CPU
 # intensive operation. The value is in hours, 0 disables regeneration
@@ -68,11 +68,11 @@
 # which login needs to be able to connect to. The sockets are created when
 # running as root, so you don't have to worry about permissions. Note that
 # everything in this directory is deleted when Dovecot is started.
-#login_dir = /var/run/dovecot/login
+login_dir = /var/dovecot/login
 
 # chroot login process to the login_dir. Only reason not to do this is if you
 # wish to run the whole Dovecot without roots.
-#login_chroot = yes
+login_chroot = yes
 
 
 ##
@@ -82,12 +82,12 @@
 login = imap
 
 # Executable location.
-#login_executable = /usr/libexec/dovecot/imap-login
+login_executable = %%PREFIX%%/libexec/dovecot/imap-login
 
 # User to use for the login process. Create a completely new user for this,
 # and don't use it anywhere else. The user must also belong to a group where
 # only it has access, it's used to control access for authentication process.
-#login_user = dovecot
+login_user = dovecot
 
 # Set max. process size in megabytes. If you don't use
 # login_process_per_connection you might need to grow this.
@@ -127,7 +127,7 @@
 login = pop3
 
 # Exception to above rule being the executable location.
-#login_executable = /usr/libexec/dovecot/pop3-login
+login_executable = %%PREFIX%%/libexec/dovecot/pop3-login
 
 ##
 ## Mail processes
@@ -140,7 +140,7 @@
 # Show more verbose process titles (in ps). Currently shows user name and
 # IP address. Useful for seeing who are actually using the IMAP processes
 # (eg. shared mailboxes or if same uid is used for multiple accounts).
-#verbose_proctitle = no
+verbose_proctitle = yes
 
 # Show protocol level SSL errors.
 #verbose_ssl = no
@@ -156,7 +156,7 @@
 # non-valid GID as primary group ID aren't allowed to log in. If user
 # belongs to supplementary groups with non-valid GIDs, those groups are
 # not set.
-#first_valid_gid = 1
+first_valid_gid = 0
 #last_valid_gid = 0
 
 # Grant access to these extra groups for mail processes. Typical use would be
@@ -169,7 +169,7 @@
 # WARNING: Never add directories here which local users can modify, that
 # may lead to root exploit. Usually this should be done only if you don't
 # allow shell access for users. See doc/configuration.txt for more information.
-#valid_chroot_dirs = 
+valid_chroot_dirs = /var/mail
 
 # Default chroot directory for mail processes. This can be overridden by
 # giving /./ in user's home directory (eg. /home/./user chroots into /home).
@@ -192,7 +192,7 @@
 #   default_mail_env = mbox:~/mail/:INBOX=/var/mail/%u
 #   default_mail_env = mbox:/var/mail/%d/%n/:INDEX=/var/indexes/%d/%n
 #
-#default_mail_env = 
+default_mail_env = mbox:/var/mail/%u
 
 # Space-separated list of fields to cache for all mails. Currently these
 # fields are allowed followed by a list of commands they speed up:
@@ -237,7 +237,7 @@
 #     arrives in half a hour, Dovecot closes the connection. This is still
 #     fine, except Outlook doesn't connect back so you don't see if new mail
 #     arrives.
-#client_workarounds = 
+client_workarounds = oe6-fetch-no-newmail outlook-idle
 
 # Dovecot can notify client of new mail in selected mailbox soon after it's
 # received. This setting specifies the minimum interval in seconds between
@@ -262,7 +262,7 @@
 # Save mails with CR+LF instead of plain LF. This makes sending those mails
 # take less CPU, especially with sendfile() syscall with Linux and FreeBSD.
 # But it also creates a bit more disk I/O which may just make it slower.
-#mail_save_crlf = no
+mail_save_crlf = yes
 
 # Use mmap() instead of read() to read mail files. read() seems to be a bit
 # faster with my Linux/x86 and it's better with NFS, so that's the default.
@@ -281,7 +281,7 @@
 # know any MUA which would modify mail files directly. IMAP protocol also
 # requires that the mails don't change, so it would be problematic in any case.
 # If you care about performance, enable it.
-#maildir_copy_with_hardlinks = no
+maildir_copy_with_hardlinks = yes
 
 # Check if mails' content has been changed by external programs. This slows
 # down things as extra stat() needs to be called for each file. If changes are
@@ -300,7 +300,7 @@
 # with is important to avoid deadlocks if other MTAs/MUAs are using both fcntl
 # and flock. Some operating systems don't allow using both of them
 # simultaneously, eg. BSDs. If dotlock is used, it's always created first.
-#mbox_locks = dotlock fcntl
+mbox_locks = fcntl
 
 # Should we create dotlock file even when we want only a read-lock? Setting
 # this to yes hurts the performance when the mailbox is accessed simultaneously
@@ -330,7 +330,7 @@
 ##
 
 # Executable location
-#imap_executable = /usr/libexec/dovecot/imap
+imap_executable = %%PREFIX%%/libexec/dovecot/imap
 
 # Set max. process size in megabytes. Most of the memory goes to mmap()ing
 # files, so it shouldn't harm much even if this limit is set pretty high.
@@ -338,14 +338,14 @@
 
 # Support for dynamically loadable modules.
 #imap_use_modules = no
-#imap_modules = /usr/lib/dovecot/imap
+#imap_modules = %%PREFIX%%/lib/dovecot/imap
 
 ##
 ## POP3 process
 ##
 
 # Executable location
-#pop3_executable = /usr/libexec/dovecot/pop3
+pop3_executable = %%PREFIX%%/libexec/dovecot/pop3
 
 # Set max. process size in megabytes. Most of the memory goes to mmap()ing
 # files, so it shouldn't harm much even if this limit is set pretty high.
@@ -353,7 +353,7 @@
 
 # Support for dynamically loadable modules.
 #pop3_use_modules = no
-#pop3_modules = /usr/lib/dovecot/pop3
+#pop3_modules = %%PREFIX%%/lib/dovecot/pop3
 
 ##
 ## Authentication processes
@@ -403,9 +403,9 @@
 #   vpopmail: vpopmail authentication
 #   ldap <config path>: LDAP, see doc/dovecot-ldap.conf
 #   pgsql <config path>: a PostgreSQL database, see doc/dovecot-pgsql.conf
-auth_passdb = pgsql /usr/local/etc/dovecot-pgsql.conf
+auth_passdb = passwd
 
-#auth_executable = /usr/libexec/dovecot/dovecot-auth
+auth_executable = %%PREFIX%%/libexec/dovecot/dovecot-auth
 
 # Set max. process size in megabytes.
 #auth_process_size = 256
@@ -436,7 +436,7 @@
 
 # More verbose logging. Useful for figuring out why authentication isn't
 # working.
-#auth_verbose = no
+auth_verbose = yes
 
 # digest-md5 authentication process. It requires special MD5 passwords which
 # /etc/shadow and PAM doesn't support, so we never need roots to handle it.
