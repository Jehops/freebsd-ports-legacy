--- src/imapd/imapd.c.orig	Mon Nov 18 14:29:04 2002
+++ src/imapd/imapd.c	Tue Nov 26 02:19:34 2002
@@ -29,6 +29,11 @@
 #include "c-client.h"
 #include <sys/stat.h>
 
+#ifdef DRAC_AUTH
+#include <netinet/in.h>
+#include <arpa/inet.h>
+#include <stdlib.h>
+#endif /* DRAC_AUTH */
 
 #define CRLF PSOUT ("\015\012")	/* primary output terpri */
 
@@ -176,6 +181,13 @@
 void mm_list_work (char *what,int delimiter,char *name,long attributes);
 char *lasterror (void);
 
+
+#ifdef DRAC_AUTH
+#define DRACTIMEOUT 10*60	/* check every 10 minutes */
+time_t lastdrac = 0;		/* time of last drac check */
+extern char *getenv ();
+#endif /* DRAC_AUTH */
+
 /* Global storage */
 
 char *version = "2002.332";	/* version number of this server */
@@ -1184,6 +1196,45 @@
 	      lasterror ());
       return;
     }
+
+#ifdef DRAC_AUTH
+    if (time (0) > lastdrac + DRACTIMEOUT)
+    {
+        FILE *dracconf;
+        char host[100];
+        char *drachost;
+        char *err;
+        char *p;
+
+        if ( (dracconf = fopen(ETC_DIR "/dracd.host", "r")) == NULL)
+        {
+          syslog (LOG_INFO, "dracd: error opening %s/dracd.host config file",ETC_DIR);
+          exit(1);
+        }
+
+        fgets(host, 100, dracconf);
+        p = strchr(host, '\n');
+        if(p != NULL)
+          *p = '\0';
+        fclose(dracconf);
+
+        if( drachost = (host) )
+        {
+            struct sockaddr_in sin;
+            int sinlen = sizeof (struct sockaddr_in);
+            char *client = getpeername (0,(struct sockaddr *) &sin,(void *) &sinlen) ?
+              "UNKNOWN" : inet_ntoa (sin.sin_addr);
+
+            lastdrac = time(0);
+
+            if (dracauth(drachost, inet_addr(client), &err) != 0)
+                syslog (LOG_INFO, err);
+            else
+                syslog (LOG_INFO, "dracd: authorized ip %s", client);
+        }
+    }
+#endif /* DRAC_AUTH */
+
 				/* change in number of messages? */
     if (existsquelled || (nmsgs != stream->nmsgs)) {
       PSOUT ("* ");
