Index: configure.in
===================================================================
--- configure.in	(revision 1751)
+++ configure.in	(revision 1761)
@@ -42,6 +42,7 @@
 DBMAIL_CHECK_SIEVE_LIBS
 DBMAIL_CHECK_GC
 DBMAIL_CHECK_GETOPT
+DBMAIL_CHECK_SOCKLEN_T
 
 AC_PROG_CC
 AC_COMPILE_WARNINGS
Index: acinclude.m4
===================================================================
--- acinclude.m4	(revision 1751)
+++ acinclude.m4	(revision 1761)
@@ -513,3 +513,49 @@
 
 # Prerequisites of lib/getopt*.
 AC_DEFUN([CHECK_PREREQ_GETOPT], [:])
+
+#
+# socklen_t
+# from curl
+
+dnl Check for socklen_t: historically on BSD it is an int, and in
+dnl POSIX 1g it is a type of its own, but some platforms use different
+dnl types for the argument to getsockopt, getpeername, etc.  So we
+dnl have to test to find something that will work.
+AC_DEFUN([DBMAIL_CHECK_SOCKLEN_T],
+[
+   AC_CHECK_TYPE([socklen_t], ,[
+      AC_MSG_CHECKING([for socklen_t equivalent])
+      AC_CACHE_VAL([socklen_t_equiv],
+      [
+         # Systems have either "struct sockaddr *" or
+         # "void *" as the second argument to getpeername
+         socklen_t_equiv=
+         for arg2 in "struct sockaddr" void; do
+            for t in int size_t unsigned long "unsigned long"; do
+               AC_TRY_COMPILE([
+                  #include <sys/types.h>
+                  #include <sys/socket.h>
+
+                  int getpeername (int, $arg2 *, $t *);
+               ],[
+                  $t len;
+                  getpeername(0,0,&len);
+               ],[
+                  socklen_t_equiv="$t"
+                  break
+               ])
+            done
+         done
+
+         if test "x$socklen_t_equiv" = x; then
+            AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
+         fi
+      ])
+      AC_MSG_RESULT($socklen_t_equiv)
+      AC_DEFINE_UNQUOTED(socklen_t, $socklen_t_equiv,
+                        [type to use in place of socklen_t if not defined])],
+      [#include <sys/types.h>
+#include <sys/socket.h>])
+])
+
