#!/bin/sh

# This script does the following:
# (1) cp xf86site.def, installed by imake-4 port,
#       to ${WRKDIR}/xc/config/cf.
#     this provides settings for the ports system.
# (2) Create a host.def for this specific port, using 
#     host.def as a base.

ORIGDEF=$PREFIX/lib/X11/config/xf86site.def
DESTDEF=$WRKDIR/xc/config/cf/xf86site.def
ORIGHOSTDEF=$PREFIX/lib/X11/config/host.def
LOCALDEF=$WRKDIR/.config
HOSTDEF=$WRKDIR/xc/config/cf/host.def

# Use original host.def as initial config file
rm -f $LOCALDEF
grep -v '#define.*ProjectRoot' $ORIGHOSTDEF	>> $LOCALDEF
echo "#define ProjectRoot $PREFIX"		>> $LOCALDEF

# This is also defined in xf86site.def, but doesn't get
# picked up for some reason.
echo "#define NothingOutsideProjectRoot YES"	>> $LOCALDEF

# Now, we can use this configuration.
# Thanks, Trevor Johnson
echo "#define InstallXserverSetUID NO"		>> $LOCALDEF

echo "#define XInputDrivers mouse keyboard digitaledge dynapro elo2300 \
			elographics magellan \
			microtouch mutouch spaceorb summa \
			wacom void citron"	>> $LOCALDEF
echo "#define BuildXF86DRI ${BuildXF86DRI}"	>> $LOCALDEF
echo "#define BuildXF86DRM NO"			>> $LOCALDEF
echo "#define HasGlide3 YES"			>> $LOCALDEF

# Install driver manpages as foo.4x so they can easily be accesed by
# 'man 4x foo'
echo "#define DriverManSuffix 4x"		>> $LOCALDEF
echo "#define DriverManDir \$(MANSOURCEPATH)4"	>> $LOCALDEF

# disable some options
for i in \
	BuildFonts \
	Build75DpiFonts \
	Build100DpiFonts \
	BuildSpeedoFonts \
	BuildType1Fonts \
	BuildCIDFonts \
	BuildCyrillicFonts \
	BuildHtmlManPages \
	JoystickSupport \
	XnestServer \
	BuildFontServer \
	XVirtualFramebufferServer \
	XprtServer \
	BuildDmx \
	LibHeaders \
	LibInstall \
	ForceNormalLib \
	InstallSecurityConfig \
	XTrueTypeInstallCConvHeaders
do \
	echo "#define $i NO"			>> $LOCALDEF
done

echo "#define InstallXserverSetUID ${SUID_XSERVER}"	>> $LOCALDEF
echo "#define BuildServer YES"			>> $LOCALDEF
echo "#define LibInstallBuild YES"		>> $LOCALDEF
echo "#define ModInstall YES"			>> $LOCALDEF
echo "#define XF86Server YES"			>> $LOCALDEF
echo "#define BuildServersOnly YES"		>> $LOCALDEF
echo "#define BuildGLXLibrary YES"		>> $LOCALDEF
echo "#define BuildXFree86ConfigTools YES"	>> $LOCALDEF
echo "#define InstallJapaneseDocs YES"		>> $LOCALDEF
echo "#define UseInstalledPrograms YES"		>> $LOCALDEF
echo "#define UseInstalledLibraries YES"	>> $LOCALDEF
echo "#define StandardIncludes -I${PREFIX}/include" >> $LOCALDEF

echo "#define FreeBSDCC	${CC}"			>> $LOCALDEF
echo "#define FreeBSDCXX ${CXX}"		>> $LOCALDEF
if [ X$WITH_DEBUG != X ]; then
	echo "#define FreeBSDCFLAGS -g ${CFLAGS}" >> $LOCALDEF
	echo "#define InstPgmFlags"		>> $LOCALDEF
else
	echo "#define FreeBSDCFLAGS ${CFLAGS}"	>> $LOCALDEF
fi

# We need to test cards on these architectures and see what can be added 
# to the other architectures.
cat >> $LOCALDEF <<END
#if defined(i386Architecture)
# define XF86CardDrivers	mga glint nv tga s3 s3virge sis rendition \
				neomagic i740 tdfx savage \
				cirrus vmware tseng trident via chips apm \
				i128 nsc ati i810 ark cyrix siliconmotion \
				vesa vga
#elif defined(ia64Architecture)
# define XF86CardDrivers	mga nv tdfx glint ati vga
#elif defined(AlphaArchitecture)
# define XF86CardDrivers	mga glint nv tga s3 s3virge rendition \
				tdfx savage cirrus ati siliconmotion vga
#elif defined(Sparc64Architecture)
# define XF86CardDrivers	nv ati sunffb
#endif
END

echo "#define FreeBSDBuildXxserv YES"		>> $LOCALDEF

# Copy ORIGDEF to DESTDEF
rm -f $DESTDEF
cp -f $ORIGDEF $DESTDEF

# copy generated config to host.def
cp -f $LOCALDEF $HOSTDEF

exit 0
