__sync* are GCC/Clang atomic builtins supported on any platform

--- Source/GmmLib/Platform/GmmPlatforms.h.orig	2018-09-28 18:59:39 UTC
+++ Source/GmmLib/Platform/GmmPlatforms.h
@@ -69,7 +69,7 @@ namespace GmmLib {
         {
 #if defined(__GMM_KMD__) || _WIN32
             InterlockedIncrement((LONG *)&RefCount);
-#elif defined(__linux__)
+#elif defined(__GNUC__)
             __sync_fetch_and_add(&RefCount, 1);
 #endif
             //TODO[Android]
@@ -79,7 +79,7 @@ namespace GmmLib {
         {
 #if defined(__GMM_KMD__) || _WIN32
             return(InterlockedDecrement((LONG *)&RefCount));
-#elif defined(__linux__)
+#elif defined(__GNUC__)
             return(__sync_sub_and_fetch(&RefCount, 1));
 #endif
             //TODO[Android]
--- Source/GmmLib/inc/External/Common/GmmCachePolicyCommon.h.orig	2018-09-28 18:59:39 UTC
+++ Source/GmmLib/inc/External/Common/GmmCachePolicyCommon.h
@@ -57,7 +57,7 @@ namespace GmmLib
             {
                 #if defined(__GMM_KMD__) || _WIN32
                     InterlockedIncrement((LONG *)&RefCount);
-                #elif defined(__linux__)
+                #elif defined(__GNUC__)
                     __sync_fetch_and_add(&RefCount, 1);
                 #endif
                 //TODO[Android]
@@ -67,7 +67,7 @@ namespace GmmLib
             {
                 #if defined(__GMM_KMD__) || _WIN32
                     return(InterlockedDecrement((LONG *)&RefCount));
-                #elif defined(__linux__)
+                #elif defined(__GNUC__)
                     return(__sync_sub_and_fetch(&RefCount, 1));
                 #endif
                 //TODO[Android]
--- Source/GmmLib/inc/External/Common/GmmInfo.h.orig	2018-09-28 18:59:39 UTC
+++ Source/GmmLib/inc/External/Common/GmmInfo.h
@@ -128,7 +128,7 @@ namespace GmmLib
         {
 #if defined(_WIN32)
             return(InterlockedIncrement((LONG *)&RefCount) - 1);  //InterLockedIncrement() returns incremented value
-#elif defined(__linux__)
+#elif defined(__GNUC__)
             return(__sync_fetch_and_add(&RefCount, 1));
 #endif
         }
@@ -150,7 +150,7 @@ namespace GmmLib
                 }
 #if defined(_WIN32)
             } while (!(InterlockedCompareExchange((LONG *)&RefCount, TargetValue, CurrentValue) == CurrentValue));
-#elif defined(__linux__)
+#elif defined(__GNUC__)
             } while (!__sync_bool_compare_and_swap(&RefCount, CurrentValue, TargetValue));
 #endif
 
--- Source/GmmLib/inc/Internal/Common/Texture/GmmTextureCalc.h.orig	2018-09-28 18:59:39 UTC
+++ Source/GmmLib/inc/Internal/Common/Texture/GmmTextureCalc.h
@@ -146,7 +146,7 @@ namespace GmmLib
             {
                 #if defined(__GMM_KMD__) || _WIN32
                     InterlockedIncrement((LONG *)&RefCount);
-                #elif defined(__linux__)
+                #elif defined(__GNUC__)
                     __sync_fetch_and_add(&RefCount, 1);
                 #endif
                     //TODO[Android]
@@ -156,7 +156,7 @@ namespace GmmLib
             {
                 #if defined(__GMM_KMD__) || _WIN32
                     return(InterlockedDecrement((LONG *)&RefCount));
-                #elif defined(__linux__)
+                #elif defined(__GNUC__)
                     return(__sync_sub_and_fetch(&RefCount, 1));
                 #endif
                     //TODO[Android]
