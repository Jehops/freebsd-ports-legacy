--- src/ieee1394io.cc.orig	Wed Jul 14 04:57:07 2004
+++ src/ieee1394io.cc	Thu Aug 12 21:16:47 2004
@@ -61,11 +61,13 @@
 #include <sys/mman.h>
 #include <sys/poll.h>
 
+#if 0
 #include <libraw1394/raw1394.h>
 #include <libraw1394/csr.h>
 #include <libavc1394/avc1394.h>
 #include <libavc1394/avc1394_vcr.h>
 #include <libavc1394/rom1394.h>
+#endif
 
 #include "ieee1394io.h"
 #include "preferences.h"
@@ -260,7 +262,7 @@
 raw1394Reader::raw1394Reader( int p, int c, int bufSize ) :
 		IEEE1394Reader( c, bufSize ), port( p )
 {
-	handle = NULL;
+	//handle = NULL;
 	cerr << ">>> Using raw1394 capture" << endl;
 }
 
@@ -337,7 +339,8 @@
 
 bool raw1394Reader::Open()
 {
-	bool success;
+	bool success = false;
+#if 0
 	int numcards;
 	struct raw1394_portinfo pinf[ 16 ];
 	iso_handler_t oldhandler;
@@ -370,6 +373,7 @@
 		cerr << exc << endl;
 		success = false;
 	}
+#endif
 	return success;
 }
 
@@ -380,11 +384,13 @@
 
 void raw1394Reader::Close()
 {
+#if 0
 	if ( handle != NULL )
 	{
 		raw1394_destroy_handle( handle );
 		handle = NULL;
 	}
+#endif
 }
 
 bool raw1394Reader::StartReceive()
@@ -394,7 +400,7 @@
 	/* Starting iso receive */
 	try
 	{
-		fail_neg( raw1394_start_iso_rcv( handle, channel ) );
+//		fail_neg( raw1394_start_iso_rcv( handle, channel ) );
 		success = true;
 	}
 	catch ( string exc )
@@ -408,8 +414,8 @@
 
 void raw1394Reader::StopReceive()
 {
-	if ( handle != NULL )
-		raw1394_stop_iso_rcv( handle, channel );
+//	if ( handle != NULL )
+//		raw1394_stop_iso_rcv( handle, channel );
 }
 
 
@@ -445,6 +451,7 @@
  
 */
 
+#if 0
 int raw1394Reader::HandlerProxy( raw1394handle_t handle, int channel, size_t length, quadlet_t *data )
 {
 	raw1394Reader *self = static_cast< raw1394Reader* >( raw1394_get_userdata( handle ) );
@@ -556,6 +563,7 @@
 
 	return 0;
 }
+#endif
 
 
 /** The thread responsible for polling the raw1394 interface.
@@ -572,12 +580,13 @@
 
 void* raw1394Reader::Thread()
 {
-
+#if 0
 	while ( true )
 	{
 		raw1394_loop_iterate( handle );
 		pthread_testcancel();
 	}
+#endif
 	return NULL;
 }
 
@@ -670,6 +679,7 @@
 
 bool dv1394Reader::Open()
 {
+#if 0
 	int n_frames = DV1394_MAX_FRAMES / 4;
 	struct dv1394_init init =
 	    {
@@ -703,6 +713,8 @@
 	}
 
 	return true;
+#endif
+	return false;
 }
 
 
@@ -711,6 +723,7 @@
 */
 void dv1394Reader::Close()
 {
+#if 0
 	if ( m_dv1394_fd != -1 )
 	{
 		if ( m_dv1394_map != NULL )
@@ -719,11 +732,13 @@
 		m_dv1394_map = NULL;
 		m_dv1394_fd = -1;
 	}
+#endif
 }
 
 
 bool dv1394Reader::StartReceive()
 {
+#if 0
 	/* Starting iso receive */
 	if ( ioctl( m_dv1394_fd, DV1394_START_RECEIVE, NULL ) )
 	{
@@ -731,6 +746,8 @@
 		return false;
 	}
 	return true;
+#endif
+	return false;
 }
 
 
@@ -739,6 +756,7 @@
 
 bool dv1394Reader::Handler( int handle )
 {
+#if 0
 	struct dv1394_status dvst;
 
 	if ( ioctl( handle, DV1394_WAIT_FRAMES, 1 ) )
@@ -816,6 +834,8 @@
 
 	}
 	return true;
+#endif
+	return false;
 }
 
 
@@ -852,6 +872,7 @@
 
 AVC::AVC( int p ) : port( p )
 {
+#if 0
 	pthread_mutex_init( &avc_mutex, NULL );
 	avc_handle = NULL;
 	int numcards;
@@ -883,6 +904,7 @@
 		cerr << exc << endl;
 	}
 	return ;
+#endif
 }
 
 
@@ -892,6 +914,7 @@
 
 AVC::~AVC()
 {
+#if 0
 	if ( avc_handle != NULL )
 	{
 		pthread_mutex_lock( &avc_mutex );
@@ -899,11 +922,13 @@
 		avc_handle = NULL;
 		pthread_mutex_unlock( &avc_mutex );
 	}
+#endif
 }
 
 
 extern KinoCommon *common;
 
+#if 0
 int AVC::ResetHandler( raw1394handle_t handle, unsigned int generation )
 {
 	cerr << "Reset Handler received" << endl;
@@ -911,7 +936,7 @@
 	common->getPageCapture() ->driver_locked = true;
 	return 0;
 }
-
+#endif
 
 /** See if a node_id is still valid and pointing to an AV/C Recorder.
  
@@ -927,6 +952,7 @@
 int AVC::isPhyIDValid( int phyID )
 {
 	int value = -1;
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -969,6 +995,7 @@
 		}
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return value;
 }
 
@@ -977,6 +1004,7 @@
 */
 void AVC::Noop( void )
 {
+#if 0
 	struct pollfd raw1394_poll;
 	raw1394_poll.fd = raw1394_get_fd( avc_handle );
 	raw1394_poll.events = POLLIN;
@@ -987,11 +1015,13 @@
 		        || ( raw1394_poll.revents & POLLPRI ) )
 			raw1394_loop_iterate( avc_handle );
 	}
+#endif
 }
 
 
 int AVC::Play( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1003,12 +1033,14 @@
 		}
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 
 int AVC::Pause( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1025,12 +1057,14 @@
 	    };
 	nanosleep( &t, NULL );
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 
 int AVC::Stop( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1043,12 +1077,14 @@
 	    };
 	nanosleep( &t, NULL );
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 
 int AVC::Rewind( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1056,12 +1092,14 @@
 			avc1394_vcr_rewind( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 
 int AVC::FastForward( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1069,11 +1107,13 @@
 			avc1394_vcr_forward( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::Forward( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1081,11 +1121,13 @@
 			avc1394_vcr_next( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::Back( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1093,11 +1135,13 @@
 			avc1394_vcr_previous( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::NextScene( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1105,11 +1149,13 @@
 			avc1394_vcr_next_index( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::PreviousScene( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1117,11 +1163,13 @@
 			avc1394_vcr_previous_index( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::Record( int phyID )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1129,11 +1177,13 @@
 			avc1394_vcr_record( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 int AVC::Shuttle( int phyID, int speed )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1141,12 +1191,14 @@
 			avc1394_vcr_trick_play( avc_handle, phyID, speed );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return 0;
 }
 
 unsigned int AVC::TransportStatus( int phyID )
 {
 	quadlet_t val = 0;
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1154,11 +1206,13 @@
 			val = avc1394_vcr_status( avc_handle, phyID );
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return val;
 }
 
 bool AVC::Timecode( int phyID, char* timecode )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1187,10 +1241,13 @@
 	}
 	pthread_mutex_unlock( &avc_mutex );
 	return true;
+#endif
+	return false;
 }
 
 int AVC::getNodeId( const char *guid )
 {
+#if 0
 	pthread_mutex_lock( &avc_mutex );
 	if ( avc_handle != NULL )
 	{
@@ -1213,6 +1270,7 @@
 		}
 	}
 	pthread_mutex_unlock( &avc_mutex );
+#endif
 	return -1;
 }
 
@@ -1220,6 +1278,7 @@
 dv1394Writer::dv1394Writer( string device, unsigned int channel, unsigned int nBuffers,
                             unsigned int cip_n, unsigned int cip_d, unsigned int syt_offset ) : isInitialised( false )
 {
+#if 0
 	m_fd = -1;
 	m_deviceName = device;
 	m_channel = channel;
@@ -1229,6 +1288,7 @@
 	m_syt_offset = syt_offset;
 
 	m_fd = open( m_deviceName.c_str(), O_RDWR );
+#endif
 }
 
 
@@ -1244,6 +1304,7 @@
 
 void dv1394Writer::SendFrame( Frame &frame )
 {
+#if 0
 	bool isPAL = frame.IsPAL();
 
 	if ( !isInitialised )
@@ -1268,4 +1329,5 @@
 	}
 
 	write( m_fd, frame.data, ( isPAL ? DV1394_PAL_FRAME_SIZE : DV1394_NTSC_FRAME_SIZE ) );
+#endif
 }
