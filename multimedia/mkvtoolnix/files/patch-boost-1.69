After https://github.com/boostorg/logic/commit/23cd89d4c80f build fails:

src/common/debugging.h:63:14: fatal error: no viable conversion from returned value of type 'boost::tribool' to function return type 'bool'
      return m_requested;
             ^~~~~~~~~~~
src/input/r_matroska.cpp:1685:43: fatal error: no viable conversion from 'boost::logic::tribool' to 'bool'
    PTZR(t->ptzr)->set_track_enabled_flag(t->enabled_track);
                                          ^~~~~~~~~~~~~~~~
src/merge/generic_packetizer.h:199:44: note: passing argument to parameter 'enabled_track' here
  virtual void set_track_enabled_flag(bool enabled_track);
                                           ^
src/output/p_avc_es.cpp:49:41: fatal error: no viable conversion from 'boost::logic::tribool' to 'bool'
  m_parser.set_fix_bitstream_frame_rate(m_ti.m_fix_bitstream_frame_rate);
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/common/avc_es_parser.h:152:42: note: passing argument to parameter 'fix' here
  void set_fix_bitstream_frame_rate(bool fix) {
                                         ^

--- src/common/debugging.h.orig	2018-10-20 14:44:02 UTC
+++ src/common/debugging.h
@@ -60,7 +60,7 @@ class debugging_option_c {
       if (boost::logic::indeterminate(m_requested))
         m_requested = debugging_c::requested(m_option);
 
-      return m_requested;
+      return bool{m_requested};
     }
   };
 
--- src/input/r_matroska.cpp.orig	2018-10-20 14:44:02 UTC
+++ src/input/r_matroska.cpp
@@ -1682,7 +1682,7 @@ kax_reader_c::set_packetizer_headers(kax_track_t *t) {
     PTZR(t->ptzr)->set_track_forced_flag(true);
 
   if (boost::logic::indeterminate(PTZR(t->ptzr)->m_ti.m_enabled_track))
-    PTZR(t->ptzr)->set_track_enabled_flag(t->enabled_track);
+    PTZR(t->ptzr)->set_track_enabled_flag(bool{t->enabled_track});
 
   if ((0 != t->track_uid) && !PTZR(t->ptzr)->set_uid(t->track_uid))
     mxwarn(boost::format(Y("matroska_reader: Could not keep the track UID %1% because it is already allocated for the new file.\n")) % t->track_uid);
--- src/output/p_avc_es.cpp.orig	2018-10-20 14:44:02 UTC
+++ src/output/p_avc_es.cpp
@@ -46,7 +46,7 @@ avc_es_video_packetizer_c(generic_reader_c *p_reader,
   set_codec_id(MKV_V_MPEG4_AVC);
 
   m_parser.set_keep_ar_info(false);
-  m_parser.set_fix_bitstream_frame_rate(m_ti.m_fix_bitstream_frame_rate);
+  m_parser.set_fix_bitstream_frame_rate(bool{m_ti.m_fix_bitstream_frame_rate});
 
   // If no external timestamp file has been specified then mkvmerge
   // might have created a factory due to the --default-duration
