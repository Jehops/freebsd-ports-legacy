--- configure.in.orig	Sat Apr 14 02:44:47 2001
+++ configure.in	Mon Jul  2 21:43:50 2001
@@ -174,8 +174,8 @@
     ;;
   freebsd*)
     host_os="freebsd"
-    CFLAGS="$CFLAGS -D_THREAD_SAFE -pthread -I/usr/local/include"
-    LDFLAGS="$LDFLAGS -Wl,-export-dynamic -L/usr/local/lib"
+    CFLAGS="$CFLAGS"
+    LDFLAGS="$LDFLAGS -Wl,-export-dynamic"
     ;;
   netbsd*)
     host_os="freebsd"
@@ -326,9 +326,9 @@
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
      esd_micro_version=`$ESD_CONFIG $esd_config_args --version | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
-     ac_save_CFLAGS="$CFLAGS"
+     ac_save_CPPFLAGS="$CPPFLAGS"
      ac_save_LIBS="$LIBS"
-     CFLAGS="$CFLAGS $ESD_CFLAGS"
+     CPPFLAGS="$CPPFLAGS $ESD_CFLAGS"
      LIBS="$LIBS $ESD_LIBS"
      rm -f conf.esdtest
      AC_MSG_CHECKING(for ESD - version >= $min_esd_version)
@@ -387,7 +387,7 @@
 }
 
 ],, have_esound=false, have_esound=false)
-     CFLAGS="$ac_save_CFLAGS"
+     CPPFLAGS="$ac_save_CPPFLAGS"
      LIBS="$ac_save_LIBS"
      AC_LANG_RESTORE
      rm -f conf.esdtest
@@ -460,9 +460,9 @@
      gtk_config_major=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
      gtk_config_minor=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
      gtk_config_micro=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
-     ac_save_CFLAGS="$CFLAGS"
+     ac_save_CPPFLAGS="$CPPFLAGS"
      ac_save_LIBS="$LIBS"
-     CFLAGS="$CFLAGS $GTK_CFLAGS"
+     CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
      LIBS="$GTK_LIBS $LIBS"
 
      AC_TRY_RUN([
@@ -489,7 +489,7 @@
          gtk_major_version, gtk_minor_version, gtk_micro_version);
   return 1;
 }], , have_gtk=false, have_gtk=false])
-    CFLAGS="$ac_save_CFLAGS"
+    CPPFLAGS="$ac_save_CPPFLAGS"
     LIBS="$ac_save_LIBS" 
     if test "$have_gtk" = "false"; then
        AC_MSG_RESULT(no)
@@ -510,7 +510,7 @@
   OSINC="$OSINC -I$srcdir/ui/download/unix/include"
   OSINC="$OSINC -I$srcdir/ui/musicbrowser/include"
   OSINC="$OSINC -I$srcdir/ftc/kjofol"
-  CFLAGS="$CFLAGS $GTK_CFLAGS"
+  CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
   AC_DEFINE(HAVE_GTK)
 elif test "$host_os" = "beos"; then
   OSDEPPLUGINS="$OSDEPPLUGINS plugins/musicbrowser.ui"
@@ -536,7 +536,7 @@
 AC_SUBST(GTK_LIBS)
 AC_SUBST(EXTRALIBS)
 
-AC_SUBST(CFLAGS)
+AC_SUBST(CPPFLAGS)
 
 dnl orbit crap
 save_CPPFLAGS="$CPPFLAGS"
@@ -656,7 +656,7 @@
   alsa_min_major_version=0
   alsa_min_minor_version=5
   alsa_min_micro_version=0
-  ac_save_CFLAGS="$CFLAGS"
+  ac_save_CPPFLAGS="$CPPFLAGS"
   ac_save_LIBS="$LIBS"
 
   LIBS="$LIBS -lasound"
@@ -701,7 +701,7 @@
 ], , have_alsa=false, have_alsa=false
 )
    AC_LANG_RESTORE
-   CFLAGS="$ac_save_CFLAGS"
+   CPPFLAGS="$ac_save_CPPFLAGS"
    LIBS="$ac_save_LIBS"
    if test "$have_alsa" = "false"; then
       AC_MSG_RESULT(no)
@@ -748,13 +748,21 @@
                     have_arts="false")
 fi
 
+AC_ARG_ENABLE(arts, [  --disable-arts          Don't compile the libArts output plugin], enable_arts=no, enable_arts=yes)
+
+if test "x$enable_arts" = "xno"; then
+  have_arts="false";
+fi
+
 ARTS_LIBS=""
-AC_CHECK_LIB(artsc, arts_init, 
-  OSDEPPLUGINS="$OSDEPPLUGINS plugins/arts.pmo";
-  OSINC="$OSINC -I$srcdir/io/arts/include"
-  ARTS_LIBS="-lartsc -laudiofile"
-  AC_MSG_RESULT([compiling arts pmo plugin])
-)
+if test "$have_arts" = "true"; then
+  AC_CHECK_LIB(artsc, arts_init, 
+    OSDEPPLUGINS="$OSDEPPLUGINS plugins/arts.pmo";
+    OSINC="$OSINC -I$srcdir/io/arts/include"
+    ARTS_LIBS="-lartsc -laudiofile"
+    AC_MSG_RESULT([compiling arts pmo plugin])
+  )
+fi
 
 AC_SUBST(ARTS_LIBS)
 AC_SUBST(EXTRALIBS)
@@ -808,9 +816,9 @@
   gdk_pixbuf_micro_version=`$GDK_PIXBUF_CONFIG $gdk_pixbuf_config_args --version | \
          sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
   if test "x$enable_gdk_pixbuftest" = "xyes" ; then
-    ac_save_CFLAGS="$CFLAGS"
+    ac_save_CPPFLAGS="$CPPFLAGS"
     ac_save_LIBS="$LIBS"
-    CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
+    CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
     LIBS="$LIBS $GDK_PIXBUF_LIBS"
 dnl
 dnl Now check if the installed GDK_PIXBUF is sufficiently new. (Also sanity
@@ -872,7 +880,7 @@
 }
 
 ],, no_gdk_pixbuf=yes,[echo $ac_n "cross compiling; assumed OK... $ac_c"])
-     CFLAGS="$ac_save_CFLAGS"
+     CPPFLAGS="$ac_save_CPPFLAGS"
      LIBS="$ac_save_LIBS"
    fi
 fi
@@ -891,7 +899,7 @@
       :
      else
         echo "*** Could not run GDK_PIXBUF test program, checking why..."
-        CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
+        CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
         LIBS="$LIBS $GDK_PIXBUF_LIBS"
         AC_TRY_LINK([
 #include <stdio.h>
@@ -910,7 +918,7 @@
         echo "*** exact error that occured. This usually means GDK_PIXBUF was incorrectly installed"
         echo "*** or that you have moved GDK_PIXBUF since it was installed. In the latter case, you"
         echo "*** may want to edit the gdk-pixbuf-config script: $GDK_PIXBUF_CONFIG" ])
-        CFLAGS="$ac_save_CFLAGS"
+        CPPFLAGS="$ac_save_CPPFLAGS"
         LIBS="$ac_save_LIBS"
      fi
    fi
@@ -922,13 +930,13 @@
 AC_SUBST(GDK_PIXBUF_LIBS)
 rm -f conf.gdk_pixbuftest
 
-CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
-AC_SUBST(CFLAGS)
+CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
+AC_SUBST(CPPFLAGS)
 
 AC_LANG_SAVE
 AC_LANG_CPLUSPLUS
 AC_CHECK_LIB(musicbrainz, mb_New, ,
-  AC_MSG_ERROR([FreeAmp requires that the MusicBrainz client library be installed.]),-ldl)
+  AC_MSG_ERROR([FreeAmp requires that the MusicBrainz client library be installed.]))
 AC_LANG_RESTORE
 
 AC_CONFIG_HEADER(config/config.h)
