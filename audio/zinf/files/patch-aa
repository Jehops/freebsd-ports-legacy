--- configure.in.orig	Mon Jan 20 02:04:10 2003
+++ configure.in	Fri May  2 01:35:27 2003
@@ -182,8 +182,8 @@
     ;;
   freebsd*)
     host_os="freebsd"
-    CFLAGS="$CFLAGS -D_THREAD_SAFE -pthread -I/usr/local/include"
-    LDFLAGS="$LDFLAGS -Wl,-export-dynamic -L/usr/local/lib"
+    CFLAGS="$CFLAGS"
+    LDFLAGS="$LDFLAGS -Wl,-export-dynamic"
     ;;
   netbsd*)
     host_os="freebsd"
@@ -334,9 +334,9 @@
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
      esd_micro_version=`$ESD_CONFIG $esd_config_args --version | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
-     ac_save_CFLAGS="$CFLAGS"
+     ac_save_CPPFLAGS="$CPPFLAGS"
      ac_save_LIBS="$LIBS"
-     CFLAGS="$CFLAGS $ESD_CFLAGS"
+     CPPFLAGS="$CPPFLAGS $ESD_CFLAGS"
      LIBS="$LIBS $ESD_LIBS"
      rm -f conf.esdtest
      AC_MSG_CHECKING(for ESD - version >= $min_esd_version)
@@ -395,7 +395,7 @@
 }
 
 ],, have_esound=false, have_esound=false)
-     CFLAGS="$ac_save_CFLAGS"
+     CPPFLAGS="$ac_save_CPPFLAGS"
      LIBS="$ac_save_LIBS"
      AC_LANG_RESTORE
      rm -f conf.esdtest
@@ -502,9 +502,9 @@
      gtk_config_major=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
      gtk_config_minor=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
      gtk_config_micro=`$GTK_CONFIG --version | sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
-     ac_save_CFLAGS="$CFLAGS"
+     ac_save_CPPFLAGS="$CPPFLAGS"
      ac_save_LIBS="$LIBS"
-     CFLAGS="$CFLAGS $GTK_CFLAGS"
+     CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
      LIBS="$GTK_LIBS $LIBS"
 
      AC_TRY_RUN([
@@ -531,7 +531,7 @@
          gtk_major_version, gtk_minor_version, gtk_micro_version);
   return 1;
 }], , have_gtk=false, have_gtk=false])
-    CFLAGS="$ac_save_CFLAGS"
+    CPPFLAGS="$ac_save_CPPFLAGS"
     LIBS="$ac_save_LIBS" 
     if test "$have_gtk" = "false"; then
        AC_MSG_RESULT(no)
@@ -552,7 +552,7 @@
   OSINC="$OSINC -I$srcdir/ui/download/unix/include"
   OSINC="$OSINC -I$srcdir/ui/musicbrowser/include"
   OSINC="$OSINC -I$srcdir/ftc/kjofol"
-  CFLAGS="$CFLAGS $GTK_CFLAGS"
+  CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
   AC_DEFINE(HAVE_GTK)
 else
   GTK_CFLAGS=""
@@ -573,18 +573,10 @@
 AC_SUBST(GTK_PREFIX)
 AC_SUBST(EXTRALIBS)
 
-AC_SUBST(CFLAGS)
+AC_SUBST(CPPFLAGS)
 
 dnl orbit crap
-save_CPPFLAGS="$CPPFLAGS"
-ORBIT_CPP_CFLAGS=`orbit-config --cflags server`
-CPPFLAGS="$CPPFLAGS $GTK_CFLAGS $ORBIT_CPP_CFLAGS" 
-AC_LANG_SAVE
-AC_LANG_C
-AC_CHECK_HEADERS(orb/orbit.h, have_orbit="true", have_orbit="false")
-CPPFLAGS="$save_CPPFLAGS"
-AC_LANG_RESTORE
-
+have_orbit="false"
 ORBIT_LIBS=""
 ORBIT_IDL=""
 
@@ -708,7 +700,7 @@
   alsa_min_major_version=0
   alsa_min_minor_version=9
   alsa_min_micro_version=0
-  ac_save_CFLAGS="$CFLAGS"
+  ac_save_CPPFLAGS="$CPPFLAGS"
   ac_save_LIBS="$LIBS"
 
   LIBS="$LIBS -lasound"
@@ -753,7 +745,7 @@
 ], , have_alsa=false, have_alsa=false
 )
    AC_LANG_RESTORE
-   CFLAGS="$ac_save_CFLAGS"
+   CPPFLAGS="$ac_save_CPPFLAGS"
    LIBS="$ac_save_LIBS"
    if test "$have_alsa" = "false"; then
       AC_MSG_RESULT(no)
@@ -773,6 +765,9 @@
   AC_MSG_RESULT([compiling alsa pmo plugin])
 fi
 
+AC_ARG_ENABLE(vorbis, [  --disable-vorbis        Don't compile the Vorbis output plugin], enable_vorbis=no, enable_vorbis=yes)
+
+if test "x$enable_vorbis" = "xyes"; then
 AC_CHECK_LIB(ogg, ogg_sync_init, have_ogg="yes",)
 AC_CHECK_LIB(vorbisfile, ov_info, have_vorbis="yes",, -lvorbis -logg)
 
@@ -784,6 +779,7 @@
      AC_MSG_RESULT([compiling vorbis codec plugin])
   fi 
 fi 
+fi
 
 ID3_LIBS=""
 AC_CHECK_LIB(z, uncompress,
@@ -803,7 +799,7 @@
     if test x$ARTSCCONFIG = x -o x$ARTSCCONFIG = x'"$ARTSCCONFIG"'; then
     : # arts isn't installed
     else
-        CFLAGS="$CFLAGS `$ARTSCCONFIG --cflags`"
+        CPPFLAGS="$CPPFLAGS `$ARTSCCONFIG --cflags`"
         AC_TRY_COMPILE([
          #include <artsc.h>
         ],[
@@ -870,9 +866,9 @@
   gdk_pixbuf_micro_version=`$GDK_PIXBUF_CONFIG $gdk_pixbuf_config_args --version | \
          sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
   if test "x$enable_gdk_pixbuftest" = "xyes" ; then
-    ac_save_CFLAGS="$CFLAGS"
+    ac_save_CPPFLAGS="$CPPFLAGS"
     ac_save_LIBS="$LIBS"
-    CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
+    CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
     LIBS="$LIBS $GDK_PIXBUF_LIBS"
 dnl
 dnl Now check if the installed GDK_PIXBUF is sufficiently new. (Also sanity
@@ -934,7 +930,7 @@
 }
 
 ],, no_gdk_pixbuf=yes,[echo $ac_n "cross compiling; assumed OK... $ac_c"])
-     CFLAGS="$ac_save_CFLAGS"
+     CPPFLAGS="$ac_save_CPPFLAGS"
      LIBS="$ac_save_LIBS"
    fi
 fi
@@ -953,7 +949,7 @@
       :
      else
         echo "*** Could not run GDK_PIXBUF test program, checking why..."
-        CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
+        CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
         LIBS="$LIBS $GDK_PIXBUF_LIBS"
         AC_TRY_LINK([
 #include <stdio.h>
@@ -972,7 +968,7 @@
         echo "*** exact error that occured. This usually means GDK_PIXBUF was incorrectly installed"
         echo "*** or that you have moved GDK_PIXBUF since it was installed. In the latter case, you"
         echo "*** may want to edit the gdk-pixbuf-config script: $GDK_PIXBUF_CONFIG" ])
-        CFLAGS="$ac_save_CFLAGS"
+        CPPFLAGS="$ac_save_CPPFLAGS"
         LIBS="$ac_save_LIBS"
      fi
    fi
@@ -984,8 +980,8 @@
 AC_SUBST(GDK_PIXBUF_LIBS)
 rm -f conf.gdk_pixbuftest
 
-CFLAGS="$CFLAGS $GDK_PIXBUF_CFLAGS"
-AC_SUBST(CFLAGS)
+CPPFLAGS="$CPPFLAGS $GDK_PIXBUF_CFLAGS"
+AC_SUBST(CPPFLAGS)
 
 AC_LANG_SAVE
 AC_LANG_CPLUSPLUS
@@ -995,7 +991,7 @@
     echo "*** Download the library from "
     echo "***     http://www.musicbrainz.org/download.html"
     echo "***"
-    AC_MSG_ERROR(Cannot continue.)],-ldl -lm -lstdc++)
+    AC_MSG_ERROR(Cannot continue.)],-lm -lstdc++)
 AC_LANG_RESTORE
 
 AC_CONFIG_HEADER(config/config.h)
