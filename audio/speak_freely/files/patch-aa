--- Makefile.orig	Fri Oct 19 07:01:35 2001
+++ Makefile	Thu Dec 12 02:44:56 2002
@@ -6,7 +6,7 @@
 #DEBUG = -O
 #DEBUG = -g -DHEXDUMP
 #DEBUG = -g -DHEXDUMP -DNOCRYPTO
-DEBUG = -O3 -DHEXDUMP
+#DEBUG = -O3 -DHEXDUMP
   
 # Installation 
 
@@ -43,13 +43,13 @@
 #    of the available flags which follows these declarations.
 #
 #CCFLAGS =  -DAUDIO_BLOCKING -DLINUX -DHALF_DUPLEX -DM_LITTLE_ENDIAN
-CCFLAGS =  -DAUDIO_BLOCKING -DLINUX -DHALF_DUPLEX -DM_LITTLE_ENDIAN -DNEEDED_LINEAR -DLINUX_DSP_SMALL_BUFFER
-CC = gcc -Wall # for GNU's gcc compiler
+#CCFLAGS =  -DAUDIO_BLOCKING -DLINUX -DHALF_DUPLEX -DM_LITTLE_ENDIAN -DNEEDED_LINEAR -DLINUX_DSP_SMALL_BUFFER
+#CC = gcc -Wall # for GNU's gcc compiler
 #   CELPFLAGS below are tweaked for GCC 2.96 on Intel Pentium
 #   Comment out if you are using a compiler which doesn't
 #   understand these options.
-CELPFLAGS = -fomit-frame-pointer -ffast-math -funroll-loops
-LFLAGS = -lncurses -lm
+#CELPFLAGS = -fomit-frame-pointer -ffast-math -funroll-loops
+#LFLAGS = -lncurses -lm
 #
 # If the above LFLAGS doesn't work, try the one below.
 #LFLAGS = -lcurses -lm
@@ -237,8 +237,8 @@
 #    Depending on how your driver handles non-blocking I/O,
 #    you may also have to add -DAUDIO_BLOCKING to the
 #    CCFLAGS line.
-#CCFLAGS = -DM_LITTLE_ENDIAN
-#LFLAGS = -lcurses -ltermcap -lcompat -lm
+CCFLAGS = -DM_LITTLE_ENDIAN -DHALF_DUPLEX -DAUDIO_BLOCKING -DNEEDED_LINEAR -DLINUX_DSP_SMALL_BUFFER
+LFLAGS = -lcurses -ltermcap -lcompat -lm
 
 #			   Hewlett-Packard
 #		      (courtesy of Marc Kilian)
@@ -286,7 +286,7 @@
 
 #   Compiler flags
 
-CFLAGS = $(DEBUG) -Iadpcm -Icelp -Ilpc -Igsm/inc -Ilpc10 -Imd5 -Ides -Iidea -Ilibdes -Iblowfish $(CARGS) $(DUPLEX) $(CCFLAGS) $(DOMAIN)
+CFLAGS = $(OPTFLAGS) $(DEBUG) -Iadpcm -Icelp -Ilpc -I$(LOCALBASE)/include -Ilpc10 -Imd5 -Ides -Iidea -Ilibdes -Iblowfish $(CARGS) $(DUPLEX) $(CCFLAGS) $(DOMAIN)
 
 BINARIES = sfspeaker sfmike sflaunch sflwld sflwl sfecho sfreflect
 
@@ -301,12 +301,12 @@
 SPKROBJS = speaker.o codecs.o deskey.o g711.o rate.o rtpacket.o soundbyte.o ulaw.o usleep.o vatpkt.o vox.o audio_hp.o audio_sgi.o common.o
 
 sfspeaker: $(SPKROBJS) adpcmlib.o celplib.o libblowfish.o lpclib.o lpc10lib.o gsmlib.o deslib.o md5lib.o idealib.o libdes.o xdsub.o 
-	$(CC) $(SPKROBJS) adpcm/adpcm-u.o blowfish/libblowfish.a celp/celp.o des/des.a md5/md5.o idea/idea.a lpc10/liblpc10.a gsm/lib/libgsm.a lpc/lpc.o xdsub.o libdes/libdes.a $(LFLAGS) -o sfspeaker
+	$(CC) $(SPKROBJS) adpcm/adpcm-u.o blowfish/libblowfish.a celp/celp.o des/des.a -lmd idea/idea.a lpc10/liblpc10.a gsm/lib/libgsm.a lpc/lpc.o xdsub.o libdes/libdes.a $(LFLAGS) -o sfspeaker
 
 MIKEOBJS = mike.o codecs.o deskey.o g711.o rate.o rtpacket.o soundbyte.o ulaw.o usleep.o vatpkt.o xdsub.o audio_hp.o audio_sgi.o
 
 sfmike: $(MIKEOBJS) adpcmlib.o celplib.o libblowfish.o lpclib.o lpc10lib.o gsmlib.o deslib.o md5lib.o idealib.o libdes.o
-	$(CC) $(MIKEOBJS) adpcm/adpcm-u.o celp/celp.o des/des.a md5/md5.o idea/idea.a -lm blowfish/libblowfish.a lpc10/liblpc10.a gsm/lib/libgsm.a lpc/lpc.o libdes/libdes.a $(LFLAGS) -o sfmike
+	$(CC) $(MIKEOBJS) adpcm/adpcm-u.o celp/celp.o des/des.a -lmd idea/idea.a -lm blowfish/libblowfish.a lpc10/liblpc10.a gsm/lib/libgsm.a lpc/lpc.o libdes/libdes.a $(LFLAGS) -o sfmike
 
 LAUNCHOBJS = launch.o soundbyte.o usleep.o g711.o
 
@@ -326,12 +326,12 @@
 ECHOOBJS = echo.o codecs.o g711.o rtpacket.o ulaw.o xdsub.o
 
 sfecho: $(ECHOOBJS) md5lib.o
-	$(CC) $(ECHOOBJS) md5/md5.o adpcm/adpcm-u.o lpc/lpc.o $(LFLAGS) -o sfecho
+	$(CC) $(ECHOOBJS) -lmd adpcm/adpcm-u.o lpc/lpc.o $(LFLAGS) -o sfecho
 
 REFLECTOBJS = reflect.o codecs.o html.o g711.o rtpacket.o ulaw.o xdsub.o
 
 sfreflect: $(REFLECTOBJS) md5lib.o
-	$(CC) $(REFLECTOBJS) md5/md5.o adpcm/adpcm-u.o lpc/lpc.o $(LFLAGS) -o sfreflect
+	$(CC) $(REFLECTOBJS) -lmd adpcm/adpcm-u.o lpc/lpc.o $(LFLAGS) -o sfreflect
 
 #	Configure the voice on demand server for the platform's
 #	location of Perl and network constant definitions.
@@ -376,11 +376,11 @@
 	echo "BLOWFISH" >libblowfish.o
 
 libdes.o:
-	( echo "Building LIBDES library."; cd libdes ; make -f Makefile.sf CC="$(CC) $(CCFLAGS) $(DEBUG)" )
+	( echo "Building LIBDES library."; cd libdes ; make -f Makefile.sf CC="$(CC) $(OPTFLAGS) $(CCFLAGS) $(DEBUG)" )
 	echo "LIBDES" >libdes.o
 
 lpclib.o:
-	( echo "Building LPC library."; cd lpc ; make CC="$(CC) $(CCFLAGS) $(DEBUG)" )
+	( echo "Building LPC library."; cd lpc ; make CC="$(CC) $(OPTFLAGS) $(CCFLAGS) $(DEBUG)" )
 	echo "LPC" >lpclib.o
 
 lpc10lib.o:
