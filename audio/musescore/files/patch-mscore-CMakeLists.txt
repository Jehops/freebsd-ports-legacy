--- mscore/CMakeLists.txt.orig	2012-03-13 22:37:09.000000000 +0900
+++ mscore/CMakeLists.txt	2012-06-09 20:56:18.000000000 +0900
@@ -32,7 +32,7 @@
 set(HAS_AUDIOFILE TRUE)                   # requires libsndfile
 set(OSC           TRUE)                   # osc remote control
 
-set(BUILD_SCRIPTGEN TRUE)                 #Generate Qt script bindings. (collides with qtscriptgenerator project on several distrib)
+set(BUILD_SCRIPTGEN FALSE)                 #Generate Qt script bindings. (collides with qtscriptgenerator project on several distrib)
 set(STATIC_SCRIPT_BINDINGS FALSE)
 set(USE_SSE FALSE)
 
@@ -147,6 +147,8 @@
 ## alsa >= 1.0.0
 ##
 
+SET(BUILD_ALSA AUTO CACHE STRING "Build with support for ALSA. [ON/OFF/AUTO]")
+IF(BUILD_ALSA)
 if (APPLE OR MINGW)
 	message("Disabling ALSA support due to OS X or MINGW build.")
       set (USE_ALSA 0)
@@ -161,6 +163,11 @@
             set (HAS_MIDI 1)
       endif (NOT ALSA_INCDIR)
 endif (APPLE OR MINGW)
+ELSE(BUILD_ALSA)
+	MESSAGE(STATUS "alsa support disabled")
+      set (USE_ALSA 0)
+      set (HAS_MIDI 1)
+ENDIF(BUILD_ALSA)
 
 
 ##
@@ -215,6 +222,8 @@
 ## portaudio
 ##
 
+SET(BUILD_PORTAUDIO AUTO CACHE STRING "Build with support for portaudio. [ON/OFF/AUTO]")
+IF(BUILD_PORTAUDIO)
 if (MINGW)
       set ( USE_PORTAUDIO 1 )
       set ( USE_PORTMIDI  1 )
@@ -233,6 +242,9 @@
       set (USE_PORTMIDI 0)
    endif (APPLE)
 endif (MINGW)
+ELSE(BUILD_PORTAUDIO)
+	MESSAGE(STATUS "portaudio support disabled")
+ENDIF(BUILD_PORTAUDIO)
 
 ##
 ## produce config.h file
@@ -254,7 +266,7 @@
    )
 
 set(CMAKE_CXX_FLAGS_DEBUG   "")
-set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
+set(CMAKE_CXX_FLAGS_RELEASE "-DNDEBUG")
 
 if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")
       if (MINGW)
@@ -276,7 +288,7 @@
       add_custom_command(
          OUTPUT ${PROJECT_BINARY_DIR}/all.h.pch
          COMMAND ${CMAKE_CXX_COMPILER}
-           -x c++-header -g ${FLAGS}
+           -x c++-header ${FLAGS}
            -I${QT_INCLUDE_DIR}
            -o all.h.pch all.h
          DEPENDS ${PROJECT_BINARY_DIR}/all.h
@@ -287,7 +299,7 @@
       add_custom_command(
          OUTPUT ${PROJECT_BINARY_DIR}/all.h.gch
          COMMAND ${CMAKE_CXX_COMPILER}
-           -x c++-header -g  ${FLAGS} -m32
+           -x c++-header ${FLAGS}
            -I${QT_HEADERS_DIR}
            -o all.h.gch all.h
          DEPENDS ${PROJECT_BINARY_DIR}/all.h
@@ -324,9 +336,10 @@
    ${PROJECT_SOURCE_DIR}/mscore
    ${PROJECT_BINARY_DIR}
    ${PROJECT_BINARY_DIR}/mscore
+   ${PORTAUDIO_INCDIR}
    ${ALSA_INCDIR}
    ${JACK_INCDIR}
-   ${PORTAUDIO_INCDIR}
+   %%LOCALBASE%%/include
 )
 
 ##
@@ -421,8 +434,8 @@
 
 add_custom_target(lrelease
    COMMAND ${PROJECT_SOURCE_DIR}/gen-qt-projectfile ${PROJECT_SOURCE_DIR} > mscore.pro
-   COMMAND lrelease ${PROJECT_SOURCE_DIR}/share/locale/*.ts
-   COMMAND lrelease ${PROJECT_SOURCE_DIR}/share/plugins/musescore.com/translations/*.ts
+   COMMAND lrelease-qt4 ${PROJECT_SOURCE_DIR}/share/locale/*.ts
+   COMMAND lrelease-qt4 ${PROJECT_SOURCE_DIR}/share/plugins/musescore.com/translations/*.ts
    WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
    )
 
