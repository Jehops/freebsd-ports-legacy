--- src/SConscript.env.orig	2012-06-26 05:23:40.000000000 +0900
+++ src/SConscript.env	2012-08-09 09:03:53.000000000 +0900
@@ -19,21 +19,6 @@
     print "Deleting deprecated build file: %s" % defs
     os.remove(defs)
 
-#env.Append(CPPDEFINES=[('BUILD_REV', '"%s"' % getBZRRevision())]) #doing this forces a rebuild of everything whenever a commit happens -- not much fun
-## instead, embed BZR version into build
-## Put version info into a file, so it doesn't force a rebuild of everything :)
-f = open("build.h","w")
-try:
-    branch_name = util.get_bzr_branch_name()
-    modified = util.get_bzr_modified() > 0
-    # Do not emit BUILD_BRANCH on release branches.
-    if not branch_name.startswith('release'):
-        f.write('#define BUILD_BRANCH "%s"\n' % branch_name)
-    f.write('#define BUILD_REV "%s%s"\n' % (util.get_bzr_revision(),
-                                            '+' if modified else ''))
-finally:
-    f.close()
-
 #Check for dependencies if we're not doing a clean...
 #if not env.GetOption('clean') and not SCons.Util.containsAny(os.sys.argv, ['-h', '--help']):
 conf = Configure(env, custom_tests = { 'CheckForPKGConfig' : util.CheckForPKGConfig,
