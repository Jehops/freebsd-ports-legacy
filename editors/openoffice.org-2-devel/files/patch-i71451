--- binfilter/bf_sw/source/core/swg/sw_rdflds.cxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/core/swg/sw_rdflds.cxx	2006-11-22 10:21:16.000000000 +0100
@@ -59,7 +59,7 @@
 #include "numrule.hxx"
 namespace binfilter {
 
-static ULONG  nNewFldFmt;                       // Aktueller Format-Wert
+static UINT32  nNewFldFmt;                       // Aktueller Format-Wert
 
 
 static SwDBFieldType* In_SwDBFieldType( SwSwgReader& rPar )
@@ -597,7 +597,7 @@
 /////////////////////////////////////////////////////////////////////////////
 
 extern void sw3io_ConvertFromOldField( SwDoc& rDoc, USHORT& rWhich,
-                                       USHORT& rSubType, ULONG &rFmt,
+                                       USHORT& rSubType, UINT32 &rFmt,
                                        USHORT nVersion );
 
 SwField* SwSwgReader::InField()

--- binfilter/bf_sw/source/filter/excel/excvfbff.hxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/filter/excel/excvfbff.hxx	2006-11-22 10:13:33.000000000 +0100
@@ -38,7 +38,7 @@
 #ifndef _SOLAR_H
 #include <tools/solar.h>
 #endif
-class String; 
+class String;
 namespace binfilter {
 
 
@@ -48,7 +48,7 @@
 #if defined(BLC) || defined(MAC)
 // BLC will es auf jeden Fall hier
 typedef void				( ValueFormBuffer::*Fkt_rString )( String & );
-typedef ULONG				( ValueFormBuffer::*Fkt_USHORT )( USHORT );
+typedef sal_uInt32          ( ValueFormBuffer::*Fkt_USHORT )( USHORT );
 #endif
 
 class ValueFormBuffer
@@ -57,13 +57,13 @@
 #if !defined(BLC) && !defined(MAC)
 // MSC will es auf jeden Fall hier
 		typedef void		( ValueFormBuffer::*Fkt_rString )( String & );
-		typedef ULONG		( ValueFormBuffer::*Fkt_USHORT )( USHORT );
+        typedef sal_uInt32  ( ValueFormBuffer::*Fkt_USHORT )( USHORT );
 #endif
 
-		ULONG				*pHandles;		// Array mit Handles...
+        sal_uInt32          *pHandles;      // Array mit Handles...
 		USHORT				nMax;  			// Groesse des Arrays
 		USHORT				nCount;			// Index des naechsten freien Eintrags
-		ULONG				nDefaultHandle;
+        sal_uInt32          nDefaultHandle;
 
 		// nur fuer Excel5
 		static const USHORT nAnzBuiltin;	// bekannte Formate
@@ -76,11 +76,11 @@
 		void				Init( void );
 							// fuer 1. Nutzung
 		void				__NewValueFormat( String &rFormString );
-		ULONG				__GetValueFormat( USHORT nExcIndex );
+        sal_uInt32          __GetValueFormat( USHORT nExcIndex );
 							// fuer n-te Nutzung
 		void				_NewValueFormatX( String &rFormString );
 		void				_NewValueFormat5( String &rFormString );
-		ULONG				_GetValueFormatX5( USHORT nExcIndex );
+        sal_uInt32          _GetValueFormatX5( USHORT nExcIndex );
 	public:
 		ValueFormBuffer( const USHORT nSize = 2048 );
 		~ValueFormBuffer();

--- binfilter/bf_sw/source/filter/excel/excxfbuf.hxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/filter/excel/excxfbuf.hxx	2006-11-22 10:14:22.000000000 +0100
@@ -208,7 +208,7 @@
 		inline void		GetItemSets( USHORT nIndex, const SfxItemSet *pTxtAttr,
 							const SfxItemSet *pBoxAttr );
 
-		ULONG			GetNumFormat( USHORT nIndex );
+		sal_uInt32		GetNumFormat( USHORT nIndex );
 		void			SetItemSets( USHORT nCol, USHORT nSR, USHORT nER,
 							USHORT nXF );
 #ifdef USED

--- binfilter/bf_sw/source/filter/excel/sw_exctools.cxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/filter/excel/sw_exctools.cxx	2006-11-22 10:13:33.000000000 +0100
@@ -1167,7 +1167,7 @@
 	}
 
 // --------------------------------------------- XF_Buffer::GetNumFormat -
-UINT32 XF_Buffer::GetNumFormat( UINT16 nIndex )
+sal_uInt32 XF_Buffer::GetNumFormat( UINT16 nIndex )
 	{
 //	DBG_ASSERT( nIndex < nCount ,
 //		"+XF_Buffer::GetNumFormat(): das ist zuviel des Guten!" );

--- binfilter/bf_sw/source/filter/sw6/sw_sw6par.cxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/filter/sw6/sw_sw6par.cxx	2006-11-22 10:22:51.000000000 +0100
@@ -5001,7 +5001,7 @@
 }
 
 extern void sw3io_ConvertFromOldField( SwDoc& rDoc, USHORT& rWhich,
-										USHORT& rSubType, ULONG &rFmt,
+										USHORT& rSubType, UINT32 &rFmt,
 										USHORT nVersion );
 
 BOOL Sw6Layout::InsertLine(SwDoc &rDoc,SwPaM &rPaM,String &rStg,BOOL bLast)
@@ -5329,7 +5329,7 @@
 					case 'U':
 					{
 						USHORT nSubType = TIMEFLD, nWhich = RES_DATETIMEFLD;
-						ULONG nFormat = (ULONG)TF_SSMM_24;
+						UINT32 nFormat = (UINT32)TF_SSMM_24;
 						sw3io_ConvertFromOldField( rDoc, nWhich, nSubType,
 													nFormat, 0x0110 );
 
@@ -5351,7 +5351,7 @@
 								case 'M':eDat=DF_LMONTH; break;
 							}
 							USHORT nSubType = DATEFLD, nWhich = RES_DATETIMEFLD;
-							ULONG nFormat = (ULONG)eDat;
+							UINT32 nFormat = (UINT32)eDat;
 
 							sw3io_ConvertFromOldField( rDoc, nWhich, nSubType,
 													nFormat, 0x0110 );

--- binfilter/bf_sw/source/filter/w4w/sw_w4wpar1.cxx	2006-11-22 10:11:30.000000000 +0100
+++ binfilter/bf_sw/source/filter/w4w/sw_w4wpar1.cxx	2006-11-22 10:15:29.000000000 +0100
@@ -1918,7 +1918,7 @@
 		// tell the Formatter about the new entry
 		UINT16 nCheckPos = 0;
 		INT16  nType = NUMBERFORMAT_DEFINED;
-		ULONG  nKey;
+		sal_uInt32  nKey;
 
 		pFormatter->PutandConvertEntry( *pFirst, nCheckPos, nType, nKey,
 										LANGUAGE_GERMAN,
