Update to newest cpp-uno bridge from Linux x86-64.

Index: bridges/source/cpp_uno/gcc3_freebsd_x86-64/abi.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_freebsd_x86-64/abi.cxx,v
retrieving revision 1.3
diff -u -r1.3 abi.cxx
--- bridges/source/cpp_uno/gcc3_freebsd_x86-64/abi.cxx	16 Sep 2006 15:46:23 -0000	1.3
+++ bridges/source/cpp_uno/gcc3_freebsd_x86-64/abi.cxx	12 Apr 2008 00:10:44 -0000
@@ -358,6 +358,8 @@
             case X86_64_SSEDF_CLASS:
                 *pStructAlign++ = *reinterpret_cast<sal_uInt64 *>( *pSSE++ );
                 break;
+            default:
+                break;
         }
 }
 
Index: bridges/source/cpp_uno/gcc3_freebsd_x86-64/cpp2uno.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_freebsd_x86-64/cpp2uno.cxx,v
retrieving revision 1.4
diff -u -r1.4 cpp2uno.cxx
--- bridges/source/cpp_uno/gcc3_freebsd_x86-64/cpp2uno.cxx	27 Feb 2008 09:49:58 -0000	1.4
+++ bridges/source/cpp_uno/gcc3_freebsd_x86-64/cpp2uno.cxx	12 Apr 2008 00:10:44 -0000
@@ -82,8 +82,8 @@
 	void ** gpreg, void ** fpreg, void ** ovrflw,
 	sal_uInt64 * pRegisterReturn /* space for register return */ )
 {
-	int nr_gpr = 0; //number of gpr registers used 
-	int nr_fpr = 0; //number of fpr regsiters used
+	unsigned int nr_gpr = 0; //number of gpr registers used
+	unsigned int nr_fpr = 0; //number of fpr registers used
        
 	// return
 	typelib_TypeDescription * pReturnTypeDescr = 0;
@@ -500,7 +500,6 @@
 {
 	(*slots) -= functionCount;
 	Slot * s = *slots;
-
 	for ( sal_Int32 nPos = 0; nPos < type->nMembers; ++nPos )
 	{
 		typelib_TypeDescription * pTD = 0;
Index: bridges/source/cpp_uno/gcc3_freebsd_x86-64/except.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_freebsd_x86-64/except.cxx,v
retrieving revision 1.4
diff -u -r1.4 except.cxx
--- bridges/source/cpp_uno/gcc3_freebsd_x86-64/except.cxx	5 Jul 2007 09:01:44 -0000	1.4
+++ bridges/source/cpp_uno/gcc3_freebsd_x86-64/except.cxx	12 Apr 2008 00:10:44 -0000
@@ -180,8 +180,8 @@
         else
         {
             // try to lookup the symbol in the generated rtti map
-            t_rtti_map::const_iterator iFind( m_generatedRttis.find( unoName ) );
-            if (iFind == m_generatedRttis.end())
+            t_rtti_map::const_iterator iFind2( m_generatedRttis.find( unoName ) );
+            if (iFind2 == m_generatedRttis.end())
             {
                 // we must generate it !
                 // symbol and rtti-name is nearly identical,
@@ -210,7 +210,7 @@
             }
             else // taking already generated rtti
             {
-                rtti = iFind->second;
+                rtti = iFind2->second;
             }
         }
     }
Index: bridges/source/cpp_uno/gcc3_freebsd_x86-64/uno2cpp.cxx
===================================================================
RCS file: /cvs/udk/bridges/source/cpp_uno/gcc3_freebsd_x86-64/uno2cpp.cxx,v
retrieving revision 1.4
diff -u -r1.4 uno2cpp.cxx
--- bridges/source/cpp_uno/gcc3_freebsd_x86-64/uno2cpp.cxx	5 Jul 2007 09:02:53 -0000	1.4
+++ bridges/source/cpp_uno/gcc3_freebsd_x86-64/uno2cpp.cxx	12 Apr 2008 00:10:44 -0000
@@ -73,13 +73,13 @@
     // Let's figure out what is really going on here
     {
         fprintf( stderr, "= callVirtualMethod() =\nGPR's (%d): ", nGPR );
-        for ( int i = 0; i < nGPR; ++i )
+        for ( unsigned int i = 0; i < nGPR; ++i )
             fprintf( stderr, "0x%lx, ", pGPR[i] );
         fprintf( stderr, "\nFPR's (%d): ", nFPR );
-        for ( int i = 0; i < nFPR; ++i )
+        for ( unsigned int i = 0; i < nFPR; ++i )
             fprintf( stderr, "%f, ", pFPR[i] );
         fprintf( stderr, "\nStack (%d): ", nStack );
-        for ( int i = 0; i < nStack; ++i )
+        for ( unsigned int i = 0; i < nStack; ++i )
             fprintf( stderr, "0x%lx, ", pStack[i] );
         fprintf( stderr, "\n" );
     }
@@ -328,6 +328,8 @@
 			case typelib_TypeClass_DOUBLE:
 				INSERT_FLOAT_DOUBLE( pCppArgs[nPos], nFPR, pFPR, pStack );
 				break;
+			default:
+				break;
 			}
 
 			// no longer needed
@@ -440,16 +442,19 @@
 	// is my surrogate
 	bridges::cpp_uno::shared::UnoInterfaceProxy * pThis
 		= static_cast< bridges::cpp_uno::shared::UnoInterfaceProxy * >(pUnoI);
+#if OSL_DEBUG_LEVEL > 0
 	typelib_InterfaceTypeDescription * pTypeDescr = pThis->pTypeDescr;
+#endif
 	
 	switch (pMemberDescr->eTypeClass)
 	{
 	case typelib_TypeClass_INTERFACE_ATTRIBUTE:
 	{
+#if OSL_DEBUG_LEVEL > 0
 		// determine vtable call index
 		sal_Int32 nMemberPos = ((typelib_InterfaceMemberTypeDescription *)pMemberDescr)->nPosition;
 		OSL_ENSURE( nMemberPos < pTypeDescr->nAllMembers, "### member pos out of range!" );
-		
+#endif
 		VtableSlot aVtableSlot(
 				getVtableSlot(
 					reinterpret_cast<
@@ -494,10 +499,11 @@
 	}
 	case typelib_TypeClass_INTERFACE_METHOD:
 	{
+#if OSL_DEBUG_LEVEL > 0
 		// determine vtable call index
 		sal_Int32 nMemberPos = ((typelib_InterfaceMemberTypeDescription *)pMemberDescr)->nPosition;
 		OSL_ENSURE( nMemberPos < pTypeDescr->nAllMembers, "### member pos out of range!" );
-		
+#endif
 		VtableSlot aVtableSlot(
 				getVtableSlot(
 					reinterpret_cast<
