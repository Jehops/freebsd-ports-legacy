--- configure.in.orig	Fri Aug  4 11:49:59 2000
+++ configure.in	Fri Sep  8 16:12:55 2000
@@ -1053,6 +1053,7 @@
 dnl Straightforward OS determination
 case "$canonical" in
   *-*-linux*    ) opsys=linux ;;
+  *-*-freebsd* ) opsys=freebsd ;;
   *-*-netbsd*   ) opsys=netbsd ;;
   *-*-openbsd*	) opsys=openbsd ;;
   *-*-nextstep* ) opsys=nextstep ;;
@@ -3052,21 +3053,24 @@
     test "$ac_cv_func_crypt" != "yes" && { AC_CHECK_LIB(crypt, crypt) }
   fi
   dnl Back to our regularly scheduled wnn hunting
-  if test -z "$with_wnn" -o "$with_wnn" = "yes"; then
-    AC_CHECK_LIB(wnn,jl_dic_list_e,libwnn=wnn,
-      AC_CHECK_LIB(wnn4,jl_dic_list_e,libwnn=wnn4,
-	AC_CHECK_LIB(wnn6,jl_dic_list_e,libwnn=wnn6,
-	  AC_CHECK_LIB(wnn6_fromsrc,dic_list_e,libwnn=wnn6_fromsrc,with_wnn=no))))
+  if test "$with_wnn6" = "yes"; then
+    AC_CHECK_LIB(wnn6,jl_fi_dic_list_e,libwnn=wnn6,
+      AC_CHECK_LIB(wnn6_fromsrc,jl_fi_dic_list_e,libwnn=wnn6_fromsrc,
+	AC_CHECK_LIB(wnn,jl_fi_dic_list_e,libwnn=wnn, [with_wnn6=no; with_wnn=no])))
+  else
+    if test -z "$with_wnn" -o "$with_wnn" = "yes"; then
+      AC_CHECK_LIB(wnn,jl_dic_list_e,libwnn=wnn,
+	AC_CHECK_LIB(wnn4,jl_dic_list_e,libwnn=wnn4,
+	  AC_CHECK_LIB(wnn6,jl_fi_dic_list_e,[libwnn=wnn6; with_wnn6=yes],
+	    AC_CHECK_LIB(wnn6_fromsrc,jl_fi_dic_list_e, [libwnn=wnn6_fromsrc; with_wnn6=yes],with_wnn=no))))
+    fi
   fi
   test -z "$with_wnn" && with_wnn=yes
   if test "$with_wnn" = "yes"; then
     AC_DEFINE(HAVE_WNN)
     XE_PREPEND(-l$libwnn, libs_x)
     XE_ADD_OBJS(mule-wnnfns.o)
-    if test "$with_wnn6" != "no"; then
-      AC_CHECK_LIB($libwnn, jl_fi_dic_list, with_wnn6=yes)
-      test "$with_wnn6" = "yes" && AC_DEFINE(WNN6)
-    fi
+    test "$with_wnn6" = "yes" && AC_DEFINE(WNN6)
   fi
 
   dnl Autodetect canna
@@ -3579,7 +3583,7 @@
 dnl Check for Berkeley DB.
 if test "$with_database_berkdb" != "no"; then
   AC_MSG_CHECKING(for Berkeley db.h)
-  for path in "db/db.h" "db.h"; do
+  for path in "/usr/include/db.h" "db/db.h" "db.h"; do
     AC_TRY_COMPILE([
 #include <stdlib.h>
 #if !(defined __GLIBC__ && __GLIBC_MINOR__ >= 1)
