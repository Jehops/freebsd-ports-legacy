--- configure.in.orig	Wed Mar 27 20:32:56 2002
+++ configure.in	Tue Apr  2 23:56:37 2002
@@ -103,6 +103,12 @@
 
                           Usage: --with-asm-home=<path to ml.exe directory>
 ],,)
+AC_ARG_WITH(os-version,
+[  --with-os-version       For FreeBSD users, use this option option to build OpenOffice
+                          with the correct OSVERSION.
+
+                          Usage: --with-os-version=<OSVERSION>
+],,)
 AC_ARG_WITH(unzip-home,
 [  --with-unzip-home         For Windows users, please supply the path for 
                           unzip.exe.
@@ -277,13 +283,13 @@
 
    if test $GCC; then
       AC_MSG_CHECKING([the GNU gcc compiler version])
-      _gcc_releasetype=`$GCC --version | $AWK -F"-" '{ print \$1 }'`
+      _gcc_releasetype=`$CC --version | $AWK -F"-" '{ print \$1 }'`
       if test "$_gcc_releasetype" = "egcs"; then
          AC_MSG_WARN([found egcs- version,  use (stable=gcc-) version of the compiler])
          AC_MSG_WARN([found egcs- version,  use (stable=gcc-) version of the compiler]) >> warn
-         _gcc_version=`$GCC --version | $AWK -F"-" '{ print \$2 }'`
+         _gcc_version=`$CC --version | $AWK -F"-" '{ print \$2 }'`
       else
-         _gcc_version=`$GCC --version`
+         _gcc_version=`$CC --version`
       fi
       _gcc_major=`echo $_gcc_version | $AWK -F. '{ print \$1 }'` 
       if test -n "$enable_gcc3"; then 
@@ -296,13 +302,13 @@
            AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
            COMPATH="NO_GCC"
         else
-           _gcc_middle=`$GCC --version | $AWK -F. '{ if ($2 != 95) print "false"; else print "true" }'` 
+           _gcc_middle=`$CC --version | $AWK -F. '{ if ($2 != 95) print "false"; else print "true" }'` 
            if test "$_gcc_middle" = "false"; then
               AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler])
               AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
               COMPATH="NO_GCC"
            else
-              _gcc_minor=`$GCC --version | $AWK -F. '{ if ($3 < 2) print "false"; else print "true" }'` 
+              _gcc_minor=`$CC --version | $AWK -F. '{ if ($3 < 2) print "false"; else print "true" }'` 
               if test "$_gcc_minor" = "false"; then
                  AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler])
                  AC_MSG_WARN([found version "$_gcc_version", use version 2.95.2+ of the gcc compiler]) >> warn
@@ -367,7 +373,8 @@
                   fi
                else
 		if test "$_os" = "FreeBSD" -o "$_os" = "NetBSD" ; then
-                  _gcc_include_path="/usr/include/g++"
+                  _gcc_include_path="/usr"
+                  _gxx_include_path="/usr/include/g++"
 		else
                   AC_MSG_WARN([could not find 2.95.2/include directory of the gcc compiler])
                   AC_MSG_WARN([could not find 2.95.2/include directory of the gcc compiler]) >> warn
@@ -815,6 +822,10 @@
    fi
    if test "$_os" = "FreeBSD" -o "$_os" = "NetBSD"; then
       _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
+      _jdk_middle3=`echo $_jdk | $AWK -F. '{ if ($2 != 3) print "false"; else print "true" }'`
+      if test "$_jdk_middle" = "false" -a "$_jdk_middle3" = "true"; then
+         _jdk_minor="true"
+      fi
    fi
    if test "$_os" = "Linux" -a "$_machine_type" = "sparc"; then
       _jdk_middle=`echo $_jdk | $AWK -F. '{ if ($2 != 2) print "false"; else print "true" }'`
@@ -1182,7 +1193,7 @@
 
 # Executing the set_soenv script to setup the environment variables.
 if test -z "$enable_check_only"; then
-   './set_soenv' $COMPATH $_gcc_include_path $_gxx_include_path $JAVA_HOME $TCSH $PERL $x_libraries $x_includes $_LOCAL_SOLENV $_LOCAL_SOLVER $upd $CYGWIN $STLPORT4 $enable_xprint $with_lang $with_asm_home $with_unzip_home $WITH_MINGWIN $with_use_shell $USE_GCC3
+   './set_soenv' $COMPATH $_gcc_include_path $_gxx_include_path $JAVA_HOME $TCSH $PERL $x_libraries $x_includes $_LOCAL_SOLENV $_LOCAL_SOLVER $upd $CYGWIN $STLPORT4 $enable_xprint $with_lang $with_asm_home $with_unzip_home $WITH_MINGWIN $with_use_shell $USE_GCC3 $with_os_version $PTHREAD_CFLAGS $PTHREAD_LIBS
 else
    echo
    echo Test Complete
