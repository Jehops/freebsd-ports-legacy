--- configure.ac.orig	2013-06-11 05:33:38.000000000 -0400
+++ configure.ac	2013-06-24 17:44:14.000000000 -0400
@@ -3617,7 +3617,7 @@
         PLATFORMID=freebsd_x86
         OUTPATH=unxfbsdi
         ;;
-    x86_64)
+    amd64|x86_64)
         CPU=X
         CPUNAME=X86_64
         RTL_ARCH=X86_64
@@ -6261,21 +6261,13 @@
             JAVA_ARCH="i386"
             JAVA_TOOLKIT="client"
             ;;
-        x86_64)
-            if test "`echo $JAVA_HOME | sed -e 's,.*/,,'`" = "linux"; then
-                JAVA_ARCH="i386"
-                JAVA_TOOLKIT="client"
-            else
-                JAVA_ARCH="amd64"
-                JAVA_TOOLKIT="server"
-            fi
+        amd64|x86_64)
+            JAVA_ARCH="amd64"
+            JAVA_TOOLKIT="server"
             ;;
         esac
         SOLARINC="$SOLARINC -I$JAVA_HOME/include"
         SOLARINC="$SOLARINC -I$JAVA_HOME/include/freebsd"
-        SOLARINC="$SOLARINC -I$JAVA_HOME/include/bsd"
-        SOLARINC="$SOLARINC -I$JAVA_HOME/include/linux"
-        SOLARINC="$SOLARINC -I$JAVA_HOME/include/native_threads/include"
         ;;
 
     k*bsd*-gnu*)
@@ -7909,9 +7901,13 @@
     AC_MSG_CHECKING([which hash container mdds shall use])
     if test "x$HAVE_CXX0X" = "xTRUE"; then
         MDDS_CPPFLAGS="-std=gnu++0x"
+    else
+        MDDS_CPPFLAGS="-std=gnu++98"
+    fi
+    if test "x`basename $GXX_INCLUDE_PATH 2>/dev/null`" != "x4.2"; then
         AC_MSG_RESULT([std::unordered_map])
     else
-        MDDS_CPPFLAGS="-DMDDS_HASH_CONTAINER_BOOST"
+        MDDS_CPPFLAGS="$MDDS_CPPFLAGS -DMDDS_HASH_CONTAINER_BOOST"
         AC_MSG_RESULT([boost::unordered_map])
     fi
 
@@ -8278,7 +8274,7 @@
 dnl ===================================================================
 
 AC_MSG_CHECKING([whether to enable graphite support])
-if test "$_os" = "WINNT" -o "$_os" = "Linux" && test "$enable_graphite" = "" -o "$enable_graphite" != "no"; then
+if test "$_os" = "WINNT" -o "$_os" = "Linux" -o "$_os" = "FreeBSD" && test "$enable_graphite" = "" -o "$enable_graphite" != "no"; then
     AC_MSG_RESULT([yes])
     ENABLE_GRAPHITE="TRUE"
     AC_MSG_CHECKING([which graphite to use])
@@ -8530,8 +8526,8 @@
     AC_MSG_RESULT([external])
     # Mac OS builds should get out without extra stuff is the Mac porters'
     # wish. And pkg-config is although Xcode ships a .pc for openssl
-    if test "$_os" = "Darwin" -o "$_os" = "NetBSD" -o "$_os" = "OpenBSD" -o \
-            "$_os" = "DragonFly"; then
+    if test "$_os" = "Darwin" -o "$_os" = "FreeBSD" -o "$_os" = "NetBSD" -o \
+            "$_os" = "OpenBSD" -o "$_os" = "DragonFly"; then
         OPENSSL_CFLAGS=
         OPENSSL_LIBS="-lssl -lcrypto"
     else
@@ -8584,7 +8580,7 @@
 if test "$with_system_orcus" = "yes"; then
     AC_MSG_RESULT([external])
     SYSTEM_LIBORCUS=YES
-    PKG_CHECK_MODULES(ORCUS, liborcus-0.4 >= 0.3.0)
+    PKG_CHECK_MODULES(ORCUS, liborcus-0.6 >= 0.5.0)
 else
     AC_MSG_RESULT([internal])
     BUILD_TYPE="$BUILD_TYPE ORCUS"
@@ -10396,10 +10392,10 @@
 
     dnl Check for Meta Object Compiler
 
-    AC_PATH_PROG( MOCQT4, moc-qt4, no, [`dirname $qt_lib_dir`/bin:$QT4DIR/bin:$PATH] )
+    AC_PATH_PROG( MOCQT4, moc-qt4, no, [$QT4DIR/bin:$PATH] )
     MOC4="$MOCQT4"
     if test "$MOC4" = "no"; then
-        AC_PATH_PROG( MOC4, moc, no, [`dirname $qt_lib_dir`/bin:$QT4DIR/bin:$PATH] )
+        AC_PATH_PROG( MOC4, moc, no, [$QT4DIR/bin:$PATH] )
         if test "$MOC4" = "no"; then
             AC_MSG_ERROR([Qt Meta Object Compiler not found.  Please specify
 the root of your Qt installation by exporting QT4DIR before running "configure".])
