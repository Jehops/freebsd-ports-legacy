--- configure.orig	2008-03-20 16:57:56.000000000 +0300
+++ configure	2009-03-07 23:40:53.000000000 +0300
@@ -20182,113 +20182,10 @@
 { echo "$as_me:$LINENO: checking for LIBUSB" >&5
 echo $ECHO_N "checking for LIBUSB... $ECHO_C" >&6; }
 
-if test -n "$PKG_CONFIG"; then
-    if test -n "$LIBUSB_CFLAGS"; then
-        pkg_cv_LIBUSB_CFLAGS="$LIBUSB_CFLAGS"
-    else
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"\"libusb\"\"") >&5
-  ($PKG_CONFIG --exists --print-errors ""libusb"") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_LIBUSB_CFLAGS=`$PKG_CONFIG --cflags ""libusb"" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-    fi
-else
-	pkg_failed=untried
-fi
-if test -n "$PKG_CONFIG"; then
-    if test -n "$LIBUSB_LIBS"; then
-        pkg_cv_LIBUSB_LIBS="$LIBUSB_LIBS"
-    else
-        if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"\"libusb\"\"") >&5
-  ($PKG_CONFIG --exists --print-errors ""libusb"") 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; then
-  pkg_cv_LIBUSB_LIBS=`$PKG_CONFIG --libs ""libusb"" 2>/dev/null`
-else
-  pkg_failed=yes
-fi
-    fi
-else
-	pkg_failed=untried
-fi
-
-
-
-if test $pkg_failed = yes; then
-
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi
-        if test $_pkg_short_errors_supported = yes; then
-	        LIBUSB_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors ""libusb""`
-        else
-	        LIBUSB_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors ""libusb""`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$LIBUSB_PKG_ERRORS" >&5
-
-	{ { echo "$as_me:$LINENO: error: Package requirements (\"libusb\") were not met:
-
-$LIBUSB_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables LIBUSB_CFLAGS
-and LIBUSB_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-" >&5
-echo "$as_me: error: Package requirements (\"libusb\") were not met:
-
-$LIBUSB_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-Alternatively, you may set the environment variables LIBUSB_CFLAGS
-and LIBUSB_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-" >&2;}
-   { (exit 1); exit 1; }; }
-elif test $pkg_failed = untried; then
-	{ { echo "$as_me:$LINENO: error: The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables LIBUSB_CFLAGS
-and LIBUSB_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details." >&5
-echo "$as_me: error: The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-Alternatively, you may set the environment variables LIBUSB_CFLAGS
-and LIBUSB_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.
-See \`config.log' for more details." >&2;}
-   { (exit 1); exit 1; }; }
-else
-	LIBUSB_CFLAGS=$pkg_cv_LIBUSB_CFLAGS
-	LIBUSB_LIBS=$pkg_cv_LIBUSB_LIBS
+	LIBUSB_CFLAGS=""
+	LIBUSB_LIBS="-lusb"
         { echo "$as_me:$LINENO: result: yes" >&5
 echo "${ECHO_T}yes" >&6; }
-	:
-fi
-
 
 
 # check for OpenSSL's libcrypto
