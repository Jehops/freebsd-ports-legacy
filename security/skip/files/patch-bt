diff -ur --unidirectional-new-file skipsrc-1.0.orig/skip/freebsd/skip_if.h work.new/skip/freebsd/skip_if.h
--- skipsrc-1.0.orig/skip/freebsd/skip_if.h	Fri Oct 25 13:12:43 1996
+++ work.new/skip/freebsd/skip_if.h	Mon Jan 24 12:35:39 2000
@@ -86,7 +86,9 @@
 	struct skip_es	*next;
 	char		if_name[SKIPSZ];/* e.g. "le0" */
 	struct ifnet	*ifp;		/* network interface */
-	int		(*if_output)();	/* default output handler */
+	int		(*if_output)	/* default output handler */
+			    (struct ifnet *, struct mbuf *,
+			    struct sockaddr *, struct rtentry *);
 	void		*sd;		/* skip descriptor */
 	unsigned char	if_mode;	/* interface mode */
 	int		notifier;	/* who to send events to */
@@ -104,7 +106,7 @@
 /*
  * returns TRUE if SKIP has processed this buffer
  */
-#define	SKIP_DECRYPTED(m)	((m)->m_flags & M_EOR)
+#define	SKIP_DECRYPTED(m)	((m)->m_flags & M_PROTO1)
 
 /* 
  * Macro to retrieve an ifnet 
@@ -114,14 +116,15 @@
 /*
  * function prototypes
  */
+
+int			skip_init(void);
+int			skip_uninit(void);
 int			skip_ifopen(dev_t, int, int, struct proc *);
 int			skip_ifclose(dev_t, int, int, struct proc *);
-int			skip_ifioctl(dev_t, int, caddr_t, int, struct proc *);
-int			skip_ifselect(dev_t, int, struct proc *);
+int			skip_ifioctl(dev_t, u_long, caddr_t, int, struct proc *);
+int			skip_ifpoll(dev_t, int, struct proc *);
 int			skip_ifwrite(dev_t, struct uio *, int);
 int			skip_ifread(dev_t, struct uio *, int);
-
-void 			skip_key_tellkm( enum skip_msgs, skip_keycb_t *);
 
 /*
  * exported functions
