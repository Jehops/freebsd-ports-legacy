The package includes

libssl.a:
	My implementation of SSLv2, SSLv3 and the required code to support
	both SSLv2 and SSLv3 in the one server.

libcrypto.a:
	General encryption and X509 stuff needed by SSL but not
	actually logically part of it.  It includes routines for the following:

  Ciphers
	libdes - My libdes DES encryption package which has been floating
		around the net for a few years.  It includes 15
		'modes/variations' of DES (1, 2 and 3 key versions of ecb,
		cbc, cfb and ofb; pcbc and a more general form of cfb and ofb)
		including desx in cbc mode,
		a fast crypt(3), and routines to read passwords from the
		keyboard.
	RC4 encryption,
	RC2 encryption 		- 4 different modes, ecb, cbc, cfb and ofb.
	Blowfish encryption	- 4 different modes, ecb, cbc, cfb and ofb.
	IDEA encryption		- 4 different modes, ecb, cbc, cfb and ofb.

  Digests
	MD5 and MD2 message digest algorithms, fast implementations,
	SHA (SHA-0) and SHA-1 message digest algorithms,
	MDC2 message digest.  A DES based hash that is polular on smart cards.

  Public Key
	RSA encryption/decryption/generation.  There is no limit
		on the number of bits.
	DSA encryption/decryption/generation.   There is no limit on the
		number of bits.
	Diffie-Hellman key-exchange/key generation.  There is no limit
		on the number of bits.

  X509v3 certificates
	X509 encoding/decoding into/from binary ASN1 and a PEM
		based ascii-binary encoding which supports encryption with
		a private key.
	Program to generate RSA and DSA certificate requests and to
		generate RSA and DSA certificates.

  Systems
  	The normal digital envelope routines and base64 encoding.
	Higher level access to ciphers and digests by name.  New ciphers can be
		loaded at run time.
	The BIO io system which is a simple non-blocking IO abstraction.
		Current methods supported are file descriptors, sockets,
		socket accept, socket connect, memory buffer, buffering,
		SSL client/server, file pointer, encryption, digest,
		non-blocking testing and null.
  Data structures
  	A dynamically growing hashing system
	A simple stack.
	A Configuration loader that uses a format similar to MS .ini files.

Programs in this package include
	enc	- a general encryption program that can encrypt/decrypt using
		one of 17 different cipher/mode combinations.  The
		input/output can also be converted to/from base64
		ascii encoding.
	dgst	- a generate message digesting program that will generate
		message digests for any of md2, md5, sha (sha-0 or sha-1)
		or mdc2.
	asn1parse - parse and display the structure of an asn1 encoded
		binary file.
	rsa	- Manipulate RSA private keys.
	dsa	- Manipulate DSA private keys.
	dh	- Manipulate Diffie-Hellman parameter files.
	dsaparam- Manipulate and generate DSA parameter files.
	crl	- Manipulate certificate revocation lists.
	crt2pkcs7- Generate a pkcs7 object containing a crl and a certificate.
	x509	- Manipulate x509 certificates, self-sign certificates.
	req	- Manipulate PKCS#10 certificate requests and also
		  generate certificate requests.
	genrsa  - Generates an arbitrary sized RSA private key.
	gendh	- Generates a set of Diffie-Hellman parameters, the prime
		  will be a strong prime.
	ca	- Create certificates from PKCS#10 certificate requests.
		  This program also maintains a database of certificates
		  issued.
	verify	- Check x509 certificate signatures.
	speed	- Benchmark SSLeay's ciphers.
	s_server- A test SSL server.
	s_client- A test SSL client.
	s_time	- Benchmark SSL performance of SSL server programs.
	errstr	- Convert from SSLeay hex error codes to a readable form.
