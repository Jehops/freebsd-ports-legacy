--- tools/greenbone-scapdata-sync.in	2016-11-10 04:58:06.000000000 -0500
+++ tools/greenbone-scapdata-sync.in	2017-08-05 22:42:35.986283000 -0500
@@ -1080,11 +1080,11 @@
       then
         for ovalfile in $oval_files_sorted_private
         do
-          filedate=`stat -c "%Y" "$ovalfile" | cut -d " " -f 1 | tr -d "-"`
+          filedate=`stat -c "%m" "$ovalfile" | cut -d " " -f 1 | tr -d "-"`
           filedate=$(( $filedate - ( $filedate % 60 ) ))
           if [ $filedate -gt $DB_LASTUPDATE ] || [ 1 = "$REBUILD_OVAL" ]
           then
-            oval_timestamp=`xsltproc "$SCAP_RES_DIR/oval_timestamp.xsl" "$ovalfile" | date "+%s" -f -`
+            oval_timestamp=`date -j -f "%Y-%m-%dT%H:%M:%S" $(xsltproc "$SCAP_RES_DIR/oval_timestamp.xsl" "$ovalfile" | cut -d "." -f1) +%s`
 
             if [ 1 = "$REBUILD_OVAL" ]
             then
@@ -1153,7 +1153,7 @@
     DIR_STR_LENGTH=$((`echo "$SCAP_DIR" | wc -c` + 1))
 
     oval_files_shortened=""
-    if [ 0 != "$xmlcount" ]
+    if [ "$xmlcount" -ne 0 ]
     then
       for ovalfile in $oval_files_sorted_private
       do
@@ -1163,7 +1163,7 @@
     fi
 
     oval_files_clause=""
-    if [ ! -z "$oval_files_shortened" ]
+    if [ "$oval_files_shortened" =! "" ]
     then
       oval_files_clause="AND (xml_file NOT IN ($oval_files_shortened))"
     fi
@@ -1186,7 +1186,7 @@
     fi
 
     # TODO: This is not quite accurate as it uses the timestamp of the non-private data.
-    LAST_UPDATE_TIMESTAMP=`sed 's/^\(.\{8\}\)/\1 /' $TIMESTAMP | date +%s -f -`
+    LAST_UPDATE_TIMESTAMP=`date -j -f '%Y%m%d%H%M%S' $(sed 's/$/00/g' $TIMESTAMP) +%s`
 
     reset_sql_tries
     until [ "$try_sql" -eq 0 ]
@@ -1208,12 +1208,12 @@
     CPEBASE="$SCAP_DIR/official-cpe-dictionary_v2.2.xml"
     if [ -e $CPEBASE ]
     then
-      filedate=`stat -c "%Y" "$CPEBASE" | cut -d " " -f 1 | tr -d "-"`
+      filedate=`stat -c "%m" "$CPEBASE" | cut -d " " -f 1 | tr -d "-"`
       filedate=$(( $filedate - ( $filedate % 60 ) ))
       if [ $filedate -gt $DB_LASTUPDATE ]
       then
         log_info "Updating CPEs"
-        filesize=`stat -c "%s" "$CPEBASE"`
+        filesize=`stat -f "%z" "$CPEBASE"`
         if [ "0" -ne "$SPLIT_PART_SIZE" ] && [ "$filesize" -gt $(($SPLIT_PART_SIZE * 1024))  ]
         then
           log_info "File is larger than ${SPLIT_PART_SIZE}k. Splitting into multiple parts"
@@ -1271,13 +1271,13 @@
       for cvefile in $SCAP_DIR/nvdcve-2.0-*.xml
       do
         [ -e "$cvefile" ] || break  # no file found
-        filedate=`stat -c "%Y" "$cvefile" | cut -d " " -f 1 | tr -d "-"`
+        filedate=`stat -c "%m" "$cvefile" | cut -d " " -f 1 | tr -d "-"`
         filedate=$(( $filedate - ( $filedate % 60 ) ))
         if [ $filedate -gt $DB_LASTUPDATE ]
         then
           log_info "Updating $cvefile"
 
-          filesize=`stat -c "%s" "$cvefile"`
+          filesize=`stat -f "%z" "$cvefile"`
           if [ "0" -ne "$SPLIT_PART_SIZE" ] && [ "$filesize" -gt $(($SPLIT_PART_SIZE * 1024)) ]
           then
             log_info "File is larger than ${SPLIT_PART_SIZE}k. Splitting into multiple parts"
@@ -1347,11 +1347,11 @@
 
       for ovalfile in $oval_files_sorted
       do
-        filedate=`stat -c "%Y" "$ovalfile" | cut -d " " -f 1 | tr -d "-"`
+        filedate=`stat -c "%m" "$ovalfile" | cut -d " " -f 1 | tr -d "-"`
         filedate=$(( $filedate - ( $filedate % 60 ) ))
         if [ $filedate -gt $DB_LASTUPDATE ] || [ 1 = "$REBUILD_OVAL" ]
         then
-          oval_timestamp=`xsltproc "$SCAP_RES_DIR/oval_timestamp.xsl" "$ovalfile" | date "+%s" -f -`
+          oval_timestamp=`date -j -f '%Y-%m-%dT%H:%M:%S' $(xsltproc "$SCAP_RES_DIR/oval_timestamp.xsl" "$ovalfile" | cut -d "." -f1) +%s`
 
           if [ 1 = "$REBUILD_OVAL" ]
           then
@@ -1403,7 +1403,7 @@
   update_cvss
   update_placeholders
 
-  LAST_UPDATE_TIMESTAMP=`sed 's/^\(.\{8\}\)/\1 /' $TIMESTAMP | env TZ="UTC" date +%s -f -`
+  LAST_UPDATE_TIMESTAMP=`date -j -f '%Y%m%d%H%M%S' $(sed 's/$/00/g' $TIMESTAMP) +%s`
 
   reset_sql_tries
   until [ "$try_sql" -eq 0 ]
@@ -1635,7 +1635,7 @@
 then
   if [ -f "$SCAP_DB" ]
   then
-    if [ "$(id -u)" -ne "$(stat -c %u $SCAP_DB)" ]
+    if [ "$(id -u)" -ne "$(stat -f %u $SCAP_DB)" ]
     then
         log_err "Not synchronizing or updating the database since the current user is not the owner of the database."
         echo "Not synchronizing or updating the database since the current user is not the owner of the database."
