diff -ruN --exclude '*.orig' ../deps/esip/src/esip.erl ../deps/esip/src/esip.erl
--- ../deps/esip/src/esip.erl	2015-01-14 12:52:19.000000000 +0100
+++ ../deps/esip/src/esip.erl	2015-06-25 10:20:59.000000000 +0200
@@ -739,7 +739,7 @@
 %% gen_server callbacks
 %%====================================================================
 init([]) ->
-    {A, B, C} = now(),
+    {A, B, C} = erlang:timestamp(),
     random:seed(A, B, C),
     ets:new(esip_config, [named_table, public]),
     set_config([]),
diff -ruN --exclude '*.orig' ../deps/esip/src/esip_codec.erl ../deps/esip/src/esip_codec.erl
--- ../deps/esip/src/esip_codec.erl	2015-01-14 12:52:19.000000000 +0100
+++ ../deps/esip/src/esip_codec.erl	2015-06-25 10:21:17.000000000 +0200
@@ -1334,10 +1334,10 @@
     io:format("~n== Estimate: ~p~n", [T div N]).
 
 test_loop(P, Msg, N) ->
-    test_loop(P, Msg, N, now()).
+    test_loop(P, Msg, N, erlang:timestamp()).
 
 test_loop(P, _, 0, T) ->
-    P ! {ok, timer:now_diff(now(), T)};
+    P ! {ok, timer:now_diff(erlang:timestamp(), T)};
 test_loop(P, Msg, N, T) ->
     decode(Msg),
     test_loop(P, Msg, N-1, T).
diff -ruN --exclude '*.orig' ../deps/esip/src/esip_transaction.erl ../deps/esip/src/esip_transaction.erl
--- ../deps/esip/src/esip_transaction.erl	2015-01-14 12:52:19.000000000 +0100
+++ ../deps/esip/src/esip_transaction.erl	2015-06-25 10:20:38.000000000 +0200
@@ -205,9 +205,9 @@
 maybe_report_error(Type, N) ->
     case ets:lookup(?MODULE, {last_error_report, Type}) of
         [{_, Now}] ->
-            case timer:now_diff(now(), Now) of
+            case timer:now_diff(erlang:timestamp(), Now) of
                 T when T > 60000000 ->
-                    ets:insert(?MODULE, {{last_error_report, Type}, now()}),
+                    ets:insert(?MODULE, {{last_error_report, Type}, erlang:timestamp()}),
                     ?ERROR_MSG("too many ~s transactions: ~p", [Type, N]);
                 _ ->
                     ok
diff -ruN --exclude '*.orig' ../deps/p1_cache_tab/src/cache_tab.erl ../deps/p1_cache_tab/src/cache_tab.erl
--- ../deps/p1_cache_tab/src/cache_tab.erl	2015-01-14 12:52:24.000000000 +0100
+++ ../deps/p1_cache_tab/src/cache_tab.erl	2015-06-25 10:22:59.000000000 +0200
@@ -405,7 +405,7 @@
     [get_proc(Tab, N) || N <- lists:seq(1, get_proc_num())].
 
 now_priority() ->
-    {MSec, Sec, USec} = now(),
+    {MSec, Sec, USec} = erlang:timestamp(),
     -((MSec*1000000 + Sec)*1000000 + USec).
 
 clean_priority(LifeTime) ->
@@ -594,20 +594,20 @@
 test3(Iter) ->
     ok = new(test_tbl, [{max_size, unlimited}, {life_time, unlimited}]),
     L = lists:seq(1, Iter),
-    T1 = now(),
+    T1 = erlang:timestamp(),
     lists:foreach(
       fun(N) ->
 	      ok = ?insert(test_tbl, N, N, fun() -> ok end)
       end, L),
     io:format("** average insert (size = ~p): ~p usec~n",
-	      [Iter, round(timer:now_diff(now(), T1)/Iter)]),
-    T2 = now(),
+	      [Iter, round(timer:now_diff(erlang:timestamp(), T1)/Iter)]),
+    T2 = erlang:timestamp(),
     lists:foreach(
       fun(N) ->
 	      {ok, N} = ?lookup(test_tbl, N, fun() -> ok end)
       end, L),
     io:format("** average lookup (size = ~p): ~p usec~n",
-	      [Iter, round(timer:now_diff(now(), T2)/Iter)]),
+	      [Iter, round(timer:now_diff(erlang:timestamp(), T2)/Iter)]),
     {ok, Iter} = info(test_tbl, size),
     delete(test_tbl).
 
diff -ruN --exclude '*.orig' ../deps/p1_stun/src/stun.erl ../deps/p1_stun/src/stun.erl
--- ../deps/p1_stun/src/stun.erl	2015-01-14 12:52:02.000000000 +0100
+++ ../deps/p1_stun/src/stun.erl	2015-06-25 10:22:10.000000000 +0200
@@ -583,7 +583,7 @@
     end.
 
 now_priority() ->
-    {MSec, Sec, USec} = now(),
+    {MSec, Sec, USec} = erlang:timestamp(),
     -((MSec*1000000 + Sec)*1000000 + USec).
 
 clean_treap(Treap, CleanPriority) ->
@@ -647,7 +647,7 @@
     {ok, Sock}.
 
 seed() ->
-    {A, B, C} = now(),
+    {A, B, C} = erlang:timestamp(),
     random:seed(A, B, C).
 
 prepare_response(State, Msg) ->
diff -ruN --exclude '*.orig' ../deps/p1_stun/src/stun_shaper.erl ../deps/p1_stun/src/stun_shaper.erl
--- ../deps/p1_stun/src/stun_shaper.erl	2014-05-19 04:09:58.000000000 +0200
+++ ../deps/p1_stun/src/stun_shaper.erl	2015-06-25 10:21:53.000000000 +0200
@@ -46,7 +46,7 @@
 new(none) -> none;
 new(MaxRate) when is_integer(MaxRate) ->
     #maxrate{maxrate = MaxRate, lastrate = 0.0,
-	     lasttime = now_to_usec(now())}.
+	     lasttime = now_to_usec(erlang:timestamp())}.
 
 -spec update(shaper(), integer()) -> {shaper(), integer()}.
 
@@ -54,13 +54,13 @@
 update(#maxrate{} = State, Size) ->
     MinInterv = 1000 * Size /
 		  (2 * State#maxrate.maxrate - State#maxrate.lastrate),
-    Interv = (now_to_usec(now()) - State#maxrate.lasttime) /
+    Interv = (now_to_usec(erlang:timestamp()) - State#maxrate.lasttime) /
 	       1000,
     Pause = if MinInterv > Interv ->
 		   1 + trunc(MinInterv - Interv);
 	       true -> 0
 	    end,
-    NextNow = now_to_usec(now()) + Pause * 1000,
+    NextNow = now_to_usec(erlang:timestamp()) + Pause * 1000,
     {State#maxrate{lastrate =
 		       (State#maxrate.lastrate +
 			  1000000 * Size / (NextNow - State#maxrate.lasttime))
diff -ruN --exclude '*.orig' ../deps/p1_stun/src/stun_test.erl ../deps/p1_stun/src/stun_test.erl
--- ../deps/p1_stun/src/stun_test.erl	2014-05-19 04:09:58.000000000 +0200
+++ ../deps/p1_stun/src/stun_test.erl	2015-06-25 10:21:35.000000000 +0200
@@ -356,7 +356,7 @@
     end.
 
 mk_trid() ->
-    {A, B, C} = now(),
+    {A, B, C} = erlang:timestamp(),
     random:seed(A, B, C),
     random:uniform(1 bsl 96).
 
diff -ruN --exclude '*.orig' ../deps/p1_stun/src/turn.erl ../deps/p1_stun/src/turn.erl
--- ../deps/p1_stun/src/turn.erl	2014-05-19 04:09:58.000000000 +0200
+++ ../deps/p1_stun/src/turn.erl	2015-06-25 10:16:52.000000000 +0200
@@ -64,8 +64,8 @@
 	 realm = <<"">>                 :: binary(),
 	 key = {<<"">>, <<"">>, <<"">>} :: {binary(), binary(), binary()},
 	 server_name = <<"">>           :: binary(),
-	 permissions = ?DICT:new()      :: dict(),
-	 channels = ?DICT:new()         :: dict(),
+	 permissions = ?DICT:new()      :: dict:dict(),
+	 channels = ?DICT:new()         :: dict:dict(),
 	 max_permissions                :: non_neg_integer() | atom(),
 	 relay_ip = {127,0,0,1}         :: inet:ip_address(),
 	 min_port = 49152               :: non_neg_integer(),
@@ -117,7 +117,7 @@
 	    ok
     end,
     TRef = erlang:start_timer(?DEFAULT_LIFETIME, self(), stop),
-    {A1, A2, A3} = now(),
+    {A1, A2, A3} = erlang:timestamp(),
     random:seed(A1, A2, A3),
     case turn_sm:add_allocation(AddrPort, Username, Realm, MaxAllocs, self()) of
 	ok ->
diff -ruN --exclude '*.orig' ../deps/p1_utils/src/p1_fsm.erl ../deps/p1_utils/src/p1_fsm.erl
--- ../deps/p1_utils/src/p1_fsm.erl	2014-07-28 01:40:11.000000000 +0200
+++ ../deps/p1_utils/src/p1_fsm.erl	2015-06-25 10:22:37.000000000 +0200
@@ -601,12 +601,12 @@
 			    true ->
 				 Time1
 			 end,
-	    Now = now(),
+	    Now = erlang:timestamp(),
 	    Reason = case catch rpc_call(Node, M, F, A, RPCTimeout) of
 			 {ok, Clone} ->
 			     process_flag(trap_exit, true),
 			     MRef = erlang:monitor(process, Clone),
-			     NowDiff = timer:now_diff(now(), Now) div 1000,
+			     NowDiff = timer:now_diff(erlang:timestamp(), Now) div 1000,
 			     TimeLeft = lists:max([Time1 - NowDiff, 0]),
 			     TRef = erlang:start_timer(TimeLeft, self(), timeout),
 			     relay_messages(MRef, TRef, Clone, Queue);
@@ -664,12 +664,12 @@
 			    true ->
 				 Time1
 			 end,
-	    Now = now(),
+	    Now = erlang:timestamp(),
 	    Reason = case catch rpc_call(Node, M, F, A, RPCTimeout) of
 			 {ok, Clone} ->
 			     process_flag(trap_exit, true),
 			     MRef = erlang:monitor(process, Clone),
-			     NowDiff = timer:now_diff(now(), Now) div 1000,
+			     NowDiff = timer:now_diff(erlang:timestamp(), Now) div 1000,
 			     TimeLeft = lists:max([Time1 - NowDiff, 0]),
 			     TRef = erlang:start_timer(TimeLeft, self(), timeout),
 			     relay_messages(MRef, TRef, Clone, Queue);
diff -ruN --exclude '*.orig' ../deps/riakc/src/riakc_pb_socket.erl ../deps/riakc/src/riakc_pb_socket.erl
--- ../deps/riakc/src/riakc_pb_socket.erl	2015-01-14 13:01:53.000000000 +0100
+++ ../deps/riakc/src/riakc_pb_socket.erl	2015-06-25 10:23:23.000000000 +0200
@@ -1728,7 +1728,7 @@
     end.
 
 %% @private
-mk_reqid() -> erlang:phash2(erlang:now()). % only has to be unique per-pid
+mk_reqid() -> erlang:phash2(erlang:timestamp()). % only has to be unique per-pid
 
 %% @private
 wait_for_list(ReqId) ->
