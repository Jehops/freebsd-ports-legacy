--- sys/unix/Makefile.src.orig	Thu Apr  6 02:59:04 2006
+++ sys/unix/Makefile.src	Thu May 25 01:24:10 2006
@@ -154,21 +154,21 @@
 # VULTURESCFLAGS will be passed to the sub-makefile for vultures
 OS = $(shell uname -s)
 ifeq ($(OS),FreeBSD)
-	SDL_CONFIG = sdl11-config
+#	SDL_CONFIG = sdl11-config
 	SDLMAIN = -lSDLmain-1.1
 else
 	SDL_CONFIG = sdl-config
 	SDLMAIN = -lSDLmain
 endif
-VULTURESCFLAGS = -Wall -g
-CFLAGS = -g -I../include -I ../win/vultures $(shell $(SDL_CONFIG) --cflags)
+VULTURESCFLAGS = ${CFLAGS}
+CFLAGS += -g -I../include -I ../win/vultures $(shell $(SDL_CONFIG) --cflags)
 LFLAGS = 
 
 # The Qt and Be window systems are written in C++, while the rest of
 # NetHack is standard C.  If using Qt, uncomment the LINK line here to get
 # the C++ libraries linked in.
-CXXFLAGS = $(CFLAGS) -I. -I$(QTDIR)/include
-CXX=g++
+CXXFLAGS += $(CFLAGS) -I. -I$(QTDIR)/include
+CXX?=g++
 #LINK=g++
 #	For cross-compiling, eg. with gcc on Linux (see also CC further up):
 #CXX=arm-linux-g++
@@ -480,7 +480,7 @@
 	@rm -f $(MAKEDEFS)
 	
 ../win/vultures/build_n/vultures.o: objects.o monst.o ../include/date.h ../win/vultures/* ../win/vultures/util/*
-	@$(MAKE) -C ../win/vultures/ BUILD=nethack BASECFLAGS="$(VULTURESCFLAGS)"
+	@$(MAKE) -C ../win/vultures/ BUILD=nethack BASECFLAGS="$(VULTURESCFLAGS)" SDL_CONFIG="${SDL_CONFIG}"
 
 # Qt windowport meta-object-compiler output
 qt_kde0.moc: ../include/qt_kde0.h
