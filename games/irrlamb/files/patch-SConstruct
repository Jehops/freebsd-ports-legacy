--- SConstruct.orig	2010-01-07 06:01:43.000000000 +0300
+++ SConstruct	2010-01-15 22:36:00.000000000 +0300
@@ -6,36 +6,19 @@
 import os
 
 # Create the environment
-env = Environment()
-
-# For multiprocessors
-SetOption("num_jobs", 4)
+env = Environment(ENV=os.environ, **dict((k, v.split()) for k, v in ARGUMENTS.iteritems()))
 
 # Get the source files
 SOURCES = glob.glob("src/*.cpp") + glob.glob("src/tinyxml/*.cpp") + glob.glob("src/objects/*.cpp") + glob.glob("src/engine/*.cpp") + glob.glob("src/bullet/BulletCollision/BroadphaseCollision/*.cpp") + glob.glob("src/bullet/BulletCollision/CollisionDispatch/*.cpp") + glob.glob("src/bullet/BulletCollision/CollisionShapes/*.cpp") + glob.glob("src/bullet/BulletCollision/NarrowPhaseCollision/*.cpp") + glob.glob("src/bullet/BulletDynamics/ConstraintSolver/*.cpp") + glob.glob("src/bullet/BulletDynamics/Dynamics/*.cpp") + glob.glob("src/bullet/LinearMath/*.cpp") 
 
 # Compiler flags
-#env.Append(CCFLAGS=Split("-O0 -g3 -Wall"))
-if os.environ.has_key("CXXFLAGS"):
-	env.Append(CCFLAGS=Split((os.environ["CXXFLAGS"]) + " -O2 -DNDEBUG"))
-else:
-	env.Append(CCFLAGS=Split(" -O2 -DNDEBUG"))
-
-# Detect lua-5.1 name
-lua_name = "lua"
-lua_cpppath = "/usr/include"
-for path in ["/usr/include","/usr/local/include"]:
-	if os.path.isdir(os.path.join(path,'lua5.1')):
-		lua_name = "lua5.1"
-		lua_cpppath = lua_cpppath + "/lua5.1"
-		break
+env.Append(CCFLAGS=Split(" -DNDEBUG"))
 
 # Paths
-env.Append(CPPPATH=Split("./src/bullet " + lua_cpppath ))
-env.Append(LIBPATH="/usr/local/lib")
+env.Append(CPPPATH=Split("./src/bullet"))
 
 # Libraries
-env.Append(LIBS=Split("Irrlicht sqlite3 " + lua_name))
+env.Append(LIBS=Split("Irrlicht sqlite3 lua"))
 
 # Build the program
 irrlamb = env.Program("irrlamb", SOURCES)
