--- nonsense	2000/12/15 13:26:57	1.1.1.3
+++ nonsense	2000/12/15 13:54:30	1.6
@@ -40,6 +40,10 @@
 use POSIX qw( strftime );   # Just in case somebody needs the date
 use CGI;
 
+my $PREFIX = "/usr/local";
+my $datadir = "$PREFIX/share/nonsense/data";
+my $templatedir = "$PREFIX/share/nonsense/template";
+
 my %pool;                   # Where the datafiles are slurped into
 my %static;                 # Hash of persistent data (to maintain state)
 
@@ -328,7 +332,8 @@
 sub LoadDataFile { 
    my $file = shift;
    $file = SafeFile( $file ) if $cgi_mode;
-   open IN, $file or die "Error opening $file... $!\n";
+   open IN, $file or open IN, "$datadir/$file"
+        or die "Error opening $file... $!\n";
    local $/ = '';
    
    SECTION: while( <IN> ) { 
@@ -344,7 +349,8 @@
    my $file = shift;
    my $m = '';
    $file = SafeFile( $file ) if $cgi_mode;   
-   open IN, $file or die "Error opening $file template... $!\n";
+   open IN, $file or open IN, "$templatedir/$file"
+        or die "Error opening $file template... $!\n";
    local $/; undef $/; my $t = <IN>; 
    close IN;
    if( $t =~ /__BEGIN__/ ) {     # Check for a header
@@ -356,15 +362,29 @@
 ### Remove special characters from a filename to prevent maliciousness
 sub SafeFile {
    my( $file ) = shift;
-   $file =~ s/([|<>])//g;
+   $file =~ s/([|<>\0]|\.\.\/)//g;
    warn("[" . localtime() . "] [warning] [client $ENV{REMOTE_ADDR}] Attempt to override filename safety feature!") if $1;
    return $file;
 }
 
+sub ListUniq {
+  my ($v, $last) = (undef, undef);
+  my @l = ();
+
+  foreach $v (@_) {
+    push (@l, $v) if (defined($last) && ($v ne $last));
+    $last = $v;
+  }
+  return @l;
+}
+
 ### Return all of the datafiles in the current directory
 sub GlobCurrentDirectory {
    opendir(DIR, ".");
    my @datafiles = grep { /\.data$/ } readdir(DIR);
+   closedir(DIR);
+   opendir(DIR, "$datadir");
+   push(@datafiles, grep { /\.data$/ } readdir(DIR));
    closedir(DIR);
-   return @datafiles;
+   return ListUniq(sort @datafiles);
 }
