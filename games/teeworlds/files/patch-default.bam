--- default.bam.orig	2008-03-23 16:34:56.000000000 +0300
+++ default.bam	2008-03-23 22:39:30.000000000 +0300
@@ -207,14 +207,16 @@
 		if platform == "macosx" then
 			settings.cc.flags = "-Wall -fno-exceptions"
 		else
-			settings.cc.flags = "-Wall -fstack-protector -fstack-protector-all -fno-exceptions"
+			settings.cc.flags = settings.cc.flags .. " -Wall -fstack-protector -fstack-protector-all -fno-exceptions"
 		end
-		settings.linker.flags = ""
+		settings.linker.flags = "-L/usr/local/lib/portaudio2 -L/usr/local/lib -pthread"
+		settings.linker.libs:add("z")
 	end
 
 	-- set some platform specific settings
 	settings.cc.includes:add("src")
-	settings.cc.includes:add("src/external/zlib")
+	settings.cc.includes:add("/usr/local/include/portaudio2")
+	settings.cc.includes:add("/usr/local/include")
 
 	if family == "unix" then
    		if platform == "macosx" then
@@ -230,8 +232,6 @@
 			else
 				pa_hostapi = "oss"
 			end
-			
-			settings.linker.libs:add("pthread")
 		end
 	elseif family == "windows" then
 		glfw_platform = "win32"
@@ -263,11 +263,6 @@
 	pa_settings.cc.includes:add("src/engine/external/portaudio/src/common")
 	pa_settings.cc.includes:add("src/engine/external/portaudio/src/os/" .. pa_platform)
 	
-	portaudio = Compile(pa_settings,
-		Collect("src/engine/external/portaudio/src/common/*.c"),
-		Collect("src/engine/external/portaudio/src/os/" .. pa_platform .. "/*.c"),
-		Collect("src/engine/external/portaudio/src/hostapi/" .. pa_hostapi .. "/*.c"))
-	
 	-- build game components
 	engine_settings = settings:copy()
 	
@@ -277,9 +272,8 @@
    		if platform == "macosx" then
 			engine_settings.cc.flags = "-Wall"
 		else
-			engine_settings.cc.flags = "-Wall -pedantic-errors"
+			engine_settings.cc.flags = engine_settings.cc.flags .. " -Wall -pedantic-errors"
 		end
-		engine_settings.linker.flags = ""
 	end
 
 	-- server
@@ -299,10 +293,11 @@
 			client_settings.linker.frameworks:add("AudioToolbox")
 			client_settings.linker.frameworks:add("AudioUnit")
 		else
-            client_settings.linker.libs:add("asound")
 			client_settings.linker.libs:add("X11")
+			client_settings.linker.libs:add("Xxf86vm")
 			client_settings.linker.libs:add("GL")
 			client_settings.linker.libs:add("GLU")
+			client_settings.linker.libs:add("portaudio")
 		end
 	elseif family == "windows" then
 		client_settings.linker.libs:add("opengl32.lib")
@@ -311,7 +306,6 @@
 	end
 
 	external_settings = settings:copy()
-	zlib = Compile(external_settings, Collect("src/engine/external/zlib/*.c"))
 	wavpack = Compile(external_settings, Collect("src/engine/external/wavpack/*.c"))
 	pnglite = Compile(external_settings, Collect("src/engine/external/pnglite/*.c"))
 
@@ -337,7 +331,7 @@
 	
 	-- build client, server and master server
 	client_exe = Link(client_settings, "teeworlds", game_shared, game_client,
-		engine, client, game_editor, glfw, portaudio, zlib, pnglite, wavpack,
+		engine, client, game_editor, glfw, pnglite, wavpack,
 		client_link_other)
 
 	server_exe = Link(server_settings, "teeworlds_srv", engine, server,
@@ -383,7 +377,7 @@
 release_settings.config_name = "release"
 release_settings.config_ext = ""
 release_settings.debug = 0
-release_settings.cc.optimize = 1
+release_settings.cc.optimize = 0
 
 DefaultTarget(build(debug_settings))
 build(release_settings)
